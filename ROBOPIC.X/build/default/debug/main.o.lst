MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;----------------------------------------------------
                      00002 ;   ROBOPIC
                      00003 ;
                      00004 ;   Henry Gaddard & Matthew Hengeveld
                      00005 ;   PC316
                      00006 ;   2014
                      00007 ;----------------------------------------------------
                      00008 
                      00009     ;errorlevel -205     ;disable Warning[205]
                      00010 
                      00011 ;----------------------------------------------------
                      00012 ;   assembler directives
                      00013 ;----------------------------------------------------
                      00014         list P=PIC18F452, F=INHX32, C=160, X=ON
                      00015         #include P18F452.INC
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18F452 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      01254         LIST
22 05 0E 01 81 0F C0 000016         CONFIG  OSC = HS        ;HS oscillator
       F E0 0F 40 
                      00017         CONFIG  PWRT = OFF, BOR = OFF, BORV = 42        ;Reset
                      00018         CONFIG  WDT = OFF       ;Watchdog timer disabled
                      00019         CONFIG  CCP2MUX = ON    ;CCP2 to RC1 (rather than to RB3)
                      00020         CONFIG  LVP = OFF       ;RB5 enabled for I/O
                      00021 
                      00022 ;----------------------------------------------------
                      00023 ;   pin definitions
                      00024 ;----------------------------------------------------
                      00025 
                      00026 ;LED pins
                      00027 #define     LED_ALIVE   LATA,4
                      00028 #define     LED_RIGHT   LATA,1
                      00029 #define     LED_CENTER  LATA,2
                      00030 #define     LED_LEFT    LATA,3
                      00031 
                      00032 ;LCD pins
                      00033 #define     LCD_E       LATE,1
                      00034 #define     LCD_RS      LATE,0
                      00035 
                      00036 ;output to scope
                      00037 #define     SCOPE_PIN   LATE,2
                      00038 
                      00039 ;motor pins
                      00040 #define     MOTORA      LATB,5
                      00041 #define     MOTORB      LATB,4
                      00042 
                      00043 ;RPG pins
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00044 #define     RPG_B       PORTD,1
                      00045 #define     RPG_A       PORTD,0
                      00046 
                      00047 ;momentary button
                      00048 #define     MOM_BTN     PORTD,3
                      00049 
                      00050 ;ultrasonic trigger pin
                      00051 #define     ULTRA_TRIG  LATB,3
                      00052 #define     ULTRA_TRIG_R    PORTB,3
                      00053 
                      00054 ;----------------------------------------------------
                      00055 ;   constants
                      00056 ;----------------------------------------------------
                      00057 
                      00058 ; main timer adjustment
  000000D8            00059 mainTimerAdj    EQU     d'256' - d'40'  ;20us
  0000E783            00060 servoTimerAdj   EQU     d'65536' - d'6250' - d'19'  ;20ms
                      00061 
                      00062 ; motor speeds
  00000008            00063 mASpeed3        EQU     d'8'
  00000006            00064 mASpeed2        EQU     d'6'
  00000003            00065 mASpeed1        EQU     d'3'
  00000002            00066 mASpeeds        EQU     d'2'
  00000000            00067 mASpeedz        EQU     d'0'
                      00068 
  0000000C            00069 mBSpeed3        EQU     d'12'
  00000009            00070 mBSpeed2        EQU     d'9'
  00000005            00071 mBSpeed1        EQU     d'5'
  00000002            00072 mBSpeeds        EQU     d'2'
  00000000            00073 mBSpeedz        EQU     d'0'
                      00074 
  0000003A            00075 mASpeed0        EQU     d'58'   ;motorA: 70
  0000003C            00076 mBSpeed0        EQU     d'60'   ;motorB: 72-73
                      00077 
  00000001            00078 FORWARD         EQU     d'1'
  00000000            00079 REVERSE         EQU     d'0'
                      00080 
                      00081 ;ultrasonic constants
  0000000D            00082 ultraPulseTime  EQU     d'13'   ;number of 20us ints to set trigger high
                      00083 
                      00084 ;----------------------------------------------------
                      00085 ;   file register variables
                      00086 ;----------------------------------------------------
                      00087     cblock      0x000   ;address of variable space
                      00088 
                      00089     ;beacon input (0) or moving (1)
  00000000            00090     mode
  00000001            00091     paused
  00000002            00092     manual
                      00093 
                      00094     ;main timer variables
  00000003            00095     mainTimerL
  00000004            00096     mainTimerH
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097 
                      00098     ;variables for saving context during interrupt
  00000005            00099     tmp_W
  00000006            00100     tmp_STATUS
                      00101 
                      00102     ;events
  00000007            00103     event_RPGbeacons    ;counts down until beacons should be checked
  00000008            00104     event_printBeacons
  00000009            00105     event_LCD
  0000000A            00106     event_ultraA
  0000000B            00107     event_ultraB
  0000000C            00108     event_checkDist
  0000000D            00109     event_checkIR
  0000000E            00110     event_checkUsart
  0000000F            00111     event_search:2
  00000011            00112     event_found
  00000012            00113     event_sendTX
  00000013            00114     event_displayFreq
                      00115 
                      00116     ;main timer variables
  00000014            00117     tmp0l       ; low byte
                      00118 
  00000015            00119     tmp1l       ; low byte
  00000016            00120     tmp1h       ; high nibble
                      00121 
                      00122     ;beacon variables
  00000017            00123     beaconCount
  00000018            00124     beaconCountTmp
                      00125 
                      00126     ;momentary button flag
  00000019            00127     momBtnState
  0000001A            00128     momBtnPressed
                      00129 
                      00130     endc
                      00131 
                      00132 #include <C:\MATH18\MATHVARS.inc>
                      00001 ;;;;; MATHVARS.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ;   Memory: Data 29
                      00004 ;
                      00005 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00006 
                      00007         cblock
  0000001B            00008         AEXP                    ;AARG
  0000001C            00009         AARGB0
  0000001D            00010         AARGB1
  0000001E            00011         AARGB2
  0000001F            00012         AARGB3
  00000020            00013         AARGB4
  00000021            00014         AARGB5
  00000022            00015         AARGB6
  00000023            00016         AARGB7
                      00017 
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000024            00018         BEXP                    ;BARG
  00000025            00019         BARGB0
  00000026            00020         BARGB1
  00000027            00021         BARGB2
  00000028            00022         BARGB3
                      00023 
  00000029            00024         CEXP
  0000002A            00025         CARGB0                  ;CARG
  0000002B            00026         CARGB1
  0000002C            00027         CARGB2
  0000002D            00028         CARGB3
                      00029 
  0000002E            00030         ZARGB0                  ;ZARG
  0000002F            00031         ZARGB1
  00000030            00032         ZARGB2
  00000031            00033         ZARGB3
                      00034 
  00000032            00035         TEMPB0
  00000033            00036         TEMPB1
  00000034            00037         TEMPB2
  00000035            00038         TEMPB3
                      00039 
  00000036            00040         SIGN
  00000037            00041         FPFLAGS
                      00042         endc
                      00043 
  00000020            00044 REMB0  equ  AARGB4
  00000021            00045 REMB1  equ  AARGB5
  00000022            00046 REMB2  equ  AARGB6
  00000023            00047 REMB3  equ  AARGB7
  00000032            00048 TEMP  equ  TEMPB0
                      00049 
                      00050 
                      00210         LIST
                      00133 #include <LCDVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   LCD subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
  00000038            00005         tmpLCDsend  ; byte to send to LCD
  00000039            00006         LCD_shift_dir   ; LCD shift direction
  0000003A            00007         LCD_shift_count
                      00008 
  0000003B            00009         LCD_state
                      00010     endc
                      00134 #include <BCDVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   BCD conversion subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
                      00005         ;16 bit binary to 3 byte (6 digit) BCD conversion registers
  0000003C            00006         BCDconv:5       ;3 bytes BCD:2 bytes binary number
  00000041            00007         BCD_count       ;rotate counter
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00008 
                      00009         ;6 byte (digit) unpacked BCD holding registers
  00000042            00010         BCDunpacked:6   ;0000xxxx where xxxx is BCD number
                      00011     endc
                      00135 #include <DelayVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   delay subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
  00000048            00005         delay_count_us
  00000049            00006         delay_multi
                      00007     endc
                      00136 #include <ServoVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   Servo motor subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
  0000004A            00005         mASpeed         ;motor high time
  0000004B            00006         mADir           ;motor dir: 1 = forward
  0000004C            00007         mBSpeed         ;motor high time
  0000004D            00008         mBDir           ;motor dir: 1 = forward
                      00009 
  0000004E            00010         mAcounter       ;current times
  0000004F            00011         mBcounter
                      00012 
  00000050            00013         servoTmp
                      00014     endc
                      00137 #include <RPGVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   LCD subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
  00000051            00005         RPG_ccw             ;RPG ccw calc
  00000052            00006         RPG_sig             ;curent RPG signal
  00000053            00007         RPG_prev            ;prev RPG signal
  00000054            00008         RPG_count:2         ;RPG count (16bit)
                      00009     endc
                      00138 #include <UltrasonicVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   ultrasonic sensor subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
  00000056            00005         pulseLenTimer           ;trigger pulse high timer
  00000057            00006         ultra_sensorSel         ;which sensor to poll
  00000058            00007         ultraSonicCounter:2     ;number of 20us intervals between send signal and recieve
  0000005A            00008         ultraCurrentA:2         ;current distance from wall to UltraA
  0000005C            00009         ultraCurrentB:2         ;current distance from wall to UltraB
                      00010 
  0000005E            00011         ultraTest               ;flags to ensure only one ultrasonic sample
  0000005F            00012         ultraTest2
                      00013     endc
                      00139 #include <NavigationVARS.inc>
                      00001 ;----------------------------------------------------
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00002 ;   navigation subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
  00000060            00005         searchTime:2
                      00006 
  00000062            00007         rightTime
  00000063            00008         leftTime
                      00009 
  00000064            00010         navFlag1
                      00011     endc
                      00012 
                      00013 #define MODE                navFlag1,7
                      00014 #define SIDE_SENSOR_FAR     navFlag1,3
                      00015 #define SIDE_SENSOR_CLOSE   navFlag1,2
                      00016 #define FRONT_SENSOR        navFlag1,0
                      00140 #include <IRVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   IR beacon detection subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
  00000065            00005         IR_currentVal:2         ;current CCP value
  00000067            00006         IR_prevVal:2            ;previous CCP value
  00000069            00007         IR_freq:2               ;frequency of captured signal
                      00008     endc
                      00141 #include <USARTVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   usart subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
  0000006B            00005         RXtemp
                      00006     endc
                      00142 
                      00143 ;----------------------------------------------------
                      00144 ;   Macros
                      00145 ;----------------------------------------------------
                      00146 ; move literal to file register
                      00147 movlf   macro    literal,dest
                      00148         movlw    literal
                      00149         movwf    dest
                      00150         endm
                      00151 
                      00152 ; move address to TBLPTR
                      00153 loadTBL macro   var
                      00154         movlw   high var
                      00155         movwf   TBLPTRH
                      00156         movlw   low var
                      00157         movwf   TBLPTRL
                      00158         TBLRD*+
                      00159         endm
                      00160 
                      00161 ; delay x microseconds
                      00162 delayXu macro   X
                      00163         movlf   X,delay_count_us
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00164         call    delayus
                      00165         endm
                      00166 
                      00167 ; delay x milliseconds
                      00168 delayXm macro   X
                      00169         movlf   X,delay_multi
                      00170         call    delayms
                      00171         endm
                      00172 
                      00173 ; LCD macros
                      00174 ;-----------
                      00175 
                      00176 ; convert 16bit binary to 6 digit BCD
                      00177 macLCD_toBCD    macro   LSB, MSB
                      00178                 movff   LSB,BCDconv+4
                      00179                 movff   MSB,BCDconv+3
                      00180                 call    Bin2BCD
                      00181                 call    unpackBCD
                      00182                 endm
                      00183 
                      00184 ; print hex character to LCD
                      00185 macLCD_printHex macro   char
                      00186                 movf    char,W
                      00187                 call    LCD_printHex
                      00188                 endm
                      00189 
                      00190 ; print string to LCD
                      00191 macLCD_printString  macro   stringPtr
                      00192                     loadTBL stringPtr
                      00193                     call    LCD_printString
                      00194                     endm
                      00195 
                      00196 ; prints ACSII char to LCD
                      00197 macLCD_printChar    macro   char
                      00198                     movlf   char,tmpLCDsend
                      00199                     call    LCD_printChar
                      00200                     endm
                      00201 
                      00202 ; sets address on LCD
                      00203 macLCD_setAddr  macro   addr
                      00204                 movlf   addr,tmpLCDsend
                      00205                 call    LCD_setAddr
                      00206                 endm
                      00207 
                      00208 ; servo macros
                      00209 ;-----------
                      00210 
                      00211 ; set motor A speed
                      00212 macServo_setA   macro   speed
                      00213                 movlw   speed
                      00214                 call    servo_setA
                      00215                 endm
                      00216 
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00217 ; set motor B speed
                      00218 macServo_setB   macro   speed
                      00219                 movlw   speed
                      00220                 call    servo_setB
                      00221                 endm
                      00222 
                      00223 ; set motor A Dir
                      00224 macServo_dirA   macro   dir
                      00225                 movlw   dir
                      00226                 call    servo_dirA
                      00227                 endm
                      00228 
                      00229 ; set motor B speed
                      00230 macServo_dirB   macro   dir
                      00231                 movlw   dir
                      00232                 call    servo_dirB
                      00233                 endm
                      00234 
                      00235 ;----------------------------------------------------
                      00236 ;   Interrupt vectors
                      00237 ;----------------------------------------------------
000000                00238     org 0x0000  ;reset vector
000000 EF0E F000      00239     goto        main    ;start of program
                      00240 
000008                00241     org 0x0008  ;high priority interrupt vector
000008 EF6C F007      00242     goto        ISR_high
                      00243 
000018                00244     org 0x0018  ;low priority interrupt vector
000018 EFB1 F007      00245     goto        ISR_low
                      00246 
                      00247 ;----------------------------------------------------
                      00248 ;   main program
                      00249 ;----------------------------------------------------
00001C                00250 main
                      00251 
                      00252     ;LEDs
                      00253     movlf       b'01100001',TRISA       ;set data direction
00001C 0E61               M         movlw    b'01100001'
00001E 6E92               M         movwf    TRISA
                      00254         movlf   b'10001110',ADCON1      ;set digital/analog functions
000020 0E8E               M         movlw    b'10001110'
000022 6EC1               M         movwf    ADCON1
000024 6A80           00255         clrf    PORTA   ;initialize L, C, R LEDs to off
                      00256 
                      00257     ;I/O settings
                      00258     movlf       b'00001111',TRISD       ;set I/O for PORTD
000026 0E0F               M         movlw    b'00001111'
000028 6E95               M         movwf    TRISD
00002A 6A83           00259     clrf    PORTD
                      00260     movlf       b'00000000',TRISE       ;set I/O for PORTE
00002C 0E00               M         movlw    b'00000000'
00002E 6E96               M         movwf    TRISE
000030 6A84           00261     clrf    PORTE
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00262     movlf   b'00000110',TRISB   ;set I/O for PORTB
000032 0E06               M         movlw    b'00000110'
000034 6E93               M         movwf    TRISB
000036 6A81           00263     clrf    PORTB
                      00264     movlf   b'10100110',TRISC   ;set I/O for PORTC
000038 0EA6               M         movlw    b'10100110'
00003A 6E94               M         movwf    TRISC
00003C 6A82           00265     clrf    PORTC
                      00266 
                      00267     ;set up timers and interrupt
                      00268     movlf   b'11001000',T0CON   ;set up timer0
00003E 0EC8               M         movlw    b'11001000'
000040 6ED5               M         movwf    T0CON
000042 94F2           00269     bcf     INTCON,TMR0IF       ;clear interrupt flag
                      00270     movlf   b'00111001',T1CON   ;set up timer1
000044 0E39               M         movlw    b'00111001'
000046 6ECD               M         movwf    T1CON
000048 909E           00271     bcf     PIR1,TMR1IF         ;clear interrupt flag
                      00272     movlf   b'11011001',T3CON   ;set up timer3
00004A 0ED9               M         movlw    b'11011001'
00004C 6EB1               M         movwf    T3CON
                      00273 
                      00274     ;set to prioity interrupts
00004E 8ED0           00275     bsf     RCON,IPEN           ;enable priority interrupts
                      00276 
                      00277     ;timer0 interrupt set up
000050 8AF2           00278     bsf     INTCON,TMR0IE       ;enable interrupt
000052 8AF1           00279     bsf     INTCON2,INTEDG1     ;set int to rising edge
000054 84F1           00280     bsf     INTCON2,TMR0IP      ;set timer0 int high priority bit
                      00281 
                      00282     ;timer1 interrupt set up
000056 809D           00283     bsf     PIE1,TMR1IE         ;enable interrupt
000058 809F           00284     bsf     IPR1,TMR1IP         ;set timer0 int high priority bit
                      00285 
                      00286     ;timer3 interrupt DISABLE
00005A 92A0           00287     bcf     PIE2, TMR3IE        ;disable interrupt
                      00288 
                      00289     ;CCP1 set up
                      00290     movlf   b'00000111',CCP1CON ;CCP1 in capture mode, every rising edge
00005C 0E07               M         movlw    b'00000111'
00005E 6EBD               M         movwf    CCP1CON
000060 949F           00291     bcf     IPR1, CCP1IP        ;set CCP1 low priority bit
                      00292 ;    bsf     PIE1, CCP1IE        ;enable interrupt
                      00293 ;    bcf     PIR1, CCP1IF        ;clear interrupt flag
                      00294 
                      00295     ;set ultrasonicA external interrupt
000062 9CF0           00296     bcf     INTCON3, INT1IP     ;set ultrasonic interrupt A as low priority
                      00297 ;    bsf     INTCON3, INT1IE     ;enable external interrupt
                      00298 ;    bcf     INTCON3, INT1IF     ;clear external interrupt flag
                      00299 
                      00300     ;set ultrasonicB external interrupt
000064 9EF0           00301     bcf     INTCON3, INT2IP     ;set ultrasonic interrupt B as low priority
                      00302 ;    bsf     INTCON3, INT2IE     ;enable external interrupt
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00303 ;    bcf     INTCON3, INT2IF     ;clear external interrupt flag
                      00304 
                      00305     ;USART setup
                      00306     movlf   b'01000000',SPBRG   ;=64 -> 9.92KBAUD +0.16% error
000066 0E40               M         movlw    b'01000000'
000068 6EAF               M         movwf    SPBRG
                      00307     movlf   b'00100110',TXSTA
00006A 0E26               M         movlw    b'00100110'
00006C 6EAC               M         movwf    TXSTA
                      00308     movlf   b'10010000',RCSTA
00006E 0E90               M         movlw    b'10010000'
000070 6EAB               M         movwf    RCSTA
000072 8A9D           00309     bsf     PIE1,RCIE           ;enable receive
000074 9A9F           00310     bcf     IPR1,RCIP           ;set to low priority
000076 9A9E           00311     bcf     PIR1,RCIF           ;clear interrupt flag
000078 989D           00312     bcf     PIE1,TXIE           ;disable transmit interrupts
                      00313 
                      00314     ;global enables
00007A 8EF2           00315     bsf     INTCON, GIEH        ;enable high priority interrupts
00007C 8CF2           00316     bsf     INTCON, GIEL        ;enable low priority interrupts
                      00317 
                      00318     ;intialize LCD
00007E EC76 F004      00319     call    LCDinit
                      00320 
000082 ECAC F000      00321     call    beaconSetup
                      00322 
                      00323 ;set number of beacons to find
000086                00324 beaconLoop
                      00325 
000086 6608           00326     tstfsz  event_printBeacons
000088 D002           00327     bra     noprint
00008A ECDC F000      00328     call    printBeacons
00008E                00329 noprint
00008E 6607           00330     tstfsz  event_RPGbeacons
000090 D005           00331     bra     checkBtn
000092 D000           00332     bra     checkBeacons
                      00333 
000094                00334 checkBeacons
000094 EC8B F005      00335     call    RPG_check
000098 ECC9 F000      00336     call    beaconEntry         ;how many beacons to find?
                      00337 
00009C                00338 checkBtn
00009C ECF1 F000      00339     call    checkMomBtn
                      00340 
0000A0 661A           00341     tstfsz  momBtnPressed
0000A2 D7F1           00342     bra     beaconLoop
0000A4                00343 endBeaconLoop
                      00344 
0000A4 EC7D F000      00345     call    mainSetup
                      00346 
0000A8                00347 mainLoop
                      00348 
0000A8 6601           00349     tstfsz  paused
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000AA D7FE           00350     bra     mainLoop
                      00351     ;------------------------------------------------
                      00352     ;   always do this code
                      00353     ;------------------------------------------------
0000AC 664C           00354     tstfsz  mBSpeed             ;is speed A zero?
0000AE EC5C F005      00355     call    servoBMain          ;speed is not zero
0000B2 664A           00356     tstfsz  mASpeed             ;is speed B zero?
0000B4 EC58 F005      00357     call    servoAMain          ;speed is not zero
                      00358 
                      00359     ;   USART
                      00360     ;------------------------------------------------
0000B8 660E           00361     tstfsz  event_checkUsart
0000BA ECC1 F006      00362     call    usart_checkRX
                      00363 
0000BE 6602           00364     tstfsz  manual
0000C0 D7F3           00365     bra     mainLoop
                      00366 
0000C2 ECE3 F005      00367     call    navigate
                      00368 
                      00369 ;    ;time to search?
                      00370 ;    tstfsz  event_search
                      00371 ;    bra     noSearch
                      00372 ;    movlw   d'5'
                      00373 ;    cpfslt  event_search+1
                      00374 ;;    tstfsz  event_search
                      00375 ;    bra     noSearch
                      00376 ;
                      00377 ;    bsf     MODE
                      00378 ;    movlf   d'1',searchTime
                      00379 ;    movlf   d'100',searchTime+1
                      00380 ;    movlf   d'1',event_search
                      00381 ;    movlf   d'100',event_search+1
                      00382 
0000C6                00383 noSearch
                      00384 
                      00385     ;   ultrasonic
                      00386     ;------------------------------------------------
0000C6 B681           00387     btfsc   ULTRA_TRIG_R        ;is pulse high?
0000C8 ECBA F005      00388     call    checkPulse          ;if so, check
                      00389 
0000CC 660C           00390     tstfsz  event_checkDist     ;or should we check distance?
0000CE ECBF F005      00391     call    checkDist           ;if so, check distance
                      00392 
0000D2 660A           00393     tstfsz  event_ultraA        ;is event 0?
0000D4 D006           00394     bra     checkB              ;if not, dont trigger
0000D6 ECB1 F005      00395     call    setTrigger   ;start pulse
0000DA 6A57           00396     clrf    ultra_sensorSel
                      00397     movlf   d'20',event_ultraA  ;reset event
0000DC 0E14               M         movlw    d'20'
0000DE 6E0A               M         movwf    event_ultraA
0000E0 D007           00398     bra     noDistCheck
                      00399 
0000E2                00400 checkB
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000E2 660B           00401     tstfsz  event_ultraB        ;is event 0?
0000E4 D005           00402     bra     noDistCheck         ;if not, dont trigger
0000E6 ECB1 F005      00403     call    setTrigger   ;start pulse
0000EA 6857           00404     setf    ultra_sensorSel
                      00405     movlf   d'25',event_ultraB  ;reset event
0000EC 0E19               M         movlw    d'25'
0000EE 6E0B               M         movwf    event_ultraB
                      00406 
0000F0                00407 noDistCheck
                      00408 
                      00409     ;   IR sensor
                      00410     ;------------------------------------------------
0000F0 660D           00411     tstfsz  event_checkIR
0000F2 D002           00412     bra     noIRCheck
0000F4 EC77 F006      00413     call    IR_check
0000F8                00414 noIRCheck
                      00415 
0000F8 D7D7           00416     bra     mainLoop
                      00417 
                      00418 ;----------------------------------------------------
                      00419 ;   setup routines
                      00420 ;----------------------------------------------------
                      00421 
                      00422 ;setup for main loop
0000FA                00423 mainSetup
0000FA ECFC F004      00424     call    LCD_clear
                      00425     macLCD_printString  mess_Search     ;print "Search"
                          M                     loadTBL mess_Search
0000FE 0E0F               M         movlw   high mess_Search
000100 6EF7               M         movwf   TBLPTRH
000102 0EE0               M         movlw   low mess_Search
000104 6EF6               M         movwf   TBLPTRL
000106 0009               M         TBLRD*+
000108 ECC3 F004          M                     call    LCD_printString
                      00426 
00010C 849D           00427     bsf     PIE1, CCP1IE        ;enable CCP interrupt
00010E 949E           00428     bcf     PIR1, CCP1IF        ;clear CCP interrupt flag
                      00429 
000110 86F0           00430     bsf     INTCON3, INT1IE     ;enable ultraA external interrupt
000112 90F0           00431     bcf     INTCON3, INT1IF     ;clear external interrupt flag
                      00432 
000114 88F0           00433     bsf     INTCON3, INT2IE     ;enable ultraB external interrupt
000116 92F0           00434     bcf     INTCON3, INT2IF     ;clear external interrupt flag
                      00435 
                      00436 
                      00437     ;move ROBOPIC forward
                      00438     macServo_dirA   FORWARD
000118 0E01               M                 movlw   FORWARD
00011A EC7E F005          M                 call    servo_dirA
                      00439     macServo_setA   mASpeed2
00011E 0E06               M                 movlw   mASpeed2
000120 EC6A F005          M                 call    servo_setA
                      00440     macServo_dirB   FORWARD
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000124 0E01               M                 movlw   FORWARD
000126 EC80 F005          M                 call    servo_dirB
                      00441     macServo_setB   mBSpeed2
00012A 0E09               M                 movlw   mBSpeed2
00012C EC74 F005          M                 call    servo_setB
                      00442 
                      00443 ;    call    servo_stopA
                      00444 ;    call    servo_stopB
                      00445 
000130 6A57           00446     clrf    ultra_sensorSel
000132 6A0A           00447     clrf    event_ultraA
000134 6A0B           00448     clrf    event_ultraB
000136 680C           00449     setf    event_checkDist
                      00450     movlf   d'50',event_checkIR
000138 0E32               M         movlw    d'50'
00013A 6E0D               M         movwf    event_checkIR
00013C 6A65           00451     clrf    IR_currentVal
00013E 6A66           00452     clrf    IR_currentVal+1
000140 6A67           00453     clrf    IR_prevVal
000142 6A68           00454     clrf    IR_prevVal+1
000144 6A64           00455     clrf    navFlag1
000146 6A01           00456     clrf    paused
000148 6A02           00457     clrf    manual
00014A 6A63           00458     clrf    leftTime
00014C 6A62           00459     clrf    rightTime
                      00460     movlf   d'2',event_displayFreq
00014E 0E02               M         movlw    d'2'
000150 6E13               M         movwf    event_displayFreq
                      00461 ;    movlf   d'1',event_search
                      00462 ;    movlf   d'80',event_search+1
                      00463 ;    setf    event_checkUsart
                      00464 ;    clrf    event_sendTX
                      00465     movlf   ultraPulseTime,pulseLenTimer       ;init
000152 0E0D               M         movlw    ultraPulseTime
000154 6E56               M         movwf    pulseLenTimer
                      00466 
000156 0012           00467     return
                      00468 
                      00469 ;setup for beacon loop
000158                00470 beaconSetup
                      00471     macLCD_printString  mess_Beacons    ;print "beacons"
                          M                     loadTBL mess_Beacons
000158 0E0F               M         movlw   high mess_Beacons
00015A 6EF7               M         movwf   TBLPTRH
00015C 0ED6               M         movlw   low mess_Beacons
00015E 6EF6               M         movwf   TBLPTRL
000160 0009               M         TBLRD*+
000162 ECC3 F004          M                     call    LCD_printString
                      00472 
                      00473     movlf   0xFF,RPG_prev
000166 0EFF               M         movlw    0xFF
000168 6E53               M         movwf    RPG_prev
00016A EC8B F005      00474     call    RPG_check
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00016E ECAE F005      00475     call    RPG_resetCount      ;reset RPG counter to 0
000172 ECAB F005      00476     call    RPG_inc             ;set to 1
                      00477 
000176 6A08           00478     clrf    event_printBeacons  ;print beacons right away
                      00479     movlf   d'1',beaconCountTmp ;start at 1
000178 0E01               M         movlw    d'1'
00017A 6E18               M         movwf    beaconCountTmp
                      00480     movlf   d'1',beaconCount    ;start at 1
00017C 0E01               M         movlw    d'1'
00017E 6E17               M         movwf    beaconCount
                      00481 
000180 681A           00482     setf    momBtnPressed       ;init flag to not pressed
000182 6A19           00483     clrf    momBtnState         ;init btn state
                      00484 
                      00485     ;make ROBOPIC stationary
000184 EC66 F005      00486     call    servo_stopA
000188 EC68 F005      00487     call    servo_stopB
                      00488 
                      00489     movlf   d'1',event_RPGbeacons
00018C 0E01               M         movlw    d'1'
00018E 6E07               M         movwf    event_RPGbeacons
000190 0012           00490     return
                      00491 
                      00492 ;----------------------------------------------------
                      00493 ;   main/device routines
                      00494 ;----------------------------------------------------
                      00495 
                      00496 
                      00497 ; allows user to enter # of becons to find
000192                00498 beaconEntry
000192 0E06           00499     movlw   0x06                ;greater than 5?
000194 6255           00500     cpfseq  RPG_count+1
000196 D002           00501     bra     notHigh
000198 ECA5 F005      00502     call    RPG_dec             ;if so, go back to 5
                      00503 
00019C                00504 notHigh
00019C 0E00           00505     movlw   0x00                ;less than 1?
00019E 6255           00506     cpfseq  RPG_count+1
0001A0 D002           00507     bra     inLimits
0001A2 ECAB F005      00508     call    RPG_inc             ;if so, go back to 1
                      00509 
0001A6                00510 inLimits
                      00511 ;    macLCD_setAddr  0x40        ;print at beginning of second line
0001A6 C055 F018      00512     movff   RPG_count+1,beaconCountTmp
0001AA C055 F017      00513     movff   RPG_count+1,beaconCount
                      00514 
0001AE ECDC F000      00515     call    printBeacons
                      00516 
                      00517     movlf   d'1',event_RPGbeacons   ;reset: next check in 20ms
0001B2 0E01               M         movlw    d'1'
0001B4 6E07               M         movwf    event_RPGbeacons
0001B6 0012           00518     return
                      00519 
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00520 ;prints * for each beacon
0001B8                00521 printBeacons
                      00522     macLCD_setAddr  0x40        ;print at beginning of second line
                          M                 movlf   0x40,tmpLCDsend
0001B8 0E40               M         movlw    0x40
0001BA 6E38               M         movwf    tmpLCDsend
0001BC ECD4 F004          M                 call    LCD_setAddr
0001C0                00523 printBeaconsLoop
                      00524     macLCD_printChar    b'00101010' ;print "*" for each beacon
                          M                     movlf   b'00101010',tmpLCDsend
0001C0 0E2A               M         movlw    b'00101010'
0001C2 6E38               M         movwf    tmpLCDsend
0001C4 ECCB F004          M                     call    LCD_printChar
0001C8 2E18           00525     decfsz  beaconCountTmp
0001CA D7FA           00526     bra     printBeaconsLoop
                      00527 
                      00528     movlf   d'4',beaconCountTmp
0001CC 0E04               M         movlw    d'4'
0001CE 6E18               M         movwf    beaconCountTmp
0001D0                00529 clearBeacons
                      00530     macLCD_printChar    b'00100000' ;print " " 5 times to erase prev
                          M                     movlf   b'00100000',tmpLCDsend
0001D0 0E20               M         movlw    b'00100000'
0001D2 6E38               M         movwf    tmpLCDsend
0001D4 ECCB F004          M                     call    LCD_printChar
0001D8 2E18           00531     decfsz  beaconCountTmp
0001DA D7FA           00532     bra     clearBeacons
                      00533 
                      00534     movlf   d'4',event_printBeacons   ;reset: next check in 80ms
0001DC 0E04               M         movlw    d'4'
0001DE 6E08               M         movwf    event_printBeacons
0001E0 0012           00535     return
                      00536 
                      00537 
                      00538 ; check and debounce momentary button
0001E2                00539 checkMomBtn
0001E2 CF83 F019      00540     movff   PORTD,momBtnState
0001E6 0E08           00541     movlw   b'00001000'
0001E8 1619           00542     andwf   momBtnState
0001EA 6619           00543     tstfsz  momBtnState
0001EC D00C           00544     bra     notPressed
0001EE D000           00545     bra     pressed
0001F0                00546 pressed
                      00547     delayXm d'5'
                          M         movlf   d'5',delay_multi
0001F0 0E05               M         movlw    d'5'
0001F2 6E49               M         movwf    delay_multi
0001F4 EC51 F005          M         call    delayms
0001F8 CF83 F019      00548     movff   PORTD,momBtnState
0001FC 0E08           00549     movlw   b'00001000'
0001FE 1619           00550     andwf   momBtnState
000200 6619           00551     tstfsz  momBtnState
000202 D001           00552     bra     notPressed
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000204 6A1A           00553     clrf    momBtnPressed
000206                00554 notPressed
000206 0012           00555     return
                      00556 
                      00557 
                      00558 ;----------------------------------------------------
                      00559 ;   include statements
                      00560 ;----------------------------------------------------
                      00561 #include <C:\MATH18\FXD3216U.inc>
                      00001 ;;;;; FXD3216U.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ;       32/16 Bit Unsigned Fixed Point Divide 32/16 -> 32.16
                      00004 ;
                      00005 ;       Input:  32 bit unsigned fixed point dividend in AARGB0, AARGB1, AARGB2
                      00006 ;               16 bit unsigned fixed point divisor in BARGB0, BARGB1
                      00007 ;
                      00008 ;       Use:    CALL    FXD3216U
                      00009 ;
                      00010 ;       Output: 32 bit unsigned fixed point quotient in AARGB0, AARGB1, AARGB2
                      00011 ;               16 bit unsigned fixed point remainder in REMB0, REMB1
                      00012 ;
                      00013 ;       Result: AARG, REM  <--  AARG / BARG
                      00014 ;
                      00015 ;   Memory: Prog  
                      00016 ;           Data
                      00017 ;
                      00018 ;   Timing: Min  
                      00019 ;           Max  
                      00020 ;           Avg  
                      00021 ;
                      00022 ;   (100,000 Trials)
                      00023 ;
                      00024 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00025 
                      00026         IFNDEF _FXD3216U
                      00027         #DEFINE _FXD3216U
                      00028         #INCLUDE <C:\MATH18\FXD3208U.INC>
                      00001 ;;;;; FXD3208U.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ; 32/08 Bit Unsigned Fixed Point Divide 32/08 -> 32.08
                      00004 ;
                      00005 ;   Input:  32 bit unsigned fixed point dividend in AARGB0, AARGB1, AARGB2, AARGB3
                      00006 ;            8 bit unsigned fixed point divisor in BARGB0
                      00007 ;
                      00008 ;   Use:    CALL  FXD3208U
                      00009 ;
                      00010 ;   Output: 32 bit unsigned fixed point quotient in AARGB0, AARGB1, AARGB2, AARGB3
                      00011 ;            8 bit unsigned fixed point remainder in REMB0
                      00012 ;
                      00013 ;   Result: AARG, REM  <--  AARG / BARG
                      00014 ;
                      00015 ;   Memory: Prog  
                      00016 ;           Data
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017 ;
                      00018 ;   Timing: Min  
                      00019 ;           Max  
                      00020 ;           Avg  
                      00021 ;
                      00022 ;   (100,000 Trials)
                      00023 ;
                      00024 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00025 
                      00026         IFNDEF _FXD3208U
                      00027         #DEFINE _FXD3208U
                      00028         #INCLUDE <C:\MATH18\FXD1608U.INC>
                      00001 ;;;;; FXD1608U.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ; 16/8 Bit Unsigned Fixed Point Divide 16/08 -> 16.08
                      00004 ;
                      00005 ;   Input:  16 bit unsigned fixed point dividend in AARGB0, AARGB1
                      00006 ;            8 bit unsigned fixed point divisor in BARGB0
                      00007 ;
                      00008 ;   Use:    CALL  FXD1608U
                      00009 ;
                      00010 ;   Output: 16 bit unsigned fixed point quotient in AARGB0, AARGB1
                      00011 ;            8 bit unsigned fixed point remainder in REMB0
                      00012 ;
                      00013 ;   Result: AARG, REM  <--  AARG / BARG
                      00014 ;
                      00015 ;   Memory: Prog  
                      00016 ;           Data 
                      00017 ;
                      00018 ;   Timing: Min  
                      00019 ;           Max  
                      00020 ;           Avg  
                      00021 ;
                      00022 ;   (100,000 Trials)
                      00023 ;
                      00024 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00025 
                      00026         IFNDEF _FXD1608U
                      00027         #DEFINE _FXD1608U
                      00028         #INCLUDE <C:\MATH18\TBL256.INC>
                      00001 ;;;;; TBL256.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ; The table IBXTBL256 is used by all routines and consists of 16-bit
                      00004 ; upper bound approximations to the reciprocal of BARGB0.
                      00005 ;
                      00006 ;   Memory: Prog 
                      00007 ;
                      00008 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00009 
                      00010         IFNDEF _TBL256
                      00011         #DEFINE _TBL256
                      00012 
000208                00013 IBXTBL256
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000208 0000           00014         DATA 0x0000
00020A 0001           00015         DATA 0x0001
00020C 8001           00016         DATA 0x8001
00020E 5556           00017         DATA 0x5556
000210 4001           00018         DATA 0x4001
000212 3334           00019         DATA 0x3334
000214 2AAB           00020         DATA 0x2AAB
000216 2493           00021         DATA 0x2493
000218 2001           00022         DATA 0x2001
00021A 1C72           00023         DATA 0x1C72
00021C 199A           00024         DATA 0x199A
00021E 1746           00025         DATA 0x1746
000220 1556           00026         DATA 0x1556
000222 13B2           00027         DATA 0x13B2
000224 124A           00028         DATA 0x124A
000226 1112           00029         DATA 0x1112
000228 1001           00030         DATA 0x1001
00022A 0F10           00031         DATA 0x0F10
00022C 0E39           00032         DATA 0x0E39
00022E 0D7A           00033         DATA 0x0D7A
000230 0CCD           00034         DATA 0x0CCD
000232 0C31           00035         DATA 0x0C31
000234 0BA3           00036         DATA 0x0BA3
000236 0B22           00037         DATA 0x0B22
000238 0AAB           00038         DATA 0x0AAB
00023A 0A3E           00039         DATA 0x0A3E
00023C 09D9           00040         DATA 0x09D9
00023E 097C           00041         DATA 0x097C
000240 0925           00042         DATA 0x0925
000242 08D4           00043         DATA 0x08D4
000244 0889           00044         DATA 0x0889
000246 0843           00045         DATA 0x0843
000248 0801           00046         DATA 0x0801
00024A 07C2           00047         DATA 0x07C2
00024C 0788           00048         DATA 0x0788
00024E 0751           00049         DATA 0x0751
000250 071D           00050         DATA 0x071D
000252 06EC           00051         DATA 0x06EC
000254 06BD           00052         DATA 0x06BD
000256 0691           00053         DATA 0x0691
000258 0667           00054         DATA 0x0667
00025A 063F           00055         DATA 0x063F
00025C 0619           00056         DATA 0x0619
00025E 05F5           00057         DATA 0x05F5
000260 05D2           00058         DATA 0x05D2
000262 05B1           00059         DATA 0x05B1
000264 0591           00060         DATA 0x0591
000266 0573           00061         DATA 0x0573
000268 0556           00062         DATA 0x0556
00026A 053A           00063         DATA 0x053A
00026C 051F           00064         DATA 0x051F
00026E 0506           00065         DATA 0x0506
000270 04ED           00066         DATA 0x04ED
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000272 04D5           00067         DATA 0x04D5
000274 04BE           00068         DATA 0x04BE
000276 04A8           00069         DATA 0x04A8
000278 0493           00070         DATA 0x0493
00027A 047E           00071         DATA 0x047E
00027C 046A           00072         DATA 0x046A
00027E 0457           00073         DATA 0x0457
000280 0445           00074         DATA 0x0445
000282 0433           00075         DATA 0x0433
000284 0422           00076         DATA 0x0422
000286 0411           00077         DATA 0x0411
000288 0401           00078         DATA 0x0401
00028A 03F1           00079         DATA 0x03F1
00028C 03E1           00080         DATA 0x03E1
00028E 03D3           00081         DATA 0x03D3
000290 03C4           00082         DATA 0x03C4
000292 03B6           00083         DATA 0x03B6
000294 03A9           00084         DATA 0x03A9
000296 039C           00085         DATA 0x039C
000298 038F           00086         DATA 0x038F
00029A 0382           00087         DATA 0x0382
00029C 0376           00088         DATA 0x0376
00029E 036A           00089         DATA 0x036A
0002A0 035F           00090         DATA 0x035F
0002A2 0354           00091         DATA 0x0354
0002A4 0349           00092         DATA 0x0349
0002A6 033E           00093         DATA 0x033E
0002A8 0334           00094         DATA 0x0334
0002AA 032A           00095         DATA 0x032A
0002AC 0320           00096         DATA 0x0320
0002AE 0316           00097         DATA 0x0316
0002B0 030D           00098         DATA 0x030D
0002B2 0304           00099         DATA 0x0304
0002B4 02FB           00100         DATA 0x02FB
0002B6 02F2           00101         DATA 0x02F2
0002B8 02E9           00102         DATA 0x02E9
0002BA 02E1           00103         DATA 0x02E1
0002BC 02D9           00104         DATA 0x02D9
0002BE 02D1           00105         DATA 0x02D1
0002C0 02C9           00106         DATA 0x02C9
0002C2 02C1           00107         DATA 0x02C1
0002C4 02BA           00108         DATA 0x02BA
0002C6 02B2           00109         DATA 0x02B2
0002C8 02AB           00110         DATA 0x02AB
0002CA 02A4           00111         DATA 0x02A4
0002CC 029D           00112         DATA 0x029D
0002CE 0296           00113         DATA 0x0296
0002D0 0290           00114         DATA 0x0290
0002D2 0289           00115         DATA 0x0289
0002D4 0283           00116         DATA 0x0283
0002D6 027D           00117         DATA 0x027D
0002D8 0277           00118         DATA 0x0277
0002DA 0271           00119         DATA 0x0271
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002DC 026B           00120         DATA 0x026B
0002DE 0265           00121         DATA 0x0265
0002E0 025F           00122         DATA 0x025F
0002E2 025A           00123         DATA 0x025A
0002E4 0254           00124         DATA 0x0254
0002E6 024F           00125         DATA 0x024F
0002E8 024A           00126         DATA 0x024A
0002EA 0244           00127         DATA 0x0244
0002EC 023F           00128         DATA 0x023F
0002EE 023A           00129         DATA 0x023A
0002F0 0235           00130         DATA 0x0235
0002F2 0231           00131         DATA 0x0231
0002F4 022C           00132         DATA 0x022C
0002F6 0227           00133         DATA 0x0227
0002F8 0223           00134         DATA 0x0223
0002FA 021E           00135         DATA 0x021E
0002FC 021A           00136         DATA 0x021A
0002FE 0215           00137         DATA 0x0215
000300 0211           00138         DATA 0x0211
000302 020D           00139         DATA 0x020D
000304 0209           00140         DATA 0x0209
000306 0205           00141         DATA 0x0205
000308 0201           00142         DATA 0x0201
00030A 01FD           00143         DATA 0x01FD
00030C 01F9           00144         DATA 0x01F9
00030E 01F5           00145         DATA 0x01F5
000310 01F1           00146         DATA 0x01F1
000312 01ED           00147         DATA 0x01ED
000314 01EA           00148         DATA 0x01EA
000316 01E6           00149         DATA 0x01E6
000318 01E2           00150         DATA 0x01E2
00031A 01DF           00151         DATA 0x01DF
00031C 01DB           00152         DATA 0x01DB
00031E 01D8           00153         DATA 0x01D8
000320 01D5           00154         DATA 0x01D5
000322 01D1           00155         DATA 0x01D1
000324 01CE           00156         DATA 0x01CE
000326 01CB           00157         DATA 0x01CB
000328 01C8           00158         DATA 0x01C8
00032A 01C4           00159         DATA 0x01C4
00032C 01C1           00160         DATA 0x01C1
00032E 01BE           00161         DATA 0x01BE
000330 01BB           00162         DATA 0x01BB
000332 01B8           00163         DATA 0x01B8
000334 01B5           00164         DATA 0x01B5
000336 01B3           00165         DATA 0x01B3
000338 01B0           00166         DATA 0x01B0
00033A 01AD           00167         DATA 0x01AD
00033C 01AA           00168         DATA 0x01AA
00033E 01A7           00169         DATA 0x01A7
000340 01A5           00170         DATA 0x01A5
000342 01A2           00171         DATA 0x01A2
000344 019F           00172         DATA 0x019F
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000346 019D           00173         DATA 0x019D
000348 019A           00174         DATA 0x019A
00034A 0198           00175         DATA 0x0198
00034C 0195           00176         DATA 0x0195
00034E 0193           00177         DATA 0x0193
000350 0190           00178         DATA 0x0190
000352 018E           00179         DATA 0x018E
000354 018B           00180         DATA 0x018B
000356 0189           00181         DATA 0x0189
000358 0187           00182         DATA 0x0187
00035A 0184           00183         DATA 0x0184
00035C 0182           00184         DATA 0x0182
00035E 0180           00185         DATA 0x0180
000360 017E           00186         DATA 0x017E
000362 017B           00187         DATA 0x017B
000364 0179           00188         DATA 0x0179
000366 0177           00189         DATA 0x0177
000368 0175           00190         DATA 0x0175
00036A 0173           00191         DATA 0x0173
00036C 0171           00192         DATA 0x0171
00036E 016F           00193         DATA 0x016F
000370 016D           00194         DATA 0x016D
000372 016B           00195         DATA 0x016B
000374 0169           00196         DATA 0x0169
000376 0167           00197         DATA 0x0167
000378 0165           00198         DATA 0x0165
00037A 0163           00199         DATA 0x0163
00037C 0161           00200         DATA 0x0161
00037E 015F           00201         DATA 0x015F
000380 015D           00202         DATA 0x015D
000382 015B           00203         DATA 0x015B
000384 0159           00204         DATA 0x0159
000386 0158           00205         DATA 0x0158
000388 0156           00206         DATA 0x0156
00038A 0154           00207         DATA 0x0154
00038C 0152           00208         DATA 0x0152
00038E 0151           00209         DATA 0x0151
000390 014F           00210         DATA 0x014F
000392 014D           00211         DATA 0x014D
000394 014B           00212         DATA 0x014B
000396 014A           00213         DATA 0x014A
000398 0148           00214         DATA 0x0148
00039A 0147           00215         DATA 0x0147
00039C 0145           00216         DATA 0x0145
00039E 0143           00217         DATA 0x0143
0003A0 0142           00218         DATA 0x0142
0003A2 0140           00219         DATA 0x0140
0003A4 013F           00220         DATA 0x013F
0003A6 013D           00221         DATA 0x013D
0003A8 013C           00222         DATA 0x013C
0003AA 013A           00223         DATA 0x013A
0003AC 0139           00224         DATA 0x0139
0003AE 0137           00225         DATA 0x0137
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003B0 0136           00226         DATA 0x0136
0003B2 0134           00227         DATA 0x0134
0003B4 0133           00228         DATA 0x0133
0003B6 0131           00229         DATA 0x0131
0003B8 0130           00230         DATA 0x0130
0003BA 012F           00231         DATA 0x012F
0003BC 012D           00232         DATA 0x012D
0003BE 012C           00233         DATA 0x012C
0003C0 012A           00234         DATA 0x012A
0003C2 0129           00235         DATA 0x0129
0003C4 0128           00236         DATA 0x0128
0003C6 0126           00237         DATA 0x0126
0003C8 0125           00238         DATA 0x0125
0003CA 0124           00239         DATA 0x0124
0003CC 0122           00240         DATA 0x0122
0003CE 0121           00241         DATA 0x0121
0003D0 0120           00242         DATA 0x0120
0003D2 011F           00243         DATA 0x011F
0003D4 011D           00244         DATA 0x011D
0003D6 011C           00245         DATA 0x011C
0003D8 011B           00246         DATA 0x011B
0003DA 011A           00247         DATA 0x011A
0003DC 0119           00248         DATA 0x0119
0003DE 0117           00249         DATA 0x0117
0003E0 0116           00250         DATA 0x0116
0003E2 0115           00251         DATA 0x0115
0003E4 0114           00252         DATA 0x0114
0003E6 0113           00253         DATA 0x0113
0003E8 0112           00254         DATA 0x0112
0003EA 0110           00255         DATA 0x0110
0003EC 010F           00256         DATA 0x010F
0003EE 010E           00257         DATA 0x010E
0003F0 010D           00258         DATA 0x010D
0003F2 010C           00259         DATA 0x010C
0003F4 010B           00260         DATA 0x010B
0003F6 010A           00261         DATA 0x010A
0003F8 0109           00262         DATA 0x0109
0003FA 0108           00263         DATA 0x0108
0003FC 0107           00264         DATA 0x0107
0003FE 0106           00265         DATA 0x0106
000400 0105           00266         DATA 0x0105
000402 0104           00267         DATA 0x0104
000404 0103           00268         DATA 0x0103
000406 0102           00269         DATA 0x0102
000408 0101           00270         DATA 0x0101
                      00271 
                      00272 
                      00273         ENDIF
                      00274 
                      00275 
                      00276 
                      00029         #INCLUDE <C:\MATH18\UTILS.INC>
                      00001 ;;;;; UTILS.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00002 ;
                      00003 ; Various utilities used by the math routines.
                      00004 ;
                      00005 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00006 
                      00007         IFNDEF _UTILS
                      00008         #DEFINE _UTILS
                      00009 
                      00010 ;;;;; DGETNRMD ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00011 ;
                      00012 ; This routine returns the normalization factor in the W register
                      00013 ;
                      00014 ;   Memory: Prog 
                      00015 ;           Data 7 (BARGB6..0)
                      00016 
00040A                00017 DGETNRMD
00040A 0E10           00018         MOVLW  0x10
00040C 6025           00019         CPFSLT  BARGB0
00040E D008           00020         BRA  DGETNRMDH
000410                00021 DGETNRMDL
000410 B625           00022         BTFSC  BARGB0,3
000412 0C10           00023         RETLW  0x10  
000414 B425           00024         BTFSC  BARGB0,2
000416 0C20           00025         RETLW  0x20  
000418 B225           00026         BTFSC  BARGB0,1
00041A 0C40           00027         RETLW  0x40
00041C B025           00028         BTFSC  BARGB0,0
00041E 0C80           00029         RETLW  0x80
000420                00030 DGETNRMDH
000420 BC25           00031         BTFSC  BARGB0,6
000422 0C02           00032         RETLW  0x02  
000424 BA25           00033         BTFSC  BARGB0,5
000426 0C04           00034         RETLW  0x04  
000428 B825           00035         BTFSC  BARGB0,4
00042A 0C08           00036         RETLW  0x08
                      00037 
                      00038 
                      00039 ;;;;; DXZERO ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00040 ;
                      00041 ; Routines for the trivial cases when the quotient is zero.
                      00042 ;
                      00043 ;   Memory: Prog 15
                      00044 ;           Data 8 (AARGB3..0 + REMB3..0)
                      00045 
00042C                00046 D3232QZERO
00042C C01F F023      00047         MOVFF  AARGB3,REMB3
000430 6A1F           00048         CLRF  AARGB3
000432                00049 D2424QZERO
000432 C01E F022      00050         MOVFF  AARGB2,REMB2
000436 6A1E           00051         CLRF  AARGB2
000438                00052 D1616QZERO
000438 C01D F021      00053         MOVFF  AARGB1,REMB1
00043C 6A1D           00054         CLRF  AARGB1
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00043E C01C F020      00055         MOVFF  AARGB0,REMB0
000442 6A1C           00056         CLRF  AARGB0
                      00057 
000444 0C00           00058         RETLW  0x00
                      00059 
000446                00060 DREMZERO8
000446 6A20           00061         CLRF  REMB0
000448 0C00           00062         RETLW  0x00
                      00063 
                      00064 
                      00065         ENDIF
                      00066 
                      00067 
                      00068 
                      00030 
00044A                00031 FXD1608U
00044A 0E01           00032         MOVLW  0x01
00044C 6425           00033         CPFSGT  BARGB0
00044E EF23 F002      00034         GOTO  DREMZERO8
                      00035 
000452                00036 FXD1608U1
000452 90D8           00037         BCF  _C
000454 6AF7           00038         CLRF  TBLPTRH
000456 3425           00039         RLCF  BARGB0,W
000458 36F7           00040         RLCF  TBLPTRH,F
00045A 0F09           00041         ADDLW  LOW (IBXTBL256+1)  ; access reciprocal table
00045C 6EF6           00042         MOVWF  TBLPTRL
00045E 0E02           00043         MOVLW  HIGH (IBXTBL256)
000460 22F7           00044         ADDWFC  TBLPTRH,F
000462 000A           00045         TBLRD  *-
                      00046 
000464                00047 FXD1608U2
000464 C01C F021      00048         MOVFF  AARGB0,REMB1
000468 C01D F020      00049         MOVFF  AARGB1,REMB0
                      00050 
00046C 50F5           00051         MOVF  TABLAT,W          ; estimate quotient
00046E 0221           00052         MULWF  REMB1
000470 CFF4 F01C      00053         MOVFF  PRODH,AARGB0
000474 CFF3 F01D      00054         MOVFF  PRODL,AARGB1
                      00055 
000478 0009           00056         TBLRD  *+
00047A 50F5           00057         MOVF  TABLAT,W
00047C 0220           00058         MULWF  REMB0
00047E CFF4 F01E      00059         MOVFF  PRODH,AARGB2
                      00060 
000482 0221           00061         MULWF  REMB1
000484 50F3           00062         MOVF  PRODL,W
000486 261E           00063         ADDWF  AARGB2,F
000488 50F4           00064         MOVF  PRODH,W
00048A 221D           00065         ADDWFC  AARGB1,F
00048C 6AE8           00066         CLRF  WREG
00048E 221C           00067         ADDWFC  AARGB0,F
                      00068 
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000490 000A           00069         TBLRD  *-
000492 50F5           00070         MOVF  TABLAT,W
000494 0220           00071         MULWF  REMB0
000496 50F3           00072         MOVF  PRODL,W
000498 261E           00073         ADDWF  AARGB2,F
00049A 50F4           00074         MOVF  PRODH,W
00049C 221D           00075         ADDWFC  AARGB1,F
00049E 6AE8           00076         CLRF  WREG
0004A0 221C           00077         ADDWFC  AARGB0,F
                      00078         
0004A2 5025           00079         MOVF  BARGB0,W
0004A4 021D           00080         MULWF  AARGB1
0004A6 CFF3 F01F      00081         MOVFF  PRODL,AARGB3
0004AA CFF4 F01E      00082         MOVFF  PRODH,AARGB2
0004AE 021C           00083         MULWF  AARGB0
0004B0 50F3           00084         MOVF  PRODL,W
0004B2 261E           00085         ADDWF  AARGB2,F
                      00086 
0004B4 501F           00087         MOVF  AARGB3,W          ; estimate remainder
0004B6 5E20           00088         SUBWF  REMB0,F
0004B8 501E           00089         MOVF  AARGB2,W
0004BA 5A21           00090         SUBWFB  REMB1,F
                      00091 
0004BC AE21           00092         BTFSS  REMB1,MSB        ; test remainder
0004BE 0C00           00093         RETLW  0x00
                      00094 
0004C0 061D           00095         DECF  AARGB1,F
0004C2 6AE8           00096         CLRF  WREG
0004C4 5A1C           00097         SUBWFB  AARGB0,F
                      00098 
0004C6 5025           00099         MOVF  BARGB0,W
0004C8 2620           00100         ADDWF  REMB0,F
                      00101 
0004CA 0C00           00102         RETLW  0x00
                      00103 
                      00104 
                      00105         ENDIF
                      00029 
0004CC                00030 FXD3208U
0004CC C01C F032      00031         MOVFF  AARGB0,TEMPB0
0004D0 C01D F033      00032         MOVFF  AARGB1,TEMPB1
0004D4 C01E F034      00033         MOVFF  AARGB2,TEMPB2
0004D8 C01F F035      00034         MOVFF  AARGB3,TEMPB3
                      00035 
0004DC EC25 F002      00036         CALL  FXD1608U
                      00037 
0004E0 C01C F032      00038         MOVFF  AARGB0,TEMPB0
0004E4 C01D F033      00039         MOVFF  AARGB1,TEMPB1
                      00040 
0004E8 C034 F01D      00041         MOVFF  TEMPB2,AARGB1
0004EC C020 F01C      00042         MOVFF  REMB0,AARGB0
                      00043 
0004F0 EC25 F002      00044         CALL  FXD1608U
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00045 
0004F4 C01D F034      00046         MOVFF  AARGB1,TEMPB2
0004F8 C035 F01D      00047         MOVFF  TEMPB3,AARGB1
0004FC C020 F01C      00048         MOVFF  REMB0,AARGB0
                      00049 
000500 EC25 F002      00050         CALL  FXD1608U
                      00051 
000504 C01D F01F      00052         MOVFF  AARGB1,AARGB3
000508 C032 F01C      00053         MOVFF  TEMPB0,AARGB0
00050C C033 F01D      00054         MOVFF  TEMPB1,AARGB1
000510 C034 F01E      00055         MOVFF  TEMPB2,AARGB2
                      00056 
000514 0C00           00057         RETLW  0x00
                      00058 
                      00059 
                      00060         ENDIF
                      00029         #INCLUDE <C:\MATH18\FXD2416U.INC>
                      00001 ;;;;; FXD2416U.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ; 24/16 Bit Unsigned Fixed Point Divide 24/16 -> 24.16
                      00004 ;
                      00005 ;   Input:  24 bit unsigned fixed point dividend in AARGB0, AARGB1, AARGB2
                      00006 ;           16 bit unsigned fixed point divisor in BARGB0, BARGB1
                      00007 ;
                      00008 ;   Use:    CALL  FXD2416U
                      00009 ;
                      00010 ;   Output: 24 bit unsigned fixed point quotient in AARGB0, AARGB1, AARGB2
                      00011 ;           16 bit unsigned fixed point remainder in REMB0, REMB1
                      00012 ;
                      00013 ;   Result: AARG, REM  <--  AARG / BARG
                      00014 ;
                      00015 ;   Memory: Prog  
                      00016 ;           Data
                      00017 ;
                      00018 ;   Timing: Min  
                      00019 ;           Max  
                      00020 ;           Avg  
                      00021 ;
                      00022 ;   (100,000 Trials)
                      00023 ;
                      00024 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00025 
                      00026         IFNDEF _FXD2416U
                      00027         #DEFINE _FXD2416U
                      00028         #INCLUDE <C:\MATH18\FXD2408U.INC>
                      00001 ;;;;; FXD2408U.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ; 24/08 Bit Unsigned Fixed Point Divide 24/08 -> 24.08
                      00004 ;
                      00005 ;   Input:  24 bit unsigned fixed point dividend in AARGB0, AARGB1, AARGB2
                      00006 ;            8 bit unsigned fixed point divisor in BARGB0
                      00007 ;
                      00008 ;   Use:    CALL  FXD2408U
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00009 ;
                      00010 ;   Output: 24 bit unsigned fixed point quotient in AARGB0, AARGB1, AARGB2
                      00011 ;            8 bit unsigned fixed point remainder in REMB0
                      00012 ;
                      00013 ;   Result: AARG, REM  <--  AARG / BARG
                      00014 ;
                      00015 ;   Memory: Prog  (TBL256 + UTILS + FXD1608U)
                      00016 ;           Data 14 (AARGB3..0 + BARGB3..0 + CARGB2 + REMB1..0 + TEMPB2..0)
                      00017 ;
                      00018 ;   Timing: Min  
                      00019 ;           Max  
                      00020 ;           Avg  
                      00021 ;
                      00022 ;   (100,000 Trials)
                      00023 ;
                      00024 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00025 
                      00026         IFNDEF _FXD2408U
                      00027         #DEFINE _FXD2408U
                      00028         #INCLUDE <C:\MATH18\FXD1608U.INC>
                      00106 ;;;;; FXD1608U.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00107 ;
                      00108 ; 16/8 Bit Unsigned Fixed Point Divide 16/08 -> 16.08
                      00109 ;
                      00110 ;   Input:  16 bit unsigned fixed point dividend in AARGB0, AARGB1
                      00111 ;            8 bit unsigned fixed point divisor in BARGB0
                      00112 ;
                      00113 ;   Use:    CALL  FXD1608U
                      00114 ;
                      00115 ;   Output: 16 bit unsigned fixed point quotient in AARGB0, AARGB1
                      00116 ;            8 bit unsigned fixed point remainder in REMB0
                      00117 ;
                      00118 ;   Result: AARG, REM  <--  AARG / BARG
                      00119 ;
                      00120 ;   Memory: Prog  
                      00121 ;           Data 
                      00122 ;
                      00123 ;   Timing: Min  
                      00124 ;           Max  
                      00125 ;           Avg  
                      00126 ;
                      00127 ;   (100,000 Trials)
                      00128 ;
                      00129 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00130 
                      00131         IFNDEF _FXD1608U
                      00132         #DEFINE _FXD1608U
                      00133         #INCLUDE <C:\MATH18\TBL256.INC>
                      00134         #INCLUDE <C:\MATH18\UTILS.INC>
                      00135 
                      00136 FXD1608U
                      00137         MOVLW  0x01
                      00138         CPFSGT  BARGB0
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00139         GOTO  DREMZERO8
                      00140 
                      00141 FXD1608U1
                      00142         BCF  _C
                      00143         CLRF  TBLPTRH
                      00144         RLCF  BARGB0,W
                      00145         RLCF  TBLPTRH,F
                      00146         ADDLW  LOW (IBXTBL256+1)  ; access reciprocal table
                      00147         MOVWF  TBLPTRL
                      00148         MOVLW  HIGH (IBXTBL256)
                      00149         ADDWFC  TBLPTRH,F
                      00150         TBLRD  *-
                      00151 
                      00152 FXD1608U2
                      00153         MOVFF  AARGB0,REMB1
                      00154         MOVFF  AARGB1,REMB0
                      00155 
                      00156         MOVF  TABLAT,W          ; estimate quotient
                      00157         MULWF  REMB1
                      00158         MOVFF  PRODH,AARGB0
                      00159         MOVFF  PRODL,AARGB1
                      00160 
                      00161         TBLRD  *+
                      00162         MOVF  TABLAT,W
                      00163         MULWF  REMB0
                      00164         MOVFF  PRODH,AARGB2
                      00165 
                      00166         MULWF  REMB1
                      00167         MOVF  PRODL,W
                      00168         ADDWF  AARGB2,F
                      00169         MOVF  PRODH,W
                      00170         ADDWFC  AARGB1,F
                      00171         CLRF  WREG
                      00172         ADDWFC  AARGB0,F
                      00173 
                      00174         TBLRD  *-
                      00175         MOVF  TABLAT,W
                      00176         MULWF  REMB0
                      00177         MOVF  PRODL,W
                      00178         ADDWF  AARGB2,F
                      00179         MOVF  PRODH,W
                      00180         ADDWFC  AARGB1,F
                      00181         CLRF  WREG
                      00182         ADDWFC  AARGB0,F
                      00183         
                      00184         MOVF  BARGB0,W
                      00185         MULWF  AARGB1
                      00186         MOVFF  PRODL,AARGB3
                      00187         MOVFF  PRODH,AARGB2
                      00188         MULWF  AARGB0
                      00189         MOVF  PRODL,W
                      00190         ADDWF  AARGB2,F
                      00191 
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00192         MOVF  AARGB3,W          ; estimate remainder
                      00193         SUBWF  REMB0,F
                      00194         MOVF  AARGB2,W
                      00195         SUBWFB  REMB1,F
                      00196 
                      00197         BTFSS  REMB1,MSB        ; test remainder
                      00198         RETLW  0x00
                      00199 
                      00200         DECF  AARGB1,F
                      00201         CLRF  WREG
                      00202         SUBWFB  AARGB0,F
                      00203 
                      00204         MOVF  BARGB0,W
                      00205         ADDWF  REMB0,F
                      00206 
                      00207         RETLW  0x00
                      00208 
                      00209 
                      00210         ENDIF
                      00029 
000516                00030 FXD2408U
000516 C01C F032      00031         MOVFF  AARGB0,TEMPB0
00051A C01D F033      00032         MOVFF  AARGB1,TEMPB1
00051E C01E F034      00033         MOVFF  AARGB2,TEMPB2
                      00034 
000522 EC25 F002      00035         CALL  FXD1608U
                      00036 
000526 C01C F032      00037         MOVFF  AARGB0,TEMPB0
00052A C01D F033      00038         MOVFF  AARGB1,TEMPB1
                      00039 
00052E C034 F01D      00040         MOVFF  TEMPB2,AARGB1
000532 C020 F01C      00041         MOVFF  REMB0,AARGB0
                      00042 
000536 EC25 F002      00043         CALL  FXD1608U
                      00044 
00053A C01D F01E      00045         MOVFF  AARGB1,AARGB2
00053E C033 F01D      00046         MOVFF  TEMPB1,AARGB1
000542 C032 F01C      00047         MOVFF  TEMPB0,AARGB0
                      00048 
000546 0C00           00049         RETLW  0x00
                      00050 
                      00051 
                      00052         ENDIF
                      00029         #INCLUDE <C:\MATH18\FXD1616U.INC>
                      00001 ;;;;; FXD1616U.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ; 16/16 Bit Unsigned Fixed Point Divide 16/16 -> 16.16
                      00004 ;
                      00005 ;   Input:  16 bit unsigned fixed point dividend in AARGB0, AARGB1
                      00006 ;           16 bit unsigned fixed point divisor in BARGB0, BARGB1
                      00007 ;
                      00008 ;   Use:    CALL  FXD1616U
                      00009 ;
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00010 ;   Output: 16 bit unsigned fixed point quotient in AARGB0, AARGB1
                      00011 ;           16 bit unsigned fixed point remainder in REMB0, REMB1
                      00012 ;
                      00013 ;   Result: AARG, REM  <--  AARG / BARG
                      00014 ;
                      00015 ;   Memory: Prog  (TBL256 + UTILS + FXD1608U)
                      00016 ;           Data 13 (AARGB3..0 + BARGB3..0 + CARGB2 + REMB1..0 + TEMPB1..0)
                      00017 ;
                      00018 ;   Timing: Min  
                      00019 ;           Max  
                      00020 ;           Avg  
                      00021 ;
                      00022 ;   (100,000 Trials)
                      00023 ;
                      00024 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00025 
                      00026         IFNDEF _FXD1616U
                      00027         #DEFINE _FXD1616U
                      00028         #INCLUDE <C:\MATH18\FXD1608U.INC>
                      00211 ;;;;; FXD1608U.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00212 ;
                      00213 ; 16/8 Bit Unsigned Fixed Point Divide 16/08 -> 16.08
                      00214 ;
                      00215 ;   Input:  16 bit unsigned fixed point dividend in AARGB0, AARGB1
                      00216 ;            8 bit unsigned fixed point divisor in BARGB0
                      00217 ;
                      00218 ;   Use:    CALL  FXD1608U
                      00219 ;
                      00220 ;   Output: 16 bit unsigned fixed point quotient in AARGB0, AARGB1
                      00221 ;            8 bit unsigned fixed point remainder in REMB0
                      00222 ;
                      00223 ;   Result: AARG, REM  <--  AARG / BARG
                      00224 ;
                      00225 ;   Memory: Prog  
                      00226 ;           Data 
                      00227 ;
                      00228 ;   Timing: Min  
                      00229 ;           Max  
                      00230 ;           Avg  
                      00231 ;
                      00232 ;   (100,000 Trials)
                      00233 ;
                      00234 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00235 
                      00236         IFNDEF _FXD1608U
                      00237         #DEFINE _FXD1608U
                      00238         #INCLUDE <C:\MATH18\TBL256.INC>
                      00239         #INCLUDE <C:\MATH18\UTILS.INC>
                      00240 
                      00241 FXD1608U
                      00242         MOVLW  0x01
                      00243         CPFSGT  BARGB0
                      00244         GOTO  DREMZERO8
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00245 
                      00246 FXD1608U1
                      00247         BCF  _C
                      00248         CLRF  TBLPTRH
                      00249         RLCF  BARGB0,W
                      00250         RLCF  TBLPTRH,F
                      00251         ADDLW  LOW (IBXTBL256+1)  ; access reciprocal table
                      00252         MOVWF  TBLPTRL
                      00253         MOVLW  HIGH (IBXTBL256)
                      00254         ADDWFC  TBLPTRH,F
                      00255         TBLRD  *-
                      00256 
                      00257 FXD1608U2
                      00258         MOVFF  AARGB0,REMB1
                      00259         MOVFF  AARGB1,REMB0
                      00260 
                      00261         MOVF  TABLAT,W          ; estimate quotient
                      00262         MULWF  REMB1
                      00263         MOVFF  PRODH,AARGB0
                      00264         MOVFF  PRODL,AARGB1
                      00265 
                      00266         TBLRD  *+
                      00267         MOVF  TABLAT,W
                      00268         MULWF  REMB0
                      00269         MOVFF  PRODH,AARGB2
                      00270 
                      00271         MULWF  REMB1
                      00272         MOVF  PRODL,W
                      00273         ADDWF  AARGB2,F
                      00274         MOVF  PRODH,W
                      00275         ADDWFC  AARGB1,F
                      00276         CLRF  WREG
                      00277         ADDWFC  AARGB0,F
                      00278 
                      00279         TBLRD  *-
                      00280         MOVF  TABLAT,W
                      00281         MULWF  REMB0
                      00282         MOVF  PRODL,W
                      00283         ADDWF  AARGB2,F
                      00284         MOVF  PRODH,W
                      00285         ADDWFC  AARGB1,F
                      00286         CLRF  WREG
                      00287         ADDWFC  AARGB0,F
                      00288         
                      00289         MOVF  BARGB0,W
                      00290         MULWF  AARGB1
                      00291         MOVFF  PRODL,AARGB3
                      00292         MOVFF  PRODH,AARGB2
                      00293         MULWF  AARGB0
                      00294         MOVF  PRODL,W
                      00295         ADDWF  AARGB2,F
                      00296 
                      00297         MOVF  AARGB3,W          ; estimate remainder
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00298         SUBWF  REMB0,F
                      00299         MOVF  AARGB2,W
                      00300         SUBWFB  REMB1,F
                      00301 
                      00302         BTFSS  REMB1,MSB        ; test remainder
                      00303         RETLW  0x00
                      00304 
                      00305         DECF  AARGB1,F
                      00306         CLRF  WREG
                      00307         SUBWFB  AARGB0,F
                      00308 
                      00309         MOVF  BARGB0,W
                      00310         ADDWF  REMB0,F
                      00311 
                      00312         RETLW  0x00
                      00313 
                      00314 
                      00315         ENDIF
                      00029 
000548                00030 FXD1616U
000548 6625           00031         TSTFSZ  BARGB0
00054A D008           00032         BRA  D1616B0GT0
00054C C026 F025      00033         MOVFF  BARGB1,BARGB0
000550 EC25 F002      00034         CALL  FXD1608U
000554 C020 F021      00035         MOVFF  REMB0,REMB1
000558 6A20           00036         CLRF  REMB0
                      00037 
00055A 0C00           00038         RETLW  0x00
                      00039 
00055C                00040 D1616B0GT0
00055C 5025           00041         MOVF  BARGB0,W
00055E 5C1C           00042         SUBWF  AARGB0,W
000560 A0D8           00043         BTFSS  _C
000562 EF1C F002      00044         GOTO  D1616QZERO
000566 A4D8           00045         BTFSS  _Z
000568 D005           00046         BRA  D1616AGEB
                      00047 
00056A 5026           00048         MOVF  BARGB1,W
00056C 5C1D           00049         SUBWF  AARGB1,W
00056E A0D8           00050         BTFSS  _C
000570 EF1C F002      00051         GOTO  D1616QZERO
                      00052 
000574                00053 D1616AGEB
000574 C01C F032      00054         MOVFF  AARGB0,TEMPB0
000578 C01D F033      00055         MOVFF  AARGB1,TEMPB1
                      00056 
00057C C01D F02C      00057         MOVFF  AARGB1,CARGB2
000580 C01C F01D      00058         MOVFF  AARGB0,AARGB1
000584 6A1C           00059         CLRF  AARGB0
                      00060 
000586 C025 F027      00061         MOVFF  BARGB0,BARGB2
00058A C026 F028      00062         MOVFF  BARGB1,BARGB3
                      00063 
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00058E BE25           00064         BTFSC  BARGB0,MSB
000590 D01D           00065         BRA  D1616UNRMOK
                      00066 
000592 5025           00067         MOVF  BARGB0,W
000594 46E8           00068         RLNCF  WREG,F
000596 0F0B           00069         ADDLW  LOW (IBXTBL256+3)  ; access reciprocal table
000598 6EF6           00070         MOVWF  TBLPTRL
00059A 0E02           00071         MOVLW  HIGH (IBXTBL256)
00059C 6AF7           00072         CLRF  TBLPTRH
00059E 22F7           00073         ADDWFC  TBLPTRH,F
0005A0 0008           00074         TBLRD  *
                      00075 
0005A2 50F5           00076         MOVF  TABLAT,W          ; normalize
0005A4 0228           00077         MULWF  BARGB3
0005A6 CFF3 F026      00078         MOVFF  PRODL,BARGB1
0005AA CFF4 F025      00079         MOVFF  PRODH,BARGB0
0005AE 0227           00080         MULWF  BARGB2
0005B0 50F3           00081         MOVF  PRODL,W
0005B2 2625           00082         ADDWF  BARGB0,F
                      00083 
0005B4 50F5           00084         MOVF  TABLAT,W
0005B6 0233           00085         MULWF  TEMPB1
0005B8 CFF3 F02C      00086         MOVFF  PRODL,CARGB2
0005BC CFF4 F01D      00087         MOVFF  PRODH,AARGB1
0005C0 0232           00088         MULWF  TEMPB0
0005C2 50F3           00089         MOVF  PRODL,W
0005C4 261D           00090         ADDWF  AARGB1,F
0005C6 6A1C           00091         CLRF  AARGB0
0005C8 50F4           00092         MOVF  PRODH,W
0005CA 221C           00093         ADDWFC  AARGB0,F
                      00094 
0005CC                00095 D1616UNRMOK
0005CC EC29 F002      00096         CALL  FXD1608U1         ; estimate quotient digit
                      00097 
0005D0 501D           00098         MOVF  AARGB1,W
0005D2 0226           00099         MULWF  BARGB1
                      00100 
0005D4 50F3           00101         MOVF  PRODL,W
0005D6 5C2C           00102         SUBWF  CARGB2,W
0005D8 50F4           00103         MOVF  PRODH,W
0005DA 5820           00104         SUBWFB  REMB0,W
                      00105 
0005DC A0D8           00106         BTFSS  _C               ; test
0005DE 061D           00107         DECF  AARGB1,F
                      00108 
0005E0                00109 D1616UQOK
0005E0 501D           00110         MOVF  AARGB1,W          ; calculate remainder
0005E2 0228           00111         MULWF  BARGB3
0005E4 50F3           00112         MOVF  PRODL,W
0005E6 5E33           00113         SUBWF  TEMPB1,F
0005E8 50F4           00114         MOVF  PRODH,W
0005EA 5A32           00115         SUBWFB  TEMPB0,F
                      00116 
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005EC 501D           00117         MOVF  AARGB1,W
0005EE 0227           00118         MULWF  BARGB2
0005F0 50F3           00119         MOVF  PRODL,W
0005F2 5E32           00120         SUBWF  TEMPB0,F
                      00121 
                      00122 ; This test does not appear to be necessary in the 16 bit case, but
                      00123 ; is included here in the event that a case appears after testing.
                      00124 
                      00125 ;  BTFSS  TEMPB0,MSB  ; test
                      00126 ;  GOTO  D1616QOK
                      00127 ;  DECF  AARGB1
                      00128 
                      00129 ;  MOVF  BARGB3,W
                      00130 ;  ADDWF  TEMPB1
                      00131 ;  MOVF  BARGB2,W
                      00132 ;  ADDWFC  TEMPB0
                      00133 
0005F4                00134 D1616QOK
0005F4 C032 F020      00135         MOVFF  TEMPB0,REMB0
0005F8 C033 F021      00136         MOVFF  TEMPB1,REMB1
                      00137 
0005FC 0C00           00138         RETLW  0x00
                      00139 
                      00140 
                      00141         ENDIF
                      00030 
0005FE                00031 FXD2416U
0005FE 6A20           00032         CLRF  REMB0
000600 6A21           00033         CLRF  REMB1
000602 6AE8           00034         CLRF  WREG
000604 6625           00035         TSTFSZ  BARGB0
000606 D008           00036         BRA  D2416BGT1
000608 C026 F025      00037         MOVFF  BARGB1,BARGB0
00060C EC8B F002      00038         CALL  FXD2408U
000610 C020 F021      00039         MOVFF  REMB0,REMB1
000614 6A20           00040         CLRF  REMB0
000616 0C00           00041         RETLW  0x00
                      00042 
000618                00043 D2416BGT1
000618 621C           00044         CPFSEQ  AARGB0
00061A D00C           00045         BRA  D2416AGTB
00061C C01D F01C      00046         MOVFF  AARGB1,AARGB0
000620 C01E F01D      00047         MOVFF  AARGB2,AARGB1
000624 ECA4 F002      00048         CALL  FXD1616U
                      00049         
000628 C01D F01E      00050         MOVFF  AARGB1,AARGB2
00062C C01C F01D      00051         MOVFF  AARGB0,AARGB1
000630 6A1C           00052         CLRF  AARGB0
000632 0C00           00053         RETLW  0x00
000634                00054 D2416AGTB
000634 C01E F01F      00055         MOVFF  AARGB2,AARGB3
000638 C01D F01E      00056         MOVFF  AARGB1,AARGB2
00063C C01C F01D      00057         MOVFF  AARGB0,AARGB1
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000640 6A1C           00058         CLRF  AARGB0
                      00059 
000642 C01C F032      00060         MOVFF  AARGB0,TEMPB0
000646 C01D F033      00061         MOVFF  AARGB1,TEMPB1
00064A C01E F034      00062         MOVFF  AARGB2,TEMPB2
00064E C01F F035      00063         MOVFF  AARGB3,TEMPB3
                      00064 
000652 0E02           00065         MOVLW  0x02             ; set loop count
000654 6E1B           00066         MOVWF  AEXP
                      00067 
000656 0E01           00068         MOVLW  0x01
000658 6E2E           00069         MOVWF  ZARGB0
                      00070 
00065A BE25           00071         BTFSC  BARGB0,MSB
00065C D01C           00072         BRA  D2416UNRMOK
                      00073 
00065E EC05 F002      00074         CALL  DGETNRMD          ; get normalization factor
000662 6E2E           00075         MOVWF  ZARGB0
                      00076 
000664 0226           00077         MULWF  BARGB1
000666 5025           00078         MOVF  BARGB0,W
000668 CFF3 F026      00079         MOVFF  PRODL,BARGB1
00066C CFF4 F025      00080         MOVFF  PRODH,BARGB0
000670 022E           00081         MULWF  ZARGB0
000672 50F3           00082         MOVF  PRODL,W
000674 2625           00083         ADDWF  BARGB0,F
                      00084 
000676 502E           00085         MOVF  ZARGB0,W
000678 021F           00086         MULWF  AARGB3
00067A CFF3 F035      00087         MOVFF  PRODL,TEMPB3
00067E CFF4 F034      00088         MOVFF  PRODH,TEMPB2
000682 021D           00089         MULWF  AARGB1
000684 CFF3 F033      00090         MOVFF  PRODL,TEMPB1
000688 CFF4 F032      00091         MOVFF  PRODH,TEMPB0
00068C 021E           00092         MULWF  AARGB2
00068E 50F3           00093         MOVF  PRODL,W
000690 2634           00094         ADDWF  TEMPB2,F
000692 50F4           00095         MOVF  PRODH,W
000694 2633           00096         ADDWF  TEMPB1,F
                      00097 
000696                00098 D2416UNRMOK
000696 90D8           00099         BCF  _C
000698 6AF7           00100         CLRF  TBLPTRH
00069A 3425           00101         RLCF  BARGB0,W
00069C 36F7           00102         RLCF  TBLPTRH,F
00069E 0F09           00103         ADDLW  LOW (IBXTBL256+1)  ; access reciprocal table
0006A0 6EF6           00104         MOVWF  TBLPTRL
0006A2 0E02           00105         MOVLW  HIGH (IBXTBL256)
0006A4 22F7           00106         ADDWFC  TBLPTRH,F
0006A6 000A           00107         TBLRD  *-
                      00108 
0006A8                00109 D2416ULOOP
0006A8 C032 F01C      00110         MOVFF  TEMPB0,AARGB0
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006AC C033 F01D      00111         MOVFF  TEMPB1,AARGB1
                      00112 
0006B0 EC32 F002      00113         CALL  FXD1608U2         ; estimate quotient digit
                      00114 
0006B4 A01C           00115         BTFSS  AARGB0,LSB
0006B6 D008           00116         BRA  D2416UQTEST
                      00117 
0006B8 681D           00118         SETF  AARGB1
0006BA C033 F020      00119         MOVFF  TEMPB1,REMB0
0006BE 5025           00120         MOVF  BARGB0,W
0006C0 2620           00121         ADDWF  REMB0,F
                      00122 
0006C2 B0D8           00123         BTFSC  _C
0006C4 EF79 F003      00124         GOTO  D2416UQOK
                      00125 
0006C8                00126 D2416UQTEST
0006C8 501D           00127         MOVF  AARGB1,W          ; test
0006CA 0226           00128         MULWF  BARGB1
                      00129 
0006CC 50F3           00130         MOVF  PRODL,W
0006CE 5C34           00131         SUBWF  TEMPB2,W
0006D0 50F4           00132         MOVF  PRODH,W
0006D2 5820           00133         SUBWFB  REMB0,W
                      00134 
0006D4 B0D8           00135         BTFSC  _C
0006D6 D00D           00136         BRA  D2416UQOK
                      00137 
0006D8 061D           00138         DECF  AARGB1,F
                      00139 
0006DA 5025           00140         MOVF  BARGB0,W
0006DC 2620           00141         ADDWF  REMB0,F
                      00142 
0006DE B0D8           00143         BTFSC  _C
0006E0 D008           00144         BRA  D2416UQOK
                      00145 
0006E2 501D           00146         MOVF  AARGB1,W
0006E4 0226           00147         MULWF  BARGB1
                      00148 
0006E6 50F3           00149         MOVF  PRODL,W
0006E8 5C34           00150         SUBWF  TEMPB2,W
0006EA 50F4           00151         MOVF  PRODH,W
0006EC 5820           00152         SUBWFB  REMB0,W
                      00153 
0006EE A0D8           00154         BTFSS  _C
0006F0 061D           00155         DECF  AARGB1,F
                      00156 
0006F2                00157 D2416UQOK
0006F2 C01D F02F      00158         MOVFF  AARGB1,ZARGB1
                      00159 
0006F6 501D           00160         MOVF  AARGB1,W
0006F8 0226           00161         MULWF  BARGB1
0006FA 50F3           00162         MOVF  PRODL,W
0006FC 5E34           00163         SUBWF  TEMPB2,F
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006FE 50F4           00164         MOVF  PRODH,W
000700 5A33           00165         SUBWFB  TEMPB1,F
                      00166 
000702 501D           00167         MOVF  AARGB1,W
000704 0225           00168         MULWF  BARGB0
000706 50F3           00169         MOVF  PRODL,W
000708 5E33           00170         SUBWF  TEMPB1,F
00070A 50F4           00171         MOVF  PRODH,W
00070C 5A32           00172         SUBWFB  TEMPB0,F
                      00173 
00070E AE32           00174         BTFSS  TEMPB0,MSB       ; test
000710 D005           00175         BRA  D2416QOK
000712 062F           00176         DECF  ZARGB1,F
                      00177 
000714 5026           00178         MOVF  BARGB1,W
000716 2634           00179         ADDWF  TEMPB2,F
000718 5025           00180         MOVF  BARGB0,W
00071A 2233           00181         ADDWFC  TEMPB1,F
                      00182 
00071C                00183 D2416QOK
00071C 4E1B           00184         DCFSNZ  AEXP,F          ; is loop done?
00071E D009           00185         BRA  D2416FIXREM
                      00186 
000720 C02F F030      00187         MOVFF  ZARGB1,ZARGB2
                      00188 
000724 C033 F032      00189         MOVFF  TEMPB1,TEMPB0
000728 C034 F033      00190         MOVFF  TEMPB2,TEMPB1
00072C C035 F034      00191         MOVFF  TEMPB3,TEMPB2
                      00192 
000730 D7BB           00193         BRA  D2416ULOOP  
                      00194 
000732                00195 D2416FIXREM
000732 C033 F020      00196         MOVFF  TEMPB1,REMB0
000736 C034 F021      00197         MOVFF  TEMPB2,REMB1
                      00198 
00073A 0E01           00199         MOVLW  0x01
00073C 642E           00200         CPFSGT  ZARGB0
00073E D00C           00201         BRA  D2416REMOK
000740 402E           00202         RRNCF  ZARGB0,W
000742 6E25           00203         MOVWF  BARGB0
000744 EC05 F002      00204         CALL  DGETNRMD
                      00205 
000748 0234           00206         MULWF  TEMPB2
00074A CFF4 F021      00207         MOVFF  PRODH,REMB1
00074E 0233           00208         MULWF  TEMPB1
000750 50F3           00209         MOVF  PRODL,W
000752 2621           00210         ADDWF  REMB1,F
000754 CFF4 F020      00211         MOVFF  PRODH,REMB0
                      00212 
000758                00213 D2416REMOK
000758 6A1C           00214         CLRF  AARGB0
00075A C02F F01E      00215         MOVFF  ZARGB1,AARGB2
00075E C030 F01D      00216         MOVFF  ZARGB2,AARGB1
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00217 
000762 0C00           00218         RETLW  0x00
                      00219 
                      00220 
                      00221         ENDIF
                      00030 
000764                00031 FXD3216U
000764 6A20           00032         CLRF  REMB0
000766 6A21           00033         CLRF  REMB1
000768 6AE8           00034         CLRF  WREG
00076A 6625           00035         TSTFSZ  BARGB0
00076C D008           00036         BRA  D3216BGT1
00076E C026 F025      00037         MOVFF  BARGB1,BARGB0
000772 EC66 F002      00038         CALL  FXD3208U
000776 C020 F021      00039         MOVFF  REMB0,REMB1
00077A 6A20           00040         CLRF  REMB0
00077C 0C00           00041         RETLW  0x00
                      00042 
00077E                00043 D3216BGT1
00077E 621C           00044         CPFSEQ  AARGB0
000780 D010           00045         BRA  D3216AGTB
000782 C01D F01C      00046         MOVFF  AARGB1,AARGB0
000786 C01E F01D      00047         MOVFF  AARGB2,AARGB1
00078A C01F F01E      00048         MOVFF  AARGB3,AARGB2
00078E ECFF F002      00049         CALL  FXD2416U
                      00050         
000792 C01E F01F      00051         MOVFF  AARGB2,AARGB3
000796 C01D F01E      00052         MOVFF  AARGB1,AARGB2
00079A C01C F01D      00053         MOVFF  AARGB0,AARGB1
00079E 6A1C           00054         CLRF  AARGB0
0007A0 0C00           00055         RETLW  0x00
0007A2                00056 D3216AGTB
0007A2 C01F F024      00057         MOVFF  AARGB3,BEXP
0007A6 C01E F01F      00058         MOVFF  AARGB2,AARGB3
0007AA C01D F01E      00059         MOVFF  AARGB1,AARGB2
0007AE C01C F01D      00060         MOVFF  AARGB0,AARGB1
0007B2 6A1C           00061         CLRF  AARGB0
                      00062 
0007B4 C01C F032      00063         MOVFF  AARGB0,TEMPB0
0007B8 C01D F033      00064         MOVFF  AARGB1,TEMPB1
0007BC C01E F034      00065         MOVFF  AARGB2,TEMPB2
0007C0 C01F F035      00066         MOVFF  AARGB3,TEMPB3
                      00067 
0007C4 0E03           00068         MOVLW  0x03             ; set loop count
0007C6 6E1B           00069         MOVWF  AEXP
                      00070 
0007C8 0E01           00071         MOVLW  0x01
0007CA 6E2E           00072         MOVWF  ZARGB0
                      00073 
0007CC BE25           00074         BTFSC  BARGB0,MSB
0007CE D022           00075         BRA  D3216UNRMOK
                      00076 
0007D0 EC05 F002      00077         CALL  DGETNRMD          ; get normalization factor
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007D4 6E2E           00078         MOVWF  ZARGB0
                      00079 
0007D6 0226           00080         MULWF  BARGB1
0007D8 5025           00081         MOVF  BARGB0,W
0007DA CFF3 F026      00082         MOVFF  PRODL,BARGB1
0007DE CFF4 F025      00083         MOVFF  PRODH,BARGB0
0007E2 022E           00084         MULWF  ZARGB0
0007E4 50F3           00085         MOVF  PRODL,W
0007E6 2625           00086         ADDWF  BARGB0,F
                      00087 
0007E8 502E           00088         MOVF  ZARGB0,W
0007EA 021F           00089         MULWF  AARGB3
0007EC CFF3 F035      00090         MOVFF  PRODL,TEMPB3
0007F0 CFF4 F034      00091         MOVFF  PRODH,TEMPB2
0007F4 021D           00092         MULWF  AARGB1
0007F6 CFF3 F033      00093         MOVFF  PRODL,TEMPB1
0007FA CFF4 F032      00094         MOVFF  PRODH,TEMPB0
0007FE 021E           00095         MULWF  AARGB2
000800 50F3           00096         MOVF  PRODL,W
000802 2634           00097         ADDWF  TEMPB2,F
000804 50F4           00098         MOVF  PRODH,W
000806 2633           00099         ADDWF  TEMPB1,F
000808 502E           00100         MOVF  ZARGB0,W
00080A 0224           00101         MULWF  BEXP
00080C CFF3 F024      00102         MOVFF  PRODL,BEXP
000810 50F4           00103         MOVF  PRODH,W
000812 2635           00104         ADDWF  TEMPB3,F
                      00105 
000814                00106 D3216UNRMOK
000814 90D8           00107         BCF  _C
000816 6AF7           00108         CLRF  TBLPTRH
000818 3425           00109         RLCF  BARGB0,W
00081A 36F7           00110         RLCF  TBLPTRH,F
00081C 0F09           00111         ADDLW  LOW (IBXTBL256+1)  ; access reciprocal table
00081E 6EF6           00112         MOVWF  TBLPTRL
000820 0E02           00113         MOVLW  HIGH (IBXTBL256)
000822 22F7           00114         ADDWFC  TBLPTRH,F
000824 000A           00115         TBLRD  *-
                      00116 
000826                00117 D3216ULOOP
000826 C032 F01C      00118         MOVFF  TEMPB0,AARGB0
00082A C033 F01D      00119         MOVFF  TEMPB1,AARGB1
                      00120 
00082E EC32 F002      00121         CALL  FXD1608U2         ; estimate quotient digit
                      00122 
000832 A01C           00123         BTFSS  AARGB0,LSB
000834 D007           00124         BRA  D3216UQTEST
                      00125 
000836 681D           00126         SETF  AARGB1
000838 C033 F020      00127         MOVFF  TEMPB1,REMB0
00083C 5025           00128         MOVF  BARGB0,W
00083E 2620           00129         ADDWF  REMB0,F
                      00130 
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000840 B0D8           00131         BTFSC  _C               ; test
000842 D015           00132         BRA  D3216UQOK
                      00133 
000844                00134 D3216UQTEST
000844 501D           00135         MOVF  AARGB1,W
000846 0226           00136         MULWF  BARGB1
                      00137 
000848 50F3           00138         MOVF  PRODL,W
00084A 5C34           00139         SUBWF  TEMPB2,W
00084C 50F4           00140         MOVF  PRODH,W
00084E 5820           00141         SUBWFB  REMB0,W
                      00142 
000850 B0D8           00143         BTFSC  _C               ; test
000852 D00D           00144         BRA  D3216UQOK
                      00145 
000854 061D           00146         DECF  AARGB1,F
                      00147 
000856 5025           00148         MOVF  BARGB0,W
000858 2620           00149         ADDWF  REMB0,F
                      00150 
00085A B0D8           00151         BTFSC  _C               ; test
00085C D008           00152         BRA  D3216UQOK
                      00153 
00085E 501D           00154         MOVF  AARGB1,W
000860 0226           00155         MULWF  BARGB1
                      00156 
000862 50F3           00157         MOVF  PRODL,W
000864 5C34           00158         SUBWF  TEMPB2,W
000866 50F4           00159         MOVF  PRODH,W
000868 5820           00160         SUBWFB  REMB0,W
                      00161 
00086A A0D8           00162         BTFSS  _C               ; test
00086C 061D           00163         DECF  AARGB1,F
                      00164 
00086E                00165 D3216UQOK
00086E C01D F02F      00166         MOVFF  AARGB1,ZARGB1
                      00167 
000872 501D           00168         MOVF  AARGB1,W
000874 0226           00169         MULWF  BARGB1
000876 50F3           00170         MOVF  PRODL,W
000878 5E34           00171         SUBWF  TEMPB2,F
00087A 50F4           00172         MOVF  PRODH,W
00087C 5A33           00173         SUBWFB  TEMPB1,F
                      00174 
00087E 501D           00175         MOVF  AARGB1,W
000880 0225           00176         MULWF  BARGB0
000882 50F3           00177         MOVF  PRODL,W
000884 5E33           00178         SUBWF  TEMPB1,F
000886 50F4           00179         MOVF  PRODH,W
000888 5A32           00180         SUBWFB  TEMPB0,F
                      00181 
00088A AE32           00182         BTFSS  TEMPB0,MSB
00088C D005           00183         BRA  D3216QOK
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00088E 062F           00184         DECF  ZARGB1,F
                      00185 
000890 5026           00186         MOVF  BARGB1,W
000892 2634           00187         ADDWF  TEMPB2,F
000894 5025           00188         MOVF  BARGB0,W
000896 2233           00189         ADDWFC  TEMPB1,F
                      00190 
000898                00191 D3216QOK
000898 4E1B           00192         DCFSNZ  AEXP,F          ; is loop done?
00089A D00D           00193         BRA  D3216FIXREM
                      00194 
00089C C030 F031      00195         MOVFF  ZARGB2,ZARGB3
0008A0 C02F F030      00196         MOVFF  ZARGB1,ZARGB2
                      00197 
0008A4 C033 F032      00198         MOVFF  TEMPB1,TEMPB0
0008A8 C034 F033      00199         MOVFF  TEMPB2,TEMPB1
0008AC C035 F034      00200         MOVFF  TEMPB3,TEMPB2
0008B0 C024 F035      00201         MOVFF  BEXP,TEMPB3
                      00202 
0008B4 D7B8           00203         BRA  D3216ULOOP  
                      00204 
0008B6                00205 D3216FIXREM
0008B6 C033 F020      00206         MOVFF  TEMPB1,REMB0
0008BA C034 F021      00207         MOVFF  TEMPB2,REMB1
                      00208 
0008BE 0E01           00209         MOVLW  0x01
0008C0 642E           00210         CPFSGT  ZARGB0
0008C2 D00C           00211         BRA  D3216REMOK
0008C4 402E           00212         RRNCF  ZARGB0,W
0008C6 6E25           00213         MOVWF  BARGB0
0008C8 EC05 F002      00214         CALL  DGETNRMD
                      00215 
0008CC 0234           00216         MULWF  TEMPB2
0008CE CFF4 F021      00217         MOVFF  PRODH,REMB1
0008D2 0233           00218         MULWF  TEMPB1
0008D4 50F3           00219         MOVF  PRODL,W
0008D6 2621           00220         ADDWF  REMB1,F
0008D8 CFF4 F020      00221         MOVFF  PRODH,REMB0
                      00222 
0008DC                00223 D3216REMOK
0008DC 6A1C           00224         CLRF  AARGB0
0008DE C02F F01F      00225         MOVFF  ZARGB1,AARGB3
0008E2 C030 F01E      00226         MOVFF  ZARGB2,AARGB2
0008E6 C031 F01D      00227         MOVFF  ZARGB3,AARGB1
                      00228 
0008EA 0C00           00229         RETLW  0x00
                      00230 
                      00231 
                      00232         ENDIF
                      00562 #include <LCD.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   LCD subroutines
                      00003 ;----------------------------------------------------
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00004 
                      00005 ;----------------------------------------------------
                      00006 ;   LCD initialization
                      00007 ;----------------------------------------------------
0008EC                00008 LCDinit
                      00009     delayXm d'40'             ;wait 40ms
                          M         movlf   d'40',delay_multi
0008EC 0E28               M         movlw    d'40'
0008EE 6E49               M         movwf    delay_multi
0008F0 EC51 F005          M         call    delayms
                      00010 
                      00011     ;steps 1 to 7 ;knock 3 times
0008F4 908D           00012     bcf     LCD_RS  ; command mode
                      00013     movlf   b'00110000', tmpLCDsend
0008F6 0E30               M         movlw    b'00110000'
0008F8 6E38               M         movwf    tmpLCDsend
0008FA EC0A F005      00014     call    LCD_send
                      00015     delayXm d'5'             ;wait 5ms
                          M         movlf   d'5',delay_multi
0008FE 0E05               M         movlw    d'5'
000900 6E49               M         movwf    delay_multi
000902 EC51 F005          M         call    delayms
                      00016 
                      00017     movlf   b'00110000', tmpLCDsend
000906 0E30               M         movlw    b'00110000'
000908 6E38               M         movwf    tmpLCDsend
00090A EC0A F005      00018     call    LCD_send
                      00019     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
00090E 0E05               M         movlw    d'5'
000910 6E48               M         movwf    delay_count_us
000912 EC4E F005          M         call    delayus
                      00020 
                      00021     movlf   b'00110000', tmpLCDsend
000916 0E30               M         movlw    b'00110000'
000918 6E38               M         movwf    tmpLCDsend
00091A EC0A F005      00022     call    LCD_send
                      00023     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
00091E 0E05               M         movlw    d'5'
000920 6E48               M         movwf    delay_count_us
000922 EC4E F005          M         call    delayus
                      00024 
                      00025     ; steps 8 & 9
                      00026     movlf   b'00100000', tmpLCDsend  ;set interface to 4bits
000926 0E20               M         movlw    b'00100000'
000928 6E38               M         movwf    tmpLCDsend
00092A EC0A F005      00027     call    LCD_send
                      00028     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
00092E 0E05               M         movlw    d'5'
000930 6E48               M         movwf    delay_count_us
000932 EC4E F005          M         call    delayus
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00029 
                      00030     ; step 10 & 11
                      00031     movlf   b'00101000', tmpLCDsend ;4bit, 2 lines, 5x8 character
000936 0E28               M         movlw    b'00101000'
000938 6E38               M         movwf    tmpLCDsend
00093A EC0F F005      00032     call    LCD_send2
                      00033     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
00093E 0E05               M         movlw    d'5'
000940 6E48               M         movwf    delay_count_us
000942 EC4E F005          M         call    delayus
                      00034 
                      00035     ;setp 12 & 13
                      00036     movlf   b'00001000', tmpLCDsend ;display off
000946 0E08               M         movlw    b'00001000'
000948 6E38               M         movwf    tmpLCDsend
00094A EC0F F005      00037     call    LCD_send2
                      00038     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
00094E 0E05               M         movlw    d'5'
000950 6E48               M         movwf    delay_count_us
000952 EC4E F005          M         call    delayus
                      00039 
                      00040     ;step 14 & 15
000956 ECFC F004      00041     call    LCD_clear
                      00042 
                      00043     ;step 16 & 17
                      00044     movlf   b'00000110', tmpLCDsend ; inc cursor direction, display shift off
00095A 0E06               M         movlw    b'00000110'
00095C 6E38               M         movwf    tmpLCDsend
00095E EC0F F005      00045     call    LCD_send2
                      00046     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
000962 0E05               M         movlw    d'5'
000964 6E48               M         movwf    delay_count_us
000966 EC4E F005          M         call    delayus
                      00047 
                      00048     ;step 18 & delay
                      00049     movlf   b'00001110', tmpLCDsend ; display on, cursor on, blink on
00096A 0E0E               M         movlw    b'00001110'
00096C 6E38               M         movwf    tmpLCDsend
00096E EC0F F005      00050     call    LCD_send2
                      00051     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
000972 0E05               M         movlw    d'5'
000974 6E48               M         movwf    delay_count_us
000976 EC4E F005          M         call    delayus
                      00052 
00097A 0012           00053     return
                      00054 
                      00055 ;----------------------------------------------------
                      00056 ; convert from BCD to ASCII and write to LCD
                      00057 ;----------------------------------------------------
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00097C                00058 LCD_printHex
00097C 0F30           00059     addlw   0x30
00097E 6E38           00060     movwf   tmpLCDsend
000980 ECCB F004      00061     call    LCD_printChar
000984 0012           00062     return
                      00063 
                      00064 ;----------------------------------------------------
                      00065 ; write string to LCD, ending w/ null termination
                      00066 ;----------------------------------------------------
000986                00067 LCD_printString
000986 50F5           00068     movf    TABLAT, w
000988 E005           00069     bz      nullStr
00098A 6E38           00070     movwf   tmpLCDsend
00098C ECCB F004      00071     call    LCD_printChar
000990 0009           00072     TBLRD*+
000992 D7F9           00073     bra     LCD_printString
000994                00074 nullStr
000994 0012           00075     return
                      00076 
                      00077 ;----------------------------------------------------
                      00078 ; write character to LCD
                      00079 ;----------------------------------------------------
000996                00080 LCD_printChar
000996 808D           00081     bsf     LCD_RS  ;RS
000998 EC0F F005      00082     call    LCD_send2
00099C 908D           00083     bcf     LCD_RS  ;RS
                      00084     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
00099E 0E05               M         movlw    d'5'
0009A0 6E48               M         movwf    delay_count_us
0009A2 EC4E F005          M         call    delayus
0009A6 0012           00085     return
                      00086 
                      00087 ;----------------------------------------------------
                      00088 ; set address on LCD
                      00089 ;----------------------------------------------------
                      00090 ; 0x00|0x01|0x02|...|0x26|0x27; (40 characters wide)
                      00091 ; 0x40|0x41|0x42|...|0x66|0x67;
                      00092 ;----------------------------------------------------
0009A8                00093 LCD_setAddr
0009A8 908D           00094     bcf     LCD_RS          ;RS
0009AA 8E38           00095     bsf     tmpLCDsend, 7
0009AC EC0F F005      00096     call    LCD_send2
                      00097     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
0009B0 0E05               M         movlw    d'5'
0009B2 6E48               M         movwf    delay_count_us
0009B4 EC4E F005          M         call    delayus
0009B8 0012           00098     return
                      00099 
                      00100 ;----------------------------------------------------
                      00101 ;shift display
                      00102 ;----------------------------------------------------
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009BA                00103 LCD_shiftLCD
0009BA 908D           00104     bcf     LCD_RS          ;RS
                      00105     movlf   b'00011000', tmpLCDsend
0009BC 0E18               M         movlw    b'00011000'
0009BE 6E38               M         movwf    tmpLCDsend
0009C0 5039           00106     movf    LCD_shift_dir, W
0009C2 E002           00107     bz      LCD_shiftRight
0009C4 9438           00108     bcf     tmpLCDsend,2
0009C6 D001           00109     bra     LCD_shiftSend
0009C8                00110 LCD_shiftRight
0009C8 8438           00111     bsf     tmpLCDsend,2
0009CA                00112 LCD_shiftSend
0009CA EC0F F005      00113     call    LCD_send2
                      00114     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
0009CE 0E05               M         movlw    d'5'
0009D0 6E48               M         movwf    delay_count_us
0009D2 EC4E F005          M         call    delayus
0009D6 063A           00115     decf    LCD_shift_count
0009D8 E1F8           00116     bnz     LCD_shiftSend
0009DA 0012           00117     return
                      00118 
                      00119 ;----------------------------------------------------
                      00120 ; return home
                      00121 ;----------------------------------------------------
0009DC                00122 LCD_returnHome
0009DC 908D           00123     bcf     LCD_RS ;RS
0009DE 828D           00124     bsf     LCD_E ;E
                      00125     movlf   b'00000000', LATD
0009E0 0E00               M         movlw    b'00000000'
0009E2 6E8C               M         movwf    LATD
0009E4 928D           00126     bcf     LCD_E ;E
0009E6 828D           00127     bsf     LCD_E ;E
                      00128     movlf   b'00100000', LATD
0009E8 0E20               M         movlw    b'00100000'
0009EA 6E8C               M         movwf    LATD
0009EC 928D           00129     bcf     LCD_E ;E
                      00130     delayXm d'2'             ;wait 2ms
                          M         movlf   d'2',delay_multi
0009EE 0E02               M         movlw    d'2'
0009F0 6E49               M         movwf    delay_multi
0009F2 EC51 F005          M         call    delayms
0009F6 0012           00131     return
                      00132 
                      00133 ;----------------------------------------------------
                      00134 ; clear LCD
                      00135 ;----------------------------------------------------
0009F8                00136 LCD_clear
0009F8 908D           00137     bcf     LCD_RS ;RS
0009FA 828D           00138     bsf     LCD_E ;E
                      00139     movlf   b'00000000', LATD
0009FC 0E00               M         movlw    b'00000000'
0009FE 6E8C               M         movwf    LATD
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A00 928D           00140     bcf     LCD_E ;E
000A02 828D           00141     bsf     LCD_E ;E
                      00142     movlf   b'00010000', LATD
000A04 0E10               M         movlw    b'00010000'
000A06 6E8C               M         movwf    LATD
000A08 928D           00143     bcf     LCD_E ;E
                      00144     delayXm d'2'             ;wait 2ms
                          M         movlf   d'2',delay_multi
000A0A 0E02               M         movlw    d'2'
000A0C 6E49               M         movwf    delay_multi
000A0E EC51 F005          M         call    delayms
000A12 0012           00145     return
                      00146 
                      00147 ;----------------------------------------------------
                      00148 ; send 4 bits
                      00149 ;----------------------------------------------------
000A14                00150 LCD_send
000A14 828D           00151     bsf     LCD_E  ;E enable display
000A16 C038 FF8C      00152     movff   tmpLCDsend, LATD
000A1A 928D           00153     bcf     LCD_E  ;E disable display
000A1C 0012           00154     return
                      00155 
                      00156 ;----------------------------------------------------
                      00157 ; send 8 bits
                      00158 ;----------------------------------------------------
000A1E                00159 LCD_send2
000A1E 828D           00160     bsf     LCD_E  ;E enable display
000A20 C038 FF8C      00161     movff   tmpLCDsend, LATD
000A24 928D           00162     bcf     LCD_E  ;E disable display
000A26 3A38           00163     swapf   tmpLCDsend, F
000A28 828D           00164     bsf     LCD_E  ;E enable display
000A2A C038 FF8C      00165     movff   tmpLCDsend, LATD
000A2E 928D           00166     bcf     LCD_E  ;E disable display
000A30 3A38           00167     swapf   tmpLCDsend, F
000A32 0012           00168     return
                      00563 #include <BCD.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   16bit binary to BCD subroutine
                      00003 ;
                      00004 ;   binary input:
                      00005 ;       BCDconv+3 (MSB)
                      00006 ;       BCDconv+4 (LSB)
                      00007 ;   binary output:
                      00008 ;       BCDconv (MSdigits)
                      00009 ;       to
                      00010 ;       BCDconv+2 (LSdigits)
                      00011 ;----------------------------------------------------
000A34                00012 Bin2BCD
000A34 6A3E           00013     clrf    BCDconv+2           ;clear BCD output regs
000A36 6A3D           00014     clrf    BCDconv+1
000A38 6A3C           00015     clrf    BCDconv
                      00016     movlf   d'16',BCD_count     ;repeat for all 16 bits
000A3A 0E10               M         movlw    d'16'
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A3C 6E41               M         movwf    BCD_count
000A3E                00017 rotateAll
000A3E 3640           00018     rlcf    BCDconv+4           ;rotate low binary byte through carry
000A40 363F           00019     rlcf    BCDconv+3           ;rotate high binary byte through carry
                      00020 
000A42 503E           00021     movf    BCDconv+2,W         ;get low byte of BCD output
000A44 203E           00022     addwfc  BCDconv+2,W         ;add the carry bit
000A46 0007           00023     daw                         ;decimal adjust WREG
000A48 6E3E           00024     movwf   BCDconv+2           ;move back
                      00025 
000A4A 503D           00026     movf    BCDconv+1,W         ;get mid byte of BCD output
000A4C 203D           00027     addwfc  BCDconv+1,W         ;add carry bit
000A4E 0007           00028     daw                         ;decimal adjust
000A50 6E3D           00029     movwf   BCDconv+1
                      00030 
000A52 363C           00031     rlcf    BCDconv             ;rotate high byte of BCD output
000A54 2E41           00032     decfsz  BCD_count           ;if all 16 bits done, return
000A56 D7F3           00033     bra     rotateAll           ;else repeat
000A58 0012           00034     return
                      00035 
                      00036 ;----------------------------------------------------
                      00037 ;   6 digit packed BCD to unpacked BCD conversion subroutine
                      00038 ;
                      00039 ;   packed BCD input:
                      00040 ;       BCDconv (MSdigits)
                      00041 ;       to
                      00042 ;       BCDconv+2 (LSdigits)
                      00043 ;   unpacked BCD output:
                      00044 ;       BCDunpacked (MSdigit)
                      00045 ;       to
                      00046 ;       BCDconv+5 (LSdigit)
                      00047 ;----------------------------------------------------
000A5A                00048 unpackBCD
                      00049     ;copy all packed BCD registers
000A5A C03C F042      00050     movff   BCDconv, BCDunpacked
000A5E C03C F043      00051     movff   BCDconv, BCDunpacked+1
000A62 C03D F044      00052     movff   BCDconv+1, BCDunpacked+2
000A66 C03D F045      00053     movff   BCDconv+1, BCDunpacked+3
000A6A C03E F046      00054     movff   BCDconv+2, BCDunpacked+4
000A6E C03E F047      00055     movff   BCDconv+2, BCDunpacked+5
                      00056 
                      00057     ;and out all low nibbles and rotate high nibbles into low
000A72 0EF0           00058     movlw   0xf0
000A74 1642           00059     andwf   BCDunpacked, F
000A76 3242           00060     rrcf    BCDunpacked, F
000A78 3242           00061     rrcf    BCDunpacked, F
000A7A 3242           00062     rrcf    BCDunpacked, F
000A7C 3242           00063     rrcf    BCDunpacked, F
000A7E 1644           00064     andwf   BCDunpacked+2, F
000A80 3244           00065     rrcf    BCDunpacked+2, F
000A82 3244           00066     rrcf    BCDunpacked+2, F
000A84 3244           00067     rrcf    BCDunpacked+2, F
000A86 3244           00068     rrcf    BCDunpacked+2, F
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A88 1646           00069     andwf   BCDunpacked+4, F
000A8A 3246           00070     rrcf    BCDunpacked+4, F
000A8C 3246           00071     rrcf    BCDunpacked+4, F
000A8E 3246           00072     rrcf    BCDunpacked+4, F
000A90 3246           00073     rrcf    BCDunpacked+4, F
                      00074 
                      00075     ;and out all high nibbles
000A92 0E0F           00076     movlw   0x0f
000A94 1643           00077     andwf   BCDunpacked+1, F
000A96 1645           00078     andwf   BCDunpacked+3, F
000A98 1647           00079     andwf   BCDunpacked+5, F
000A9A 0012           00080     return
                      00564 #include <Delay.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   LCD subroutine
                      00003 ;----------------------------------------------------
000A9C                00004 delayus
000A9C 6648           00005     tstfsz  delay_count_us
000A9E D7FE           00006     bra     delayus
000AA0 0012           00007     return
                      00008 
000AA2                00009 delayms
                      00010     movlf   d'50',delay_count_us
000AA2 0E32               M         movlw    d'50'
000AA4 6E48               M         movwf    delay_count_us
000AA6                00011 delayms_loop
000AA6 6648           00012     tstfsz  delay_count_us
000AA8 D7FE           00013     bra     delayms_loop
000AAA 2E49           00014     decfsz  delay_multi,F
000AAC D7FA           00015     bra     delayms
000AAE 0012           00016     return
                      00565 #include <Servo.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   servo motor subroutines
                      00003 ;----------------------------------------------------
                      00004 
                      00005 ;----------------------------------------------------
                      00006 ;   servo A subroutine
                      00007 ;----------------------------------------------------
000AB0                00008 servoAMain
000AB0 664E           00009     tstfsz  mAcounter
000AB2 D001           00010     bra     servoADone
000AB4 9A8A           00011     bcf     MOTORA
000AB6                00012 servoADone
000AB6 0012           00013     return
                      00014 
                      00015 ;----------------------------------------------------
                      00016 ;   servo B subroutine
                      00017 ;----------------------------------------------------
000AB8                00018 servoBMain
000AB8 664F           00019     tstfsz  mBcounter
000ABA D007           00020     bra     servoBDone
000ABC 0000           00021     nop     ;to compensate for resolution
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000ABE 0000           00022     nop
000AC0 0000           00023     nop
000AC2 0000           00024     nop
000AC4 0000           00025     nop
000AC6 0000           00026     nop
000AC8 988A           00027     bcf     MOTORB
000ACA                00028 servoBDone
000ACA 0012           00029     return
                      00030 
                      00031 ;----------------------------------------------------
                      00032 ;   stop motor A
                      00033 ;----------------------------------------------------
000ACC                00034 servo_stopA
000ACC 6A4A           00035     clrf    mASpeed
000ACE 0012           00036     return
                      00037 
                      00038 ;----------------------------------------------------
                      00039 ;   stop motor B
                      00040 ;----------------------------------------------------
000AD0                00041 servo_stopB
000AD0 6A4C           00042     clrf    mBSpeed
000AD2 0012           00043     return
                      00044 
                      00045 ;----------------------------------------------------
                      00046 ;   set motor A speed
                      00047 ;----------------------------------------------------
000AD4                00048 servo_setA
000AD4 6E50           00049     movwf   servoTmp
000AD6 664B           00050     tstfsz  mADir               ;which direction? 1 = forward
000AD8 D003           00051     bra     servo_setAfwd
                      00052     ;move servo "backwards"
000ADA 5050           00053     movf    servoTmp,W
000ADC 083A           00054     sublw   mASpeed0
000ADE D002           00055     bra     servo_setASpeed
                      00056 
                      00057 ;move servo "forwards"
000AE0                00058 servo_setAfwd
000AE0 5050           00059     movf    servoTmp,W
000AE2 0F3A           00060     addlw   mASpeed0
                      00061 
000AE4                00062 servo_setASpeed
000AE4 6E4A           00063     movwf   mASpeed
000AE6 0012           00064     return
                      00065 
                      00066 ;----------------------------------------------------
                      00067 ;   set motor B speed
                      00068 ;----------------------------------------------------
000AE8                00069 servo_setB
000AE8 6E50           00070     movwf   servoTmp
000AEA 664D           00071     tstfsz  mBDir               ;which direction? 1 = forward
000AEC D003           00072     bra     servo_setBfwd
                      00073     ;move servo "backwards"
000AEE 5050           00074     movf    servoTmp,W
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000AF0 0F3C           00075     addlw   mBSpeed0
000AF2 D002           00076     bra     servo_setBSpeed
                      00077 
                      00078 ;move servo "forwards"
000AF4                00079 servo_setBfwd
000AF4 5050           00080     movf    servoTmp,W
000AF6 083C           00081     sublw   mBSpeed0
                      00082 
000AF8                00083 servo_setBSpeed
000AF8 6E4C           00084     movwf   mBSpeed
000AFA 0012           00085     return
                      00086 
                      00087 ;----------------------------------------------------
                      00088 ;   set motor A direction
                      00089 ;----------------------------------------------------
000AFC                00090 servo_dirA
000AFC 6E4B           00091     movwf   mADir
000AFE 0012           00092     return
                      00093 
                      00094 ;----------------------------------------------------
                      00095 ;   set motor B direction
                      00096 ;----------------------------------------------------
000B00                00097 servo_dirB
000B00 6E4D           00098     movwf   mBDir
000B02 0012           00099     return
                      00566 #include <RPG.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   RPG subroutines
                      00003 ;----------------------------------------------------
                      00004 
                      00005 ;----------------------------------------------------
                      00006 ;   gets current RPG signal
                      00007 ;----------------------------------------------------
000B04                00008 RPG_get
000B04 C052 F053      00009     movff   RPG_sig,RPG_prev        ;set prev
000B08 CF83 F052      00010     movff   PORTD,RPG_sig           ;get current signal from RPG
000B0C 0E03           00011     movlw   b'00000011'
000B0E 1652           00012     andwf   RPG_sig,F               ;clear non-sig bits
000B10 EC9B F005      00013     call    RPG_calcCCW
000B14 0012           00014     return
                      00015 
                      00016 ;----------------------------------------------------
                      00017 ;   checks for change in RPG
                      00018 ;----------------------------------------------------
000B16                00019 RPG_check
000B16 EC82 F005      00020     call    RPG_get
000B1A 5053           00021     movf    RPG_prev,W              ;did the RPG change?
000B1C 1852           00022     xorwf   RPG_sig,W
000B1E E101           00023     bnz     RPG_changed             ;if not 0, changed
000B20 D009           00024     bra     RPG_doneCheck
                      00025 
000B22                00026 RPG_changed
000B22 5052           00027     movf    RPG_sig,W               ;is the current == to the calc ccw?
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B24 1851           00028     xorwf   RPG_ccw,W
000B26 E001           00029     bz      RPG_ccwDir              ;equal
000B28 D003           00030     bra     RPG_cwDir               ;not equal
                      00031 
000B2A                00032 RPG_ccwDir
000B2A ECA5 F005      00033     call    RPG_dec
000B2E D002           00034     bra     RPG_doneCheck
                      00035 
000B30                00036 RPG_cwDir
000B30 ECAB F005      00037     call    RPG_inc
                      00038 
000B34                00039 RPG_doneCheck
000B34 0012           00040     return
                      00041 
                      00042 ;----------------------------------------------------
                      00043 ;   calculates next RPG signal if CCW
                      00044 ;----------------------------------------------------
000B36                00045 RPG_calcCCW
000B36 C053 F051      00046     movff   RPG_prev, RPG_ccw
000B3A 3251           00047     rrcf    RPG_ccw, F              ;rotate through carry
000B3C E302           00048     bnc     RPG_setz                ;if carry == 0
000B3E 9251           00049     bcf     RPG_ccw,1
000B40 D001           00050     bra     RPG_doneNext
000B42                00051 RPG_setz
000B42 8251           00052     bsf     RPG_ccw,1
000B44                00053 RPG_doneNext
000B44 0E03           00054     movlw   b'00000011'
000B46 1651           00055     andwf   RPG_ccw,F
000B48 0012           00056     return
                      00057 
                      00058 ;----------------------------------------------------
                      00059 ;   incf    RPG count
                      00060 ;----------------------------------------------------
000B4A                00061 RPG_dec
000B4A 0655           00062     decf    RPG_count+1
000B4C 0EFF           00063     movlw   0xFF
000B4E 6255           00064     cpfseq  RPG_count+1
000B50 D001           00065     bra     RPG_decDone
000B52 0654           00066     decf    RPG_count
000B54                00067 RPG_decDone
000B54 0012           00068     return
                      00069 
                      00070 ;----------------------------------------------------
                      00071 ;   decf    RPG count
                      00072 ;----------------------------------------------------
000B56                00073 RPG_inc
000B56 4A55           00074     infsnz  RPG_count+1
000B58 2A54           00075     incf    RPG_count
000B5A 0012           00076     return
                      00077 
                      00078 ;----------------------------------------------------
                      00079 ;   resets RPG count
                      00080 ;----------------------------------------------------
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B5C                00081 RPG_resetCount
000B5C 6A55           00082     clrf    RPG_count+1
000B5E 6A54           00083     clrf    RPG_count
000B60 0012           00084     return
                      00567 #include <Ultrasonic.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   Ultrasonic subroutine
                      00003 ;----------------------------------------------------
000B62                00004 setTrigger
000B62 868A           00005     bsf     ULTRA_TRIG          ;start trigger pulse
                      00006     movlf   ultraPulseTime,pulseLenTimer
000B64 0E0D               M         movlw    ultraPulseTime
000B66 6E56               M         movwf    pulseLenTimer
                      00007     ;movlf   d'255',ultraCurrentA+1
000B68 6A58           00008     clrf    ultraSonicCounter   ;reset 20us ultra counter
                      00009     movlf   d'1',ultraSonicCounter+1
000B6A 0E01               M         movlw    d'1'
000B6C 6E59               M         movwf    ultraSonicCounter+1
000B6E 6A5E           00010     clrf    ultraTest
000B70 6A5F           00011     clrf    ultraTest2
000B72 0012           00012     return
                      00013 
000B74                00014 checkPulse
000B74 6656           00015     tstfsz  pulseLenTimer       ;if 0, end pulse
000B76 D002           00016     bra     noTrigger
000B78 968A           00017     bcf     ULTRA_TRIG
000B7A 680C           00018     setf    event_checkDist
000B7C                00019 noTrigger
000B7C 0012           00020     return
                      00021 
000B7E                00022 checkDist
000B7E 6657           00023     tstfsz  ultra_sensorSel     ;which sensor to check?
000B80 D003           00024     bra     checkBDist          ;if one, check sensor B
000B82 ECC8 F005      00025     call    checkDistA          ;else check sensor A
000B86 D002           00026     bra     doneDistCheck
000B88                00027 checkBDist
000B88 ECD9 F005      00028     call    checkDistB
000B8C                00029 doneDistCheck
000B8C 6A0C           00030     clrf    event_checkDist
000B8E 0012           00031     return
                      00032 
000B90                00033 checkDistA
000B90 665A           00034     tstfsz  ultraCurrentA       ;is it more than 8 bit (255)
000B92 D009           00035     bra     wallFar
000B94 0E55           00036     movlw   d'85'               ;31cm
000B96 645B           00037     cpfsgt  ultraCurrentA+1     ;too close to wall?
000B98 D009           00038     bra     wallClose           ;turn away from wall
000B9A 0E78           00039     movlw   d'120'              ;44.5cm
000B9C 605B           00040     cpfslt  ultraCurrentA+1     ;too far from wall?
000B9E D003           00041     bra     wallFar             ;turn towards wall
000BA0 9664           00042     bcf     SIDE_SENSOR_FAR
000BA2 9464           00043     bcf     SIDE_SENSOR_CLOSE
000BA4 D005           00044     bra     cont                ;else go straight
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BA6                00045 wallFar
000BA6 8664           00046     bsf     SIDE_SENSOR_FAR
000BA8 9464           00047     bcf     SIDE_SENSOR_CLOSE
000BAA D002           00048     bra     cont
000BAC                00049 wallClose
000BAC 8464           00050     bsf     SIDE_SENSOR_CLOSE
000BAE 9664           00051     bcf     SIDE_SENSOR_FAR
000BB0                00052 cont
000BB0 0012           00053     return
                      00054 
                      00055 
000BB2                00056 checkDistB
000BB2 665C           00057     tstfsz  ultraCurrentB       ;high byte zero?
000BB4 D006           00058     bra     ultraB_good          ;if yes, >87cm
                      00059 
000BB6 0E69           00060     movlw   d'105'               ;20cm
000BB8 645D           00061     cpfsgt  ultraCurrentB+1     ;is it greater than 20cm?
000BBA D001           00062     bra     ultraB_tooClose
                      00063 
000BBC D002           00064     bra     ultraB_good
                      00065 
000BBE                00066 ultraB_tooClose
000BBE 8064           00067     bsf     FRONT_SENSOR
000BC0 D001           00068     bra     ultraBcont
                      00069 
000BC2                00070 ultraB_good
000BC2 9064           00071     bcf     FRONT_SENSOR
                      00072 
000BC4                00073 ultraBcont
000BC4 0012           00074     return
                      00568 #include <Navigation.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   navigation subroutines
                      00003 ;----------------------------------------------------
000BC6                00004 navigate
                      00005 
000BC6 0E32           00006     movlw   d'50'
000BC8 6011           00007     cpfslt  event_found
000BCA D010           00008     bra     nav_found
                      00009 
                      00010 ;    movlf   d'1',event_sendTX
                      00011     movlf   d'2',event_displayFreq
000BCC 0E02               M         movlw    d'2'
000BCE 6E13               M         movwf    event_displayFreq
                      00012 
                      00013     ;if both flags = 0, go straight
000BD0 6664           00014     tstfsz  navFlag1
000BD2 D003           00015     bra     nav_notStraight
                      00016 
000BD4 ECFC F005      00017     call    nav_straight
000BD8 D008           00018     bra     nav_done
                      00019 
000BDA                00020 nav_notStraight
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00021 
000BDA BE64           00022     btfsc   MODE
000BDC D01D           00023     bra     nav_look
                      00024 
000BDE B064           00025     btfsc   FRONT_SENSOR
000BE0 D076           00026     bra     nav_newDir
                      00027 
000BE2 B464           00028     btfsc   SIDE_SENSOR_CLOSE
000BE4 D028           00029     bra     nav_avoidWall
                      00030 
000BE6 B664           00031     btfsc   SIDE_SENSOR_FAR
000BE8 D04C           00032     bra     nav_findWall
                      00033 
000BEA                00034 nav_done
                      00035     
000BEA 0012           00036     return
                      00037 
000BEC                00038 nav_found
                      00039 
                      00040 ;    tstfsz  event_sendTX            ;send data over USART?
                      00041 ;    call    usart_sendFreq          ;yes
                      00042 
000BEC 6A13           00043     clrf    event_displayFreq
                      00044 
000BEE EC66 F005      00045     call    servo_stopA
000BF2 EC68 F005      00046     call    servo_stopB
000BF6 D7F9           00047     bra     nav_done
                      00048 
                      00049 ;sets servo speeds to same value
000BF8                00050 nav_straight
                      00051 
000BF8 9289           00052     bcf     LED_RIGHT
000BFA 8489           00053     bsf     LED_CENTER
000BFC 9689           00054     bcf     LED_LEFT
                      00055 
                      00056     macServo_dirA   FORWARD       ;if not, go straight
000BFE 0E01               M                 movlw   FORWARD
000C00 EC7E F005          M                 call    servo_dirA
                      00057     macServo_dirB   FORWARD
000C04 0E01               M                 movlw   FORWARD
000C06 EC80 F005          M                 call    servo_dirB
                      00058     macServo_setA   mASpeed3
000C0A 0E08               M                 movlw   mASpeed3
000C0C EC6A F005          M                 call    servo_setA
                      00059     macServo_setB   mBSpeed2
000C10 0E09               M                 movlw   mBSpeed2
000C12 EC74 F005          M                 call    servo_setB
                      00060 
000C16 0012           00061     return
                      00062 
000C18                00063 nav_look
000C18 8289           00064     bsf     LED_RIGHT
000C1A 9489           00065     bcf     LED_CENTER
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C1C 8689           00066     bsf     LED_LEFT
                      00067 
                      00068     macServo_dirA   FORWARD
000C1E 0E01               M                 movlw   FORWARD
000C20 EC7E F005          M                 call    servo_dirA
                      00069     macServo_dirB   REVERSE
000C24 0E00               M                 movlw   REVERSE
000C26 EC80 F005          M                 call    servo_dirB
                      00070     macServo_setA   mASpeed1
000C2A 0E03               M                 movlw   mASpeed1
000C2C EC6A F005          M                 call    servo_setA
                      00071     macServo_setB   mBSpeed1
000C30 0E05               M                 movlw   mBSpeed1
000C32 EC74 F005          M                 call    servo_setB
                      00072 
                      00073 ;;    movlw   d'5'
                      00074 ;;    cpfslt  searchTime
                      00075 ;    tstfsz  searchTime
                      00076 ;    bra     nav_done
                      00077 ;
                      00078 ;    movlw   d'5'
                      00079 ;    cpfslt  searchTime+1
                      00080 ;;    tstfsz  searchTime+1
                      00081 ;    bra     nav_done
                      00082 
                      00083 ;    bcf     MODE
                      00084 ;    movlf   d'1',event_search
                      00085 ;    movlf   d'100',event_search+1
                      00086 ;    bra     nav_done
                      00087 
000C36                00088 nav_avoidWall ;right
                      00089 
000C36 0E11           00090     movlw   d'17'
000C38 6062           00091     cpfslt  rightTime
000C3A D013           00092     bra     straightRight
                      00093 
000C3C 9289           00094     bcf     LED_RIGHT
000C3E 9489           00095     bcf     LED_CENTER
000C40 8689           00096     bsf     LED_LEFT
                      00097     ;spin
                      00098     macServo_dirA   FORWARD
000C42 0E01               M                 movlw   FORWARD
000C44 EC7E F005          M                 call    servo_dirA
                      00099     macServo_dirB   REVERSE
000C48 0E00               M                 movlw   REVERSE
000C4A EC80 F005          M                 call    servo_dirB
                      00100     macServo_setA   mASpeed3
000C4E 0E08               M                 movlw   mASpeed3
000C50 EC6A F005          M                 call    servo_setA
                      00101 ;    macServo_setB   mBSpeed2
000C54 EC68 F005      00102     call    servo_stopB
                      00103 
000C58 6662           00104     tstfsz  rightTime
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C5A D012           00105     bra     nav_avoidWall_done
                      00106     movlf   d'100',rightTime
000C5C 0E64               M         movlw    d'100'
000C5E 6E62               M         movwf    rightTime
000C60 D00F           00107     bra     nav_avoidWall_done
                      00108 
000C62                00109 straightRight
000C62 9289           00110     bcf     LED_RIGHT
000C64 8489           00111     bsf     LED_CENTER
000C66 8689           00112     bsf     LED_LEFT
                      00113     ;straight
                      00114     macServo_dirA   FORWARD
000C68 0E01               M                 movlw   FORWARD
000C6A EC7E F005          M                 call    servo_dirA
                      00115     macServo_dirB   FORWARD
000C6E 0E01               M                 movlw   FORWARD
000C70 EC80 F005          M                 call    servo_dirB
                      00116     macServo_setA   mASpeed3
000C74 0E08               M                 movlw   mASpeed3
000C76 EC6A F005          M                 call    servo_setA
                      00117     macServo_setB   mBSpeed3
000C7A 0E0C               M                 movlw   mBSpeed3
000C7C EC74 F005          M                 call    servo_setB
                      00118 
000C80                00119 nav_avoidWall_done
                      00120 ;    decf    rightTime
000C80 0012           00121     return
                      00122 
                      00123 
000C82                00124 nav_findWall    ;left
                      00125 
000C82 0E0F           00126     movlw   d'15'
000C84 6063           00127     cpfslt  leftTime
000C86 D013           00128     bra     straightLeft
                      00129 
000C88 8289           00130     bsf     LED_RIGHT
000C8A 9489           00131     bcf     LED_CENTER
000C8C 9689           00132     bcf     LED_LEFT
                      00133     ;spin
                      00134     macServo_dirA   REVERSE
000C8E 0E00               M                 movlw   REVERSE
000C90 EC7E F005          M                 call    servo_dirA
                      00135     macServo_dirB   FORWARD
000C94 0E01               M                 movlw   FORWARD
000C96 EC80 F005          M                 call    servo_dirB
                      00136 ;    macServo_setA   mASpeed2
000C9A EC66 F005      00137     call    servo_stopA
                      00138     macServo_setB   mBSpeed3
000C9E 0E0C               M                 movlw   mBSpeed3
000CA0 EC74 F005          M                 call    servo_setB
                      00139 
000CA4 6663           00140     tstfsz  leftTime
000CA6 D012           00141     bra     nav_findWall_done
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00142     movlf   d'100',leftTime
000CA8 0E64               M         movlw    d'100'
000CAA 6E63               M         movwf    leftTime
000CAC D00F           00143     bra     nav_findWall_done
                      00144 
000CAE                00145 straightLeft
000CAE 8289           00146     bsf     LED_RIGHT
000CB0 8489           00147     bsf     LED_CENTER
000CB2 9689           00148     bcf     LED_LEFT
                      00149     ;straight
                      00150     macServo_dirA   FORWARD
000CB4 0E01               M                 movlw   FORWARD
000CB6 EC7E F005          M                 call    servo_dirA
                      00151     macServo_dirB   FORWARD
000CBA 0E01               M                 movlw   FORWARD
000CBC EC80 F005          M                 call    servo_dirB
                      00152     macServo_setA   mASpeed3
000CC0 0E08               M                 movlw   mASpeed3
000CC2 EC6A F005          M                 call    servo_setA
                      00153     macServo_setB   mBSpeed3
000CC6 0E0C               M                 movlw   mBSpeed3
000CC8 EC74 F005          M                 call    servo_setB
                      00154 
000CCC                00155 nav_findWall_done
                      00156 ;    decf    leftTime
000CCC 0012           00157     return
                      00158 
000CCE                00159 nav_newDir
                      00160 
000CCE 8289           00161     bsf     LED_RIGHT
000CD0 8489           00162     bsf     LED_CENTER
000CD2 8689           00163     bsf     LED_LEFT
                      00164 
                      00165     macServo_dirA   FORWARD
000CD4 0E01               M                 movlw   FORWARD
000CD6 EC7E F005          M                 call    servo_dirA
                      00166     macServo_dirB   REVERSE
000CDA 0E00               M                 movlw   REVERSE
000CDC EC80 F005          M                 call    servo_dirB
                      00167     macServo_setA   mASpeed2
000CE0 0E06               M                 movlw   mASpeed2
000CE2 EC6A F005          M                 call    servo_setA
                      00168     macServo_setB   mBSpeed2
000CE6 0E09               M                 movlw   mBSpeed2
000CE8 EC74 F005          M                 call    servo_setB
000CEC D77E           00169     bra     nav_done
                      00569 #include <IR.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   IR subroutine
                      00003 ;----------------------------------------------------
000CEE                00004 IR_check
                      00005     ;get difference of captured value and put in divisor
000CEE 949D           00006     bcf     PIE1, CCP1IE        ;disable interrupt
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00007 
000CF0 5067           00008     movf    IR_prevVal,W
000CF2 5C65           00009     subwf   IR_currentVal,W
000CF4 6E25           00010     movwf   BARGB0
                      00011 
000CF6 5068           00012     movf    IR_prevVal+1,W
000CF8 5866           00013     subwfb  IR_currentVal+1,W
000CFA 6E26           00014     movwf   BARGB1
                      00015 
000CFC 6A27           00016     clrf    BARGB2
000CFE 6A28           00017     clrf    BARGB3
                      00018 
                      00019     ;set dividend to 20 000 000
                      00020     movlf   0x01,AARGB0
000D00 0E01               M         movlw    0x01
000D02 6E1C               M         movwf    AARGB0
                      00021     movlf   0x31,AARGB1
000D04 0E31               M         movlw    0x31
000D06 6E1D               M         movwf    AARGB1
                      00022     movlf   0x2D,AARGB2
000D08 0E2D               M         movlw    0x2D
000D0A 6E1E               M         movwf    AARGB2
                      00023     movlf   0x00,AARGB3
000D0C 0E00               M         movlw    0x00
000D0E 6E1F               M         movwf    AARGB3
000D10 6A20           00024     clrf    AARGB4
000D12 6A21           00025     clrf    AARGB5
000D14 6A22           00026     clrf    AARGB6
000D16 6A23           00027     clrf    AARGB7
                      00028 
000D18 ECB2 F003      00029     call    FXD3216U
                      00030 
000D1C C01F F040      00031     movff   AARGB3,BCDconv+4
000D20 C01E F03F      00032     movff   AARGB2,BCDconv+3
000D24 EC1A F005      00033     call    Bin2BCD
000D28 EC2D F005      00034     call    unpackBCD
                      00035 
000D2C EC40 F007      00036     call    usart_sendFreq
                      00037 
                      00038 ;    tstfsz  event_displayFreq
                      00039 ;    decf    event_displayFreq
                      00040 
000D30 6613           00041     tstfsz  event_displayFreq
000D32 D002           00042     bra     IR_done
000D34 ECA0 F006      00043     call    IR_displayFreq
                      00044 
000D38                00045 IR_done
                      00046     movlf   d'25',event_checkIR
000D38 0E19               M         movlw    d'25'
000D3A 6E0D               M         movwf    event_checkIR
                      00047 
000D3C 849D           00048     bsf     PIE1, CCP1IE        ;enable interrupt
                      00049 
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D3E 0012           00050     return
                      00051 
000D40                00052 IR_displayFreq
                      00053 
                      00054     macLCD_setAddr  0x40
                          M                 movlf   0x40,tmpLCDsend
000D40 0E40               M         movlw    0x40
000D42 6E38               M         movwf    tmpLCDsend
000D44 ECD4 F004          M                 call    LCD_setAddr
                      00055 
000D48 5044           00056     movf    BCDunpacked+2, W
                      00057     macLCD_printHex BCDunpacked+2
000D4A 5044               M                 movf    BCDunpacked+2,W
000D4C ECBE F004          M                 call    LCD_printHex
000D50 5045           00058     movf    BCDunpacked+3, W
                      00059     macLCD_printHex BCDunpacked+3
000D52 5045               M                 movf    BCDunpacked+3,W
000D54 ECBE F004          M                 call    LCD_printHex
000D58 5046           00060     movf    BCDunpacked+4, W
                      00061     macLCD_printHex BCDunpacked+4
000D5A 5046               M                 movf    BCDunpacked+4,W
000D5C ECBE F004          M                 call    LCD_printHex
000D60 5047           00062     movf    BCDunpacked+5, W
                      00063     macLCD_printHex BCDunpacked+5
000D62 5047               M                 movf    BCDunpacked+5,W
000D64 ECBE F004          M                 call    LCD_printHex
                      00064 
                      00065     macLCD_printChar    b'01001000'         ;H
                          M                     movlf   b'01001000',tmpLCDsend
000D68 0E48               M         movlw    b'01001000'
000D6A 6E38               M         movwf    tmpLCDsend
000D6C ECCB F004          M                     call    LCD_printChar
                      00066 
                      00067     macLCD_printChar    b'01111010'         ;z
                          M                     movlf   b'01111010',tmpLCDsend
000D70 0E7A               M         movlw    b'01111010'
000D72 6E38               M         movwf    tmpLCDsend
000D74 ECCB F004          M                     call    LCD_printChar
                      00068 
                      00069     macLCD_printChar    0x20         ;space
                          M                     movlf   0x20,tmpLCDsend
000D78 0E20               M         movlw    0x20
000D7A 6E38               M         movwf    tmpLCDsend
000D7C ECCB F004          M                     call    LCD_printChar
                      00070 
000D80 D7DB           00071     bra     IR_done
                      00570 #include <USART.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   usart subroutines
                      00003 ;----------------------------------------------------
000D82                00004 usart_checkRX
                      00005 ;    clrf    event_checkUsart       ;only do if int sets flag
                      00006 
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D82 0E31           00007     movlw   0x31                   ;ASCII '1'
000D84 626B           00008     cpfseq  RXtemp
000D86 D001           00009     bra     usart_not1
000D88 D012           00010     bra     usart_storeRX
000D8A                00011 usart_not1
000D8A 0E32           00012     movlw   0x32                   ;ASCII '2'
000D8C 626B           00013     cpfseq  RXtemp
000D8E D001           00014     bra     usart_not2
000D90 D00E           00015     bra     usart_storeRX
000D92                00016 usart_not2
000D92 0E33           00017     movlw   0x33                   ;ASCII '3'
000D94 626B           00018     cpfseq  RXtemp
000D96 D001           00019     bra     usart_not3
000D98 D00A           00020     bra     usart_storeRX
000D9A                00021 usart_not3
000D9A 0E34           00022     movlw   0x34                   ;ASCII '4'
000D9C 626B           00023     cpfseq  RXtemp
000D9E D001           00024     bra     usart_not4
000DA0 D006           00025     bra     usart_storeRX
000DA2                00026 usart_not4
000DA2 0E35           00027     movlw   0x35                   ;ASCII '5'
000DA4 626B           00028     cpfseq  RXtemp
000DA6 D001           00029     bra     usart_not5
000DA8 D002           00030     bra     usart_storeRX
000DAA                00031 usart_not5
000DAA D00A           00032     bra     usart_OTHER
000DAC                00033 usart_doneCheck
000DAC 0012           00034     return
                      00035 
000DAE                00036 usart_storeRX
000DAE 0E30           00037     movlw   0x30
000DB0 5E6B           00038     subwf   RXtemp,F                ;convert to number
000DB2 C06B F017      00039     movff   RXtemp,beaconCount
000DB6 C06B F018      00040     movff   RXtemp,beaconCountTmp
000DBA C06B F055      00041     movff   RXtemp,RPG_count+1
000DBE D7F6           00042     bra     usart_doneCheck
                      00043 
000DC0                00044 usart_OTHER
000DC0 0E47           00045     movlw   0x47                   ;ASCII 'G'.. GO!
000DC2 626B           00046     cpfseq  RXtemp
000DC4 D002           00047     bra     usart_notG
                      00048 
000DC6 6A1A           00049     clrf    momBtnPressed
                      00050 
000DC8 0012           00051     return
000DCA                00052 usart_notG
000DCA 0E50           00053     movlw   0x50                   ;ASCII 'P'.. Pause
000DCC 626B           00054     cpfseq  RXtemp
000DCE D001           00055     bra     usart_notP
                      00056 
000DD0 7001           00057     btg     paused,0
                      00058 
000DD2                00059 usart_notP
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DD2 0E4D           00060     movlw   0x4D                   ;ASCII 'M'.. Manual
000DD4 626B           00061     cpfseq  RXtemp
000DD6 D00D           00062     bra     usart_notM
                      00063 
000DD8 7002           00064     btg     manual,0
                      00065 
                      00066     macServo_dirA   FORWARD
000DDA 0E01               M                 movlw   FORWARD
000DDC EC7E F005          M                 call    servo_dirA
                      00067     macServo_dirB   FORWARD
000DE0 0E01               M                 movlw   FORWARD
000DE2 EC80 F005          M                 call    servo_dirB
                      00068     macServo_setA   mASpeed2
000DE6 0E06               M                 movlw   mASpeed2
000DE8 EC6A F005          M                 call    servo_setA
                      00069     macServo_setB   mBSpeed2
000DEC 0E09               M                 movlw   mBSpeed2
000DEE EC74 F005          M                 call    servo_setB
                      00070 
000DF2                00071 usart_notM
000DF2 0E57           00072     movlw   0x57                   ;ASCII 'W' -> go straight
000DF4 626B           00073     cpfseq  RXtemp
000DF6 D00F           00074     bra     usart_notW
                      00075 
000DF8 9289           00076     bcf     LED_RIGHT
000DFA 8489           00077     bsf     LED_CENTER
000DFC 9689           00078     bcf     LED_LEFT
                      00079 
                      00080     macServo_dirA   FORWARD
000DFE 0E01               M                 movlw   FORWARD
000E00 EC7E F005          M                 call    servo_dirA
                      00081     macServo_dirB   FORWARD
000E04 0E01               M                 movlw   FORWARD
000E06 EC80 F005          M                 call    servo_dirB
                      00082     macServo_setA   mASpeed2
000E0A 0E06               M                 movlw   mASpeed2
000E0C EC6A F005          M                 call    servo_setA
                      00083     macServo_setB   mBSpeed2
000E10 0E09               M                 movlw   mBSpeed2
000E12 EC74 F005          M                 call    servo_setB
                      00084 
000E16                00085 usart_notW
000E16 0E41           00086     movlw   0x41                   ;ASCII 'A' -> go left
000E18 626B           00087     cpfseq  RXtemp
000E1A D00E           00088     bra     usart_notA
                      00089 
000E1C 8289           00090     bsf     LED_RIGHT
000E1E 9489           00091     bcf     LED_CENTER
000E20 9689           00092     bcf     LED_LEFT
                      00093 
                      00094     macServo_dirA   FORWARD
000E22 0E01               M                 movlw   FORWARD
000E24 EC7E F005          M                 call    servo_dirA
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00095     macServo_dirB   FORWARD
000E28 0E01               M                 movlw   FORWARD
000E2A EC80 F005          M                 call    servo_dirB
000E2E EC66 F005      00096     call    servo_stopA
                      00097     macServo_setB   mBSpeed2
000E32 0E09               M                 movlw   mBSpeed2
000E34 EC74 F005          M                 call    servo_setB
                      00098 
000E38                00099 usart_notA
000E38 0E5A           00100     movlw   0x5A                   ;ASCII 'Z' -> go backwards
000E3A 626B           00101     cpfseq  RXtemp
000E3C D00F           00102     bra     usart_notZ
                      00103 
000E3E 8289           00104     bsf     LED_RIGHT
000E40 9489           00105     bcf     LED_CENTER
000E42 9689           00106     bcf     LED_LEFT
                      00107 
                      00108     macServo_dirA   REVERSE
000E44 0E00               M                 movlw   REVERSE
000E46 EC7E F005          M                 call    servo_dirA
                      00109     macServo_dirB   REVERSE
000E4A 0E00               M                 movlw   REVERSE
000E4C EC80 F005          M                 call    servo_dirB
                      00110     macServo_setA   mBSpeed1
000E50 0E05               M                 movlw   mBSpeed1
000E52 EC6A F005          M                 call    servo_setA
                      00111     macServo_setB   mBSpeed3
000E56 0E0C               M                 movlw   mBSpeed3
000E58 EC74 F005          M                 call    servo_setB
                      00112 
000E5C                00113 usart_notZ
000E5C 0E53           00114     movlw   0x53                   ;ASCII 'S' -> go right
000E5E 626B           00115     cpfseq  RXtemp
000E60 0012           00116     return
                      00117 
000E62 9289           00118     bcf     LED_RIGHT
000E64 9489           00119     bcf     LED_CENTER
000E66 8689           00120     bsf     LED_LEFT
                      00121 
                      00122     macServo_dirA   FORWARD
000E68 0E01               M                 movlw   FORWARD
000E6A EC7E F005          M                 call    servo_dirA
                      00123     macServo_dirB   FORWARD
000E6E 0E01               M                 movlw   FORWARD
000E70 EC80 F005          M                 call    servo_dirB
                      00124     macServo_setA   mASpeed2
000E74 0E06               M                 movlw   mASpeed2
000E76 EC6A F005          M                 call    servo_setA
000E7A EC68 F005      00125     call    servo_stopB
                      00126 
000E7E 0012           00127     return
                      00128 
                      00129 
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E80                00130 usart_sendFreq
000E80 0612           00131     decf    event_sendTX
                      00132 
000E82 5044           00133     movf    BCDunpacked+2, W
000E84 0F30           00134     addlw   0x30
000E86 6EAD           00135     movwf   TXREG
                      00136 
                      00137     delayXm 2
                          M         movlf   2,delay_multi
000E88 0E02               M         movlw    2
000E8A 6E49               M         movwf    delay_multi
000E8C EC51 F005          M         call    delayms
                      00138 
000E90 5045           00139     movf    BCDunpacked+3, W
000E92 0F30           00140     addlw   0x30
000E94 6EAD           00141     movwf   TXREG
                      00142 
                      00143     delayXm 2
                          M         movlf   2,delay_multi
000E96 0E02               M         movlw    2
000E98 6E49               M         movwf    delay_multi
000E9A EC51 F005          M         call    delayms
                      00144 
000E9E 5046           00145     movf    BCDunpacked+4, W
000EA0 0F30           00146     addlw   0x30
000EA2 6EAD           00147     movwf   TXREG
                      00148 
                      00149     delayXm 2
                          M         movlf   2,delay_multi
000EA4 0E02               M         movlw    2
000EA6 6E49               M         movwf    delay_multi
000EA8 EC51 F005          M         call    delayms
                      00150 
000EAC 5047           00151     movf    BCDunpacked+5, W
000EAE 0F30           00152     addlw   0x30
000EB0 6EAD           00153     movwf   TXREG
                      00154 
                      00155     delayXm 2
                          M         movlf   2,delay_multi
000EB2 0E02               M         movlw    2
000EB4 6E49               M         movwf    delay_multi
000EB6 EC51 F005          M         call    delayms
                      00156 
                      00157     movlf   0x0A, W
000EBA 0E0A               M         movlw    0x0A
000EBC 6E00               M         movwf    W
000EBE 6EAD           00158     movwf   TXREG
                      00159 
                      00160     delayXm 2
                          M         movlf   2,delay_multi
000EC0 0E02               M         movlw    2
000EC2 6E49               M         movwf    delay_multi
000EC4 EC51 F005          M         call    delayms
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00161 
                      00162     movlf   0x0D, W
000EC8 0E0D               M         movlw    0x0D
000ECA 6E00               M         movwf    W
000ECC 6EAD           00163     movwf   TXREG
                      00164 
                      00165     delayXm 2
                          M         movlf   2,delay_multi
000ECE 0E02               M         movlw    2
000ED0 6E49               M         movwf    delay_multi
000ED2 EC51 F005          M         call    delayms
000ED6 0012           00166     return
                      00571 
                      00572 ;----------------------------------------------------
                      00573 ;   High Priority Interrupt Service Routine
                      00574 ;----------------------------------------------------
000ED8                00575 ISR_high
000ED8 CFD8 F006      00576     movff   STATUS,tmp_STATUS
000EDC 6E05           00577     movwf   tmp_W                   ;save context
                      00578 
000EDE B4F2           00579     btfsc   INTCON,TMR0IF   ;if timer0 int flag is clear, skip and go to timer1 int
000EE0 D002           00580     bra     ISR_high_pri0
000EE2 D016           00581     bra     ISR_high_pri1
000EE4 D039           00582     bra     ISR_high_done
                      00583 
000EE6                00584 ISR_high_pri0 ;20us
000EE6 9889           00585     bcf     LED_ALIVE               ;turn on alive LED
                      00586 
                      00587     ;reset timer with compensation for time past
000EE8 CFD6 F014      00588     movff   TMR0L, tmp0l
000EEC 0ED8           00589     movlw   low mainTimerAdj
000EEE 2614           00590     addwf   tmp0l, F
000EF0 C014 FFD6      00591     movff   tmp0l, TMR0L
                      00592 
                      00593     ;decrement delay timer
000EF4 0648           00594     decf    delay_count_us
                      00595 
                      00596     ;decrement servo counters;
000EF6 664E           00597     tstfsz  mAcounter
000EF8 064E           00598     decf    mAcounter
000EFA 664F           00599     tstfsz  mBcounter
000EFC 064F           00600     decf    mBcounter
                      00601 
                      00602     ;decrement utlrasonic counters
000EFE 6656           00603     tstfsz  pulseLenTimer
000F00 0656           00604     decf    pulseLenTimer
                      00605 
                      00606 
000F02 0EFE           00607     movlw   d'254'                      ;see if counter has reached 254
000F04 6059           00608     cpfslt  ultraSonicCounter+1
000F06 80F0           00609     bsf     INTCON3,INT1IF
000F08 4A59           00610     infsnz  ultraSonicCounter+1       ;count 20us iterations until return signal
000F0A 2A58           00611     incf    ultraSonicCounter
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00612 
000F0C 94F2           00613     bcf     INTCON,TMR0IF           ;clear interrupt flag
000F0E D024           00614     bra     ISR_high_done
                      00615 
000F10                00616 ISR_high_pri1 ;20ms
000F10 CFCE F015      00617     movff   TMR1L, tmp1l
000F14 CFCF F016      00618     movff   TMR1H, tmp1h
000F18 0E83           00619     movlw   low servoTimerAdj
000F1A 2615           00620     addwf   tmp1l, F
000F1C 0EE7           00621     movlw   high servoTimerAdj
000F1E 2216           00622     addwfc  tmp1h, F
000F20 C016 FFCF      00623     movff   tmp1h, TMR1H
000F24 C015 FFCE      00624     movff   tmp1l, TMR1L
                      00625 
                      00626     ;decrement RPG event timers
000F28 0607           00627     decf    event_RPGbeacons        ;either 0 or 1(execute)
000F2A 6607           00628     tstfsz  event_RPGbeacons        ;0?
000F2C 6A07           00629     clrf    event_RPGbeacons        ;should be 0, if not, clear
000F2E 6608           00630     tstfsz  event_printBeacons
000F30 0608           00631     decf    event_printBeacons
                      00632 
                      00633     ;decrement motor counters
000F32 8A8A           00634     bsf     MOTORA
000F34 C04A F04E      00635     movff   mASpeed,mAcounter
000F38 888A           00636     bsf     MOTORB
000F3A C04C F04F      00637     movff   mBSpeed,mBcounter
                      00638 
000F3E 6662           00639     tstfsz  rightTime
000F40 0662           00640     decf    rightTime
000F42 6663           00641     tstfsz  leftTime
000F44 0663           00642     decf    leftTime
                      00643 
                      00644     ;decrement ultrasonic event timers
000F46 660A           00645     tstfsz  event_ultraA
000F48 060A           00646     decf    event_ultraA
000F4A 660B           00647     tstfsz  event_ultraB
000F4C 060B           00648     decf    event_ultraB
                      00649 
                      00650     ;decrement IR sensor event timer
000F4E 660D           00651     tstfsz  event_checkIR
000F50 060D           00652     decf    event_checkIR
                      00653 
                      00654     ;decrement IR sensor event timer
000F52 6611           00655     tstfsz  event_found
000F54 0611           00656     decf    event_found
                      00657 
                      00658     ;decrement time to spin and search
                      00659 ;    dcfsnz  event_search+1
                      00660 ;    decf    event_search
                      00661 ;
                      00662 ;    dcfsnz  searchTime+1
                      00663 ;    decf    searchTime
                      00664 
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F56 909E           00665     bcf     PIR1,TMR1IF
                      00666 
000F58                00667 ISR_high_done
                      00668     
000F58 8889           00669     bsf     LED_ALIVE               ;turn off alive LED
000F5A 5005           00670     movf    tmp_W,W
000F5C C006 FFD8      00671     movff   tmp_STATUS, STATUS      ;restore context
000F60 0010           00672     retfie
                      00673 
                      00674 
                      00675 ;----------------------------------------------------
                      00676 ;   Low Priority Interrupt Service Routine
                      00677 ;
                      00678 ;   Priority:
                      00679 ;----------------------------------------------------
000F62                00680 ISR_low
000F62 CFD8 F006      00681     movff   STATUS,tmp_STATUS
000F66 6E05           00682     movwf   tmp_W                   ;save context
                      00683 
000F68 B49E           00684     btfsc   PIR1, CCP1IF            ;did ccp fire?
000F6A D007           00685     bra     ISR_CCP1
000F6C B0F0           00686     btfsc   INTCON3, INT1IF         ;if ext int1, ultraA
000F6E D015           00687     bra     ISR_ultraA
000F70 B2F0           00688     btfsc   INTCON3, INT2IF         ;if ext int2, ultraB
000F72 D01B           00689     bra     ISR_ultraB
000F74 BA9E           00690     btfsc   PIR1,RCIF               ;has USART received data?
000F76 D021           00691     bra     ISR_usartRX
                      00692 ;    btfsc   PIR1, TXIF
                      00693 ;    bra     ISR_usartTX
000F78 D028           00694     bra     ISR_low_done
                      00695 
000F7A                00696 ISR_CCP1
000F7A C066 F068      00697     movff   IR_currentVal+1,IR_prevVal+1    ;save previous value from CCP
000F7E C065 F067      00698     movff   IR_currentVal,IR_prevVal
000F82 CFBE F066      00699     movff   CCPR1L, IR_currentVal+1         ;get value from CCP
000F86 CFBF F065      00700     movff   CCPR1H, IR_currentVal
                      00701 
000F8A 6611           00702     tstfsz  event_found             ;has the robot already found a beacon?
000F8C D004           00703     bra     CCPdone                 ;if yes, finish ISR
000F8E D000           00704     bra     setFound                ;else set timer
                      00705 
000F90                00706 setFound
                      00707     movlf   d'200',event_found      ;stop robot when it finds a beacon
000F90 0EC8               M         movlw    d'200'
000F92 6E11               M         movwf    event_found
000F94 6A12           00708     clrf    event_sendTX            ;set flag to start USART transmit
                      00709 
000F96                00710 CCPdone
000F96 949E           00711     bcf     PIR1, CCP1IF            ;reset interrupt flag
000F98 D018           00712     bra     ISR_low_done
                      00713 
000F9A                00714 ISR_ultraA
000F9A 665E           00715     tstfsz  ultraTest
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F9C D014           00716     bra     ISR_low_doneU
000F9E 685E           00717     setf    ultraTest
                      00718 
000FA0 C058 F05A      00719     movff   ultraSonicCounter,ultraCurrentA
000FA4 C059 F05B      00720     movff   ultraSonicCounter+1,ultraCurrentA+1
000FA8 D00E           00721     bra     ISR_low_doneU
                      00722 
000FAA                00723 ISR_ultraB
000FAA 665F           00724     tstfsz  ultraTest2
000FAC D00C           00725     bra     ISR_low_doneU
000FAE 685F           00726     setf    ultraTest2
                      00727 
000FB0 C058 F05C      00728     movff   ultraSonicCounter,ultraCurrentB
000FB4 C059 F05D      00729     movff   ultraSonicCounter+1,ultraCurrentB+1
000FB8 D006           00730     bra     ISR_low_doneU
                      00731 
000FBA                00732 ISR_usartRX
000FBA CFAE F06B      00733     movff   RCREG,RXtemp            ;store data
                      00734 
000FBE ECC1 F006      00735     call    usart_checkRX
                      00736 
000FC2 9A9E           00737     bcf     PIR1,RCIF
000FC4 D002           00738     bra     ISR_low_done
                      00739 
000FC6                00740 ISR_low_doneU
000FC6 90F0           00741     bcf     INTCON3, INT1IF
000FC8 92F0           00742     bcf     INTCON3, INT2IF
000FCA                00743 ISR_low_done
000FCA 5005           00744     movf    tmp_W,W
000FCC C006 FFD8      00745     movff   tmp_STATUS, STATUS     ;restore context
000FD0 0010           00746     retfie
                      00747 
000FD2                00748 progEnd
000FD2 EFE9 F007      00749         goto    $                       ;stop
                      00750 
                      00751 ;----------------------------------------------------
                      00752 ;   Strings
                      00753 ;----------------------------------------------------
000FD6 6542 6361 6E6F 00754 mess_Beacons    da  "Beacons", 0x00
       0073 0000 
000FE0 6553 7261 6863 00755 mess_Search     da  "Search", 0x00
       0000 
                      00756 
                      00757         end
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
AARGB0                            0000001C
AARGB1                            0000001D
AARGB2                            0000001E
AARGB3                            0000001F
AARGB4                            00000020
AARGB5                            00000021
AARGB6                            00000022
AARGB7                            00000023
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AEXP                              0000001B
AN0                               00000000
AN1                               00000001
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN5                               00000000
AN6                               00000001
AN7                               00000002
BANKED                            00000001
BARGB0                            00000025
BARGB1                            00000026
BARGB2                            00000027
BARGB3                            00000028
BCD_count                         00000041
BCDconv                           0000003C
BCDunpacked                       00000042
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BEXP                              00000024
BF                                00000000
BOR                               00000000
BRGH                              00000002
BSR                               00000FE0
Bin2BCD                           00000A34
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 69


SYMBOL TABLE
  LABEL                             VALUE 

C                                 00000000
CARGB0                            0000002A
CARGB1                            0000002B
CARGB2                            0000002C
CARGB3                            0000002D
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2A                             00000003
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCP2_DDRB                         00000003
CCP2_DDRC                         00000001
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
CCP2_TRISB                        00000003
CCP2_TRISC                        00000001
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CCPdone                           00000F96
CEXP                              00000029
CFGS                              00000006
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CK                                00000006
CKE                               00000006
CKP                               00000004
CLKO                              00000006
CREN                              00000004
CS                                00000002
CSRC                              00000007
D                                 00000005
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 70


SYMBOL TABLE
  LABEL                             VALUE 

D1616AGEB                         00000574
D1616B0GT0                        0000055C
D1616QOK                          000005F4
D1616QZERO                        00000438
D1616UNRMOK                       000005CC
D1616UQOK                         000005E0
D2416AGTB                         00000634
D2416BGT1                         00000618
D2416FIXREM                       00000732
D2416QOK                          0000071C
D2416REMOK                        00000758
D2416ULOOP                        000006A8
D2416UNRMOK                       00000696
D2416UQOK                         000006F2
D2416UQTEST                       000006C8
D2424QZERO                        00000432
D3216AGTB                         000007A2
D3216BGT1                         0000077E
D3216FIXREM                       000008B6
D3216QOK                          00000898
D3216REMOK                        000008DC
D3216ULOOP                        00000826
D3216UNRMOK                       00000814
D3216UQOK                         0000086E
D3216UQTEST                       00000844
D3232QZERO                        0000042C
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DCCPX                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DGETNRMD                          0000040A
DGETNRMDH                         00000420
DGETNRMDL                         00000410
DOM                               00000005
DONE                              00000002
DREMZERO8                         00000446
D_A                               00000005
D_NOT_A                           00000005
EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 71


SYMBOL TABLE
  LABEL                             VALUE 

EEPGD                             00000007
EXPBIAS                           0000007F
FAST                              00000001
FDZ                               00000003
FERR                              00000002
FORWARD                           00000001
FOV                               00000001
FPFLAGS                           00000037
FREE                              00000004
FRONT_SENSOR                      navFlag1,0
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
FUN                               00000002
FXD1608U                          0000044A
FXD1608U1                         00000452
FXD1608U2                         00000464
FXD1616U                          00000548
FXD2408U                          00000516
FXD2416U                          000005FE
FXD3208U                          000004CC
FXD3216U                          00000764
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DAT                           00000005
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
IBXTBL256                         00000208
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 72


SYMBOL TABLE
  LABEL                             VALUE 

INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON1                           00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
IOV                               00000000
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRVST                             00000005
IR_check                          00000CEE
IR_currentVal                     00000065
IR_displayFreq                    00000D40
IR_done                           00000D38
IR_freq                           00000069
IR_prevVal                        00000067
ISR_CCP1                          00000F7A
ISR_high                          00000ED8
ISR_high_done                     00000F58
ISR_high_pri0                     00000EE6
ISR_high_pri1                     00000F10
ISR_low                           00000F62
ISR_low_done                      00000FCA
ISR_low_doneU                     00000FC6
ISR_ultraA                        00000F9A
ISR_ultraB                        00000FAA
ISR_usartRX                       00000FBA
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 73


SYMBOL TABLE
  LABEL                             VALUE 

LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LATD                              00000F8C
LATD0                             00000000
LATD1                             00000001
LATD2                             00000002
LATD3                             00000003
LATD4                             00000004
LATD5                             00000005
LATD6                             00000006
LATD7                             00000007
LATE                              00000F8D
LATE0                             00000000
LATE1                             00000001
LATE2                             00000002
LCD_E                             LATE,1
LCD_RS                            LATE,0
LCD_clear                         000009F8
LCD_printChar                     00000996
LCD_printHex                      0000097C
LCD_printString                   00000986
LCD_returnHome                    000009DC
LCD_send                          00000A14
LCD_send2                         00000A1E
LCD_setAddr                       000009A8
LCD_shiftLCD                      000009BA
LCD_shiftRight                    000009C8
LCD_shiftSend                     000009CA
LCD_shift_count                   0000003A
LCD_shift_dir                     00000039
LCD_state                         0000003B
LCDinit                           000008EC
LED_ALIVE                         LATA,4
LED_CENTER                        LATA,2
LED_LEFT                          LATA,3
LED_RIGHT                         LATA,1
LOSSTHR24B0                       00000049
LOSSTHR24B1                       00000010
LOSSTHR24EXP                      0000008A
LOSSTHR32B0                       00000049
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 74


SYMBOL TABLE
  LABEL                             VALUE 

LOSSTHR32B1                       0000000F
LOSSTHR32B2                       000000DB
LOSSTHR32EXP                      0000008A
LSB                               00000000
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
MACHEP24B0                        00000000
MACHEP24B1                        00000000
MACHEP24EXP                       0000006F
MACHEP32B0                        00000000
MACHEP32B1                        00000000
MACHEP32B2                        00000000
MACHEP32EXP                       00000067
MAXLOG1024B0                      0000001A
MAXLOG1024B1                      00000021
MAXLOG1024EXP                     00000084
MAXLOG1032B0                      0000001A
MAXLOG1032B1                      00000020
MAXLOG1032B2                      0000009B
MAXLOG1032EXP                     00000084
MAXLOG24B0                        00000031
MAXLOG24B1                        00000072
MAXLOG24EXP                       00000085
MAXLOG32B0                        00000031
MAXLOG32B1                        00000072
MAXLOG32B2                        00000018
MAXLOG32EXP                       00000085
MAXNUM24B0                        0000007F
MAXNUM24B1                        000000FF
MAXNUM24EXP                       000000FF
MAXNUM32B0                        0000007F
MAXNUM32B1                        000000FF
MAXNUM32B2                        000000FF
MAXNUM32EXP                       000000FF
MINLOG1024B0                      00000097
MINLOG1024B1                      000000B8
MINLOG1024EXP                     00000084
MINLOG1032B0                      00000097
MINLOG1032B1                      000000B8
MINLOG1032B2                      00000018
MINLOG1032EXP                     00000084
MINLOG24B0                        000000AE
MINLOG24B1                        000000AC
MINLOG24EXP                       00000085
MINLOG32B0                        000000AE
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 75


SYMBOL TABLE
  LABEL                             VALUE 

MINLOG32B1                        000000AC
MINLOG32B2                        00000050
MINLOG32EXP                       00000085
MINNUM24B0                        00000000
MINNUM24B1                        00000000
MINNUM24EXP                       00000001
MINNUM32B0                        00000000
MINNUM32B1                        00000000
MINNUM32B2                        00000000
MINNUM32EXP                       00000001
MODE                              navFlag1,7
MOM_BTN                           PORTD,3
MOTORA                            LATB,5
MOTORB                            LATB,4
MSB                               00000007
N                                 00000004
NAN                               00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_IPEN                          00000007
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_RI                            00000004
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OSC2                              00000006
OSCCON                            00000FD3
OV                                00000003
P                                 00000004
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 76


SYMBOL TABLE
  LABEL                             VALUE 

PGM                               00000005
PIE1                              00000F9D
PIE2                              00000FA0
PIR1                              00000F9E
PIR2                              00000FA1
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PSA                               00000003
PSP0                              00000000
PSP1                              00000001
PSP2                              00000002
PSP3                              00000003
PSP4                              00000004
PSP5                              00000005
PSP6                              00000006
PSP7                              00000007
PSPIE                             00000007
PSPIF                             00000007
PSPIP                             00000007
PSPMODE                           00000004
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 77


SYMBOL TABLE
  LABEL                             VALUE 

RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
REMB0                             00000020
REMB1                             00000021
REMB2                             00000022
REMB3                             00000023
REVERSE                           00000000
RI                                00000004
RND                               00000006
RPG_A                             PORTD,0
RPG_B                             PORTD,1
RPG_calcCCW                       00000B36
RPG_ccw                           00000051
RPG_ccwDir                        00000B2A
RPG_changed                       00000B22
RPG_check                         00000B16
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 78


SYMBOL TABLE
  LABEL                             VALUE 

RPG_count                         00000054
RPG_cwDir                         00000B30
RPG_dec                           00000B4A
RPG_decDone                       00000B54
RPG_doneCheck                     00000B34
RPG_doneNext                      00000B44
RPG_get                           00000B04
RPG_inc                           00000B56
RPG_prev                          00000053
RPG_resetCount                    00000B5C
RPG_setz                          00000B42
RPG_sig                           00000052
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXtemp                            0000006B
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SAT                               00000007
SCK                               00000003
SCL                               00000003
SCOPE_PIN                         LATE,2
SCS                               00000000
SDA                               00000004
SDI                               00000004
SDO                               00000005
SEN                               00000000
SIDE_SENSOR_CLOSE                 navFlag1,2
SIDE_SENSOR_FAR                   navFlag1,3
SIGN                              00000036
SMP                               00000007
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPEN                              00000007
SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 79


SYMBOL TABLE
  LABEL                             VALUE 

SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKPTR0                           00000000
STKPTR1                           00000001
STKPTR2                           00000002
STKPTR3                           00000003
STKPTR4                           00000004
STKUNF                            00000006
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0IP                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0SE                              00000004
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1INSYNC                          00000002
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3INSYNC                          00000002
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TEMP                              00000032
TEMPB0                            00000032
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 80


SYMBOL TABLE
  LABEL                             VALUE 

TEMPB1                            00000033
TEMPB2                            00000034
TEMPB3                            00000035
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 81


SYMBOL TABLE
  LABEL                             VALUE 

TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000F95
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX                                00000006
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
UA                                00000001
ULTRA_TRIG                        LATB,3
ULTRA_TRIG_R                      PORTB,3
VREFM                             00000002
VREFP                             00000003
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
Z                                 00000002
ZARGB0                            0000002E
ZARGB1                            0000002F
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 82


SYMBOL TABLE
  LABEL                             VALUE 

ZARGB2                            00000030
ZARGB3                            00000031
_BORV_20                          000000FF
_BORV_20_2L                       000000FF
_BORV_27_2L                       000000FB
_BORV_42_2L                       000000F7
_BORV_45_2L                       000000F3
_BOR_OFF_2L                       000000FD
_BOR_ON_2L                        000000FF
_C                                STATUS,0
_CCP2MX_OFF                       000000FE
_CCP2MX_OFF_3H                    000000FE
_CCP2MX_ON                        000000FF
_CCP2MX_ON_3H                     000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CP2_OFF_5L                       000000FF
_CP2_ON_5L                        000000FB
_CP3_OFF_5L                       000000FF
_CP3_ON_5L                        000000F7
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DC                               STATUS,1
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTR2_OFF_7L                     000000FF
_EBTR2_ON_7L                      000000FB
_EBTR3_OFF_7L                     000000FF
_EBTR3_ON_7L                      000000F7
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_ECIO_OSC                         000000FD
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 83


SYMBOL TABLE
  LABEL                             VALUE 

_ECIO_OSC_1H                      000000FD
_EC_OSC                           000000FC
_EC_OSC_1H                        000000FC
_FXD1608U                         
_FXD1616U                         
_FXD2408U                         
_FXD2416U                         
_FXD3208U                         
_FXD3216U                         
_HSPLL_OSC                        000000FE
_HSPLL_OSC_1H                     000000FE
_HS_OSC                           000000FA
_HS_OSC_1H                        000000FA
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_LP_OSC                           000000F8
_LP_OSC_1H                        000000F8
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_OSCS_OFF_1H                      000000FF
_OSCS_ON_1H                       000000DF
_OV                               STATUS,3
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_RCIO_OSC                         000000FF
_RCIO_OSC_1H                      000000FF
_RC_OSC                           000000FB
_RC_OSC_1H                        000000FB
_STVR_OFF_4L                      000000FE
_STVR_ON_4L                       000000FF
_TBL256                           
_UTILS                            
_WDTPS_128_2H                     000000FF
_WDTPS_16_2H                      000000F9
_WDTPS_1_2H                       000000F1
_WDTPS_2_2H                       000000F3
_WDTPS_32_2H                      000000FB
_WDTPS_4_2H                       000000F5
_WDTPS_64_2H                      000000FD
_WDTPS_8_2H                       000000F7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRT2_OFF_6L                      000000FF
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 84


SYMBOL TABLE
  LABEL                             VALUE 

_WRT2_ON_6L                       000000FB
_WRT3_OFF_6L                      000000FF
_WRT3_ON_6L                       000000F7
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XT_OSC                           000000F9
_XT_OSC_1H                        000000F9
_Z                                STATUS,2
__18F452                          00000001
__DEBUG                           
__MPLAB_DEBUGGER_ICD3             1
beaconCount                       00000017
beaconCountTmp                    00000018
beaconEntry                       00000192
beaconLoop                        00000086
beaconSetup                       00000158
checkB                            000000E2
checkBDist                        00000B88
checkBeacons                      00000094
checkBtn                          0000009C
checkDist                         00000B7E
checkDistA                        00000B90
checkDistB                        00000BB2
checkMomBtn                       000001E2
checkPulse                        00000B74
clearBeacons                      000001D0
cont                              00000BB0
delayXm                           
delayXu                           
delay_count_us                    00000048
delay_multi                       00000049
delayms                           00000AA2
delayms_loop                      00000AA6
delayus                           00000A9C
doneDistCheck                     00000B8C
endBeaconLoop                     000000A4
event_LCD                         00000009
event_RPGbeacons                  00000007
event_checkDist                   0000000C
event_checkIR                     0000000D
event_checkUsart                  0000000E
event_displayFreq                 00000013
event_found                       00000011
event_printBeacons                00000008
event_search                      0000000F
event_sendTX                      00000012
event_ultraA                      0000000A
event_ultraB                      0000000B
inLimits                          000001A6
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 85


SYMBOL TABLE
  LABEL                             VALUE 

leftTime                          00000063
loadTBL                           
mADir                             0000004B
mASpeed                           0000004A
mASpeed0                          0000003A
mASpeed1                          00000003
mASpeed2                          00000006
mASpeed3                          00000008
mASpeeds                          00000002
mASpeedz                          00000000
mAcounter                         0000004E
mBDir                             0000004D
mBSpeed                           0000004C
mBSpeed0                          0000003C
mBSpeed1                          00000005
mBSpeed2                          00000009
mBSpeed3                          0000000C
mBSpeeds                          00000002
mBSpeedz                          00000000
mBcounter                         0000004F
macLCD_printChar                  
macLCD_printHex                   
macLCD_printString                
macLCD_setAddr                    
macLCD_toBCD                      
macServo_dirA                     
macServo_dirB                     
macServo_setA                     
macServo_setB                     
main                              0000001C
mainLoop                          000000A8
mainSetup                         000000FA
mainTimerAdj                      000000D8
mainTimerH                        00000004
mainTimerL                        00000003
manual                            00000002
mess_Beacons                      00000FD6
mess_Search                       00000FE0
mode                              00000000
momBtnPressed                     0000001A
momBtnState                       00000019
movlf                             
navFlag1                          00000064
nav_avoidWall                     00000C36
nav_avoidWall_done                00000C80
nav_done                          00000BEA
nav_findWall                      00000C82
nav_findWall_done                 00000CCC
nav_found                         00000BEC
nav_look                          00000C18
nav_newDir                        00000CCE
nav_notStraight                   00000BDA
nav_straight                      00000BF8
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 86


SYMBOL TABLE
  LABEL                             VALUE 

navigate                          00000BC6
noDistCheck                       000000F0
noIRCheck                         000000F8
noSearch                          000000C6
noTrigger                         00000B7C
noprint                           0000008E
notHigh                           0000019C
notPressed                        00000206
nullStr                           00000994
paused                            00000001
pressed                           000001F0
printBeacons                      000001B8
printBeaconsLoop                  000001C0
progEnd                           00000FD2
pulseLenTimer                     00000056
rightTime                         00000062
rotateAll                         00000A3E
searchTime                        00000060
servoADone                        00000AB6
servoAMain                        00000AB0
servoBDone                        00000ACA
servoBMain                        00000AB8
servoTimerAdj                     0000E783
servoTmp                          00000050
servo_dirA                        00000AFC
servo_dirB                        00000B00
servo_setA                        00000AD4
servo_setASpeed                   00000AE4
servo_setAfwd                     00000AE0
servo_setB                        00000AE8
servo_setBSpeed                   00000AF8
servo_setBfwd                     00000AF4
servo_stopA                       00000ACC
servo_stopB                       00000AD0
setFound                          00000F90
setTrigger                        00000B62
straightLeft                      00000CAE
straightRight                     00000C62
tmp0l                             00000014
tmp1h                             00000016
tmp1l                             00000015
tmpLCDsend                        00000038
tmp_STATUS                        00000006
tmp_W                             00000005
ultraB_good                       00000BC2
ultraB_tooClose                   00000BBE
ultraBcont                        00000BC4
ultraCurrentA                     0000005A
ultraCurrentB                     0000005C
ultraPulseTime                    0000000D
ultraSonicCounter                 00000058
ultraTest                         0000005E
ultraTest2                        0000005F
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 87


SYMBOL TABLE
  LABEL                             VALUE 

ultra_sensorSel                   00000057
unpackBCD                         00000A5A
usart_OTHER                       00000DC0
usart_checkRX                     00000D82
usart_doneCheck                   00000DAC
usart_not1                        00000D8A
usart_not2                        00000D92
usart_not3                        00000D9A
usart_not4                        00000DA2
usart_not5                        00000DAA
usart_notA                        00000E38
usart_notG                        00000DCA
usart_notM                        00000DF2
usart_notP                        00000DD2
usart_notW                        00000E16
usart_notZ                        00000E5C
usart_sendFreq                    00000E80
usart_storeRX                     00000DAE
wallClose                         00000BAC
wallFar                           00000BA6


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXX----XXXX---- --------XXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 88


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXX-------- ----------------
0000 : -XXX-XX-XXXXXX-- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used:  4067
Program Memory Bytes Free: 28701


MPASM 5.54                          MAIN.ASM   4-16-2014  12:05:55         PAGE 89





Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

