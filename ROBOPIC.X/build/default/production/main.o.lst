MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;----------------------------------------------------
                      00002 ;   ROBOPIC
                      00003 ;
                      00004 ;   Henry Gaddard & Matthew Hengeveld
                      00005 ;   PC316
                      00006 ;   2014
                      00007 ;----------------------------------------------------
                      00008 
                      00009     ;errorlevel -205     ;disable Warning[205]
                      00010 
                      00011 ;----------------------------------------------------
                      00012 ;   assembler directives
                      00013 ;----------------------------------------------------
                      00014         list P=PIC18F452, F=INHX32, C=160, X=ON
                      00015         #include P18F452.INC
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18F452 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      01254         LIST
22 05 0E 01 81 0F C0 000016         CONFIG  OSC = HS        ;HS oscillator
       F E0 0F 40 
                      00017         CONFIG  PWRT = OFF, BOR = OFF, BORV = 42        ;Reset
                      00018         CONFIG  WDT = OFF       ;Watchdog timer disabled
                      00019         CONFIG  CCP2MUX = ON    ;CCP2 to RC1 (rather than to RB3)
                      00020         CONFIG  LVP = OFF       ;RB5 enabled for I/O
                      00021 
                      00022 ;----------------------------------------------------
                      00023 ;   pin definitions
                      00024 ;----------------------------------------------------
                      00025 
                      00026 ;LED pins
                      00027 #define     LED_ALIVE   LATA,4
                      00028 #define     LED_RIGHT   LATA,1
                      00029 #define     LED_CENTER  LATA,2
                      00030 #define     LED_LEFT    LATA,3
                      00031 
                      00032 ;LCD pins
                      00033 #define     LCD_E       LATE,1
                      00034 #define     LCD_RS      LATE,0
                      00035 
                      00036 ;output to scope
                      00037 #define     SCOPE_PIN   LATE,2
                      00038 
                      00039 ;motor pins
                      00040 #define     MOTORA      LATB,5
                      00041 #define     MOTORB      LATB,4
                      00042 
                      00043 ;RPG pins
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00044 #define     RPG_B       PORTD,1
                      00045 #define     RPG_A       PORTD,0
                      00046 
                      00047 ;momentary button
                      00048 #define     MOM_BTN     PORTD,3
                      00049 
                      00050 ;ultrasonic trigger pin
                      00051 #define     ULTRA_TRIG  LATB,3      ;write
                      00052 #define     ULTRA_TRIG_R    PORTB,3 ;read
                      00053 
                      00054 ;----------------------------------------------------
                      00055 ;   constants
                      00056 ;----------------------------------------------------
                      00057 
                      00058 ; main timer adjustment
  000000D8            00059 mainTimerAdj    EQU     d'256' - d'40'  ;20us
  0000E783            00060 servoTimerAdj   EQU     d'65536' - d'6250' - d'19'  ;20ms
                      00061 
                      00062 ; motor speeds
  00000008            00063 mASpeed3        EQU     d'8'
  00000006            00064 mASpeed2        EQU     d'6'
  00000003            00065 mASpeed1        EQU     d'3'
  00000002            00066 mASpeeds        EQU     d'2'
  00000000            00067 mASpeedz        EQU     d'0'
                      00068 
  0000000C            00069 mBSpeed3        EQU     d'12'
  00000009            00070 mBSpeed2        EQU     d'9'
  00000005            00071 mBSpeed1        EQU     d'5'
  00000002            00072 mBSpeeds        EQU     d'2'
  00000000            00073 mBSpeedz        EQU     d'0'
                      00074 
  0000003A            00075 mASpeed0        EQU     d'58'   ;motorA: 70
  0000003C            00076 mBSpeed0        EQU     d'60'   ;motorB: 72-73
                      00077 
  00000001            00078 FORWARD         EQU     d'1'
  00000000            00079 REVERSE         EQU     d'0'
                      00080 
                      00081 ;ultrasonic constants
  0000000D            00082 ultraPulseTime  EQU     d'13'   ;number of 20us ints to set trigger high
                      00083 
                      00084 ;----------------------------------------------------
                      00085 ;   file register variables
                      00086 ;----------------------------------------------------
                      00087     cblock      0x000   ;address of variable space
                      00088 
  00000000            00089     paused  ;paused - no movement, ir or ultrasonics
  00000001            00090     manual  ;movement is controlled by serial commands; ultrasonics have no
                      00091             ;effect on movement
                      00092 
                      00093     ;variables for saving context during interrupt
  00000002            00094     tmp_W
  00000003            00095     tmp_STATUS
                      00096 
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097     ;events
  00000004            00098     event_RPGbeacons        ;counts down until beacons should be checked
  00000005            00099     event_printBeacons      ;print # of beacons if changed
  00000006            00100     event_ultraA            ;check ultrasonic A
  00000007            00101     event_ultraB            ;check ultrasonic B
  00000008            00102     event_checkDist         ;should we check a distance?
  00000009            00103     event_checkIR           ;should we check for a beacon?
  0000000A            00104     event_checkUsart        ;should we check USART for data?
  0000000B            00105     event_found             ;have we found a beacon?
  0000000C            00106     event_sendTX            ;should we send a frequency over USART
  0000000D            00107     event_displayFreq       ;should we print a frequency on the LCD
                      00108 
                      00109     ;main timer variables
  0000000E            00110     tmp0l       ; low byte
                      00111 
  0000000F            00112     tmp1l       ; low byte
  00000010            00113     tmp1h       ; high byte
                      00114 
                      00115     ;beacon variables
  00000011            00116     beaconCount
  00000012            00117     beaconCountTmp
                      00118 
                      00119     ;momentary button flag
  00000013            00120     momBtnState             ;1 or 0
  00000014            00121     momBtnPressed           ;has the button been pressed?
                      00122 
                      00123     endc
                      00124 
                      00125 #include <C:\MATH18\MATHVARS.inc>
                      00001 ;;;;; MATHVARS.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ;   Memory: Data 29
                      00004 ;
                      00005 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00006 
                      00007         cblock
  00000015            00008         AEXP                    ;AARG
  00000016            00009         AARGB0
  00000017            00010         AARGB1
  00000018            00011         AARGB2
  00000019            00012         AARGB3
  0000001A            00013         AARGB4
  0000001B            00014         AARGB5
  0000001C            00015         AARGB6
  0000001D            00016         AARGB7
                      00017 
  0000001E            00018         BEXP                    ;BARG
  0000001F            00019         BARGB0
  00000020            00020         BARGB1
  00000021            00021         BARGB2
  00000022            00022         BARGB3
                      00023 
  00000023            00024         CEXP
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000024            00025         CARGB0                  ;CARG
  00000025            00026         CARGB1
  00000026            00027         CARGB2
  00000027            00028         CARGB3
                      00029 
  00000028            00030         ZARGB0                  ;ZARG
  00000029            00031         ZARGB1
  0000002A            00032         ZARGB2
  0000002B            00033         ZARGB3
                      00034 
  0000002C            00035         TEMPB0
  0000002D            00036         TEMPB1
  0000002E            00037         TEMPB2
  0000002F            00038         TEMPB3
                      00039 
  00000030            00040         SIGN
  00000031            00041         FPFLAGS
                      00042         endc
                      00043 
  0000001A            00044 REMB0  equ  AARGB4
  0000001B            00045 REMB1  equ  AARGB5
  0000001C            00046 REMB2  equ  AARGB6
  0000001D            00047 REMB3  equ  AARGB7
  0000002C            00048 TEMP  equ  TEMPB0
                      00049 
                      00050 
                      00210         LIST
                      00126 #include <LCDVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   LCD subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
  00000032            00005         tmpLCDsend      ; byte to send to LCD
  00000033            00006         LCD_shift_dir   ; LCD shift direction
  00000034            00007         LCD_shift_count ;number of bits to shift
                      00008 
                      00009     endc
                      00127 #include <BCDVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   BCD conversion subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
                      00005         ;16 bit binary to 3 byte (6 digit) BCD conversion registers
  00000035            00006         BCDconv:5       ;3 bytes BCD:2 bytes binary number
  0000003A            00007         BCD_count       ;rotate counter
                      00008 
                      00009         ;6 byte (digit) unpacked BCD holding registers
  0000003B            00010         BCDunpacked:6   ;0000xxxx where xxxx is BCD number
                      00011     endc
                      00128 #include <DelayVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   delay subroutine variables
                      00003 ;----------------------------------------------------
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00004     cblock
  00000041            00005         delay_count_us
  00000042            00006         delay_multi
                      00007     endc
                      00129 #include <ServoVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   Servo motor subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
  00000043            00005         mASpeed         ;motor high time
  00000044            00006         mADir           ;motor dir: 1 = forward
  00000045            00007         mBSpeed         ;motor high time
  00000046            00008         mBDir           ;motor dir: 1 = forward
                      00009 
  00000047            00010         mAcounter       ;current times
  00000048            00011         mBcounter
                      00012 
  00000049            00013         servoTmp
                      00014     endc
                      00130 #include <RPGVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   LCD subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
  0000004A            00005         RPG_ccw             ;RPG ccw calc
  0000004B            00006         RPG_sig             ;curent RPG signal
  0000004C            00007         RPG_prev            ;prev RPG signal
  0000004D            00008         RPG_count:2         ;RPG count (16bit)
                      00009     endc
                      00131 #include <UltrasonicVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   ultrasonic sensor subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
  0000004F            00005         pulseLenTimer           ;trigger pulse high timer
  00000050            00006         ultra_sensorSel         ;which sensor to poll
  00000051            00007         ultraSonicCounter:2     ;number of 20us intervals between send signal and recieve
  00000053            00008         ultraCurrentA:2         ;current distance from wall to UltraA
  00000055            00009         ultraCurrentB:2         ;current distance from wall to UltraB
                      00010 
  00000057            00011         ultraTest               ;flags to ensure only one ultrasonic sample
  00000058            00012         ultraTest2
                      00013     endc
                      00132 #include <NavigationVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   navigation subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
  00000059            00005         searchTime:2
                      00006 
  0000005B            00007         rightTime
  0000005C            00008         leftTime
                      00009 
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000005D            00010         navFlag1
                      00011     endc
                      00012 
                      00013 #define MODE                navFlag1,7
                      00014 #define SIDE_SENSOR_FAR     navFlag1,3
                      00015 #define SIDE_SENSOR_CLOSE   navFlag1,2
                      00016 #define FRONT_SENSOR        navFlag1,0
                      00133 #include <IRVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   IR beacon detection subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
  0000005E            00005         IR_currentVal:2         ;current CCP value
  00000060            00006         IR_prevVal:2            ;previous CCP value
  00000062            00007         IR_freq:2               ;frequency of captured signal
                      00008     endc
                      00134 #include <USARTVARS.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   usart subroutine variables
                      00003 ;----------------------------------------------------
                      00004     cblock
  00000064            00005         RXtemp
                      00006     endc
                      00135 
                      00136 ;----------------------------------------------------
                      00137 ;   Macros
                      00138 ;----------------------------------------------------
                      00139 ; move literal to file register
                      00140 movlf   macro    literal,dest
                      00141         movlw    literal
                      00142         movwf    dest
                      00143         endm
                      00144 
                      00145 ; move address to TBLPTR
                      00146 loadTBL macro   var
                      00147         movlw   high var
                      00148         movwf   TBLPTRH
                      00149         movlw   low var
                      00150         movwf   TBLPTRL
                      00151         TBLRD*+
                      00152         endm
                      00153 
                      00154 ; delay x microseconds
                      00155 delayXu macro   X
                      00156         movlf   X,delay_count_us
                      00157         call    delayus
                      00158         endm
                      00159 
                      00160 ; delay x milliseconds
                      00161 delayXm macro   X
                      00162         movlf   X,delay_multi
                      00163         call    delayms
                      00164         endm
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00165 
                      00166 ; LCD macros
                      00167 ;-----------
                      00168 
                      00169 ; convert 16bit binary to 6 digit BCD
                      00170 macLCD_toBCD    macro   LSB, MSB
                      00171                 movff   LSB,BCDconv+4
                      00172                 movff   MSB,BCDconv+3
                      00173                 call    Bin2BCD
                      00174                 call    unpackBCD
                      00175                 endm
                      00176 
                      00177 ; print hex character to LCD
                      00178 macLCD_printHex macro   char
                      00179                 movf    char,W
                      00180                 call    LCD_printHex
                      00181                 endm
                      00182 
                      00183 ; print string to LCD
                      00184 macLCD_printString  macro   stringPtr
                      00185                     loadTBL stringPtr
                      00186                     call    LCD_printString
                      00187                     endm
                      00188 
                      00189 ; prints ACSII char to LCD
                      00190 macLCD_printChar    macro   char
                      00191                     movlf   char,tmpLCDsend
                      00192                     call    LCD_printChar
                      00193                     endm
                      00194 
                      00195 ; sets address on LCD
                      00196 macLCD_setAddr  macro   addr
                      00197                 movlf   addr,tmpLCDsend
                      00198                 call    LCD_setAddr
                      00199                 endm
                      00200 
                      00201 ; servo macros
                      00202 ;-----------
                      00203 
                      00204 ; set motor A speed
                      00205 macServo_setA   macro   speed
                      00206                 movlw   speed
                      00207                 call    servo_setA
                      00208                 endm
                      00209 
                      00210 ; set motor B speed
                      00211 macServo_setB   macro   speed
                      00212                 movlw   speed
                      00213                 call    servo_setB
                      00214                 endm
                      00215 
                      00216 ; set motor A Dir
                      00217 macServo_dirA   macro   dir
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00218                 movlw   dir
                      00219                 call    servo_dirA
                      00220                 endm
                      00221 
                      00222 ; set motor B speed
                      00223 macServo_dirB   macro   dir
                      00224                 movlw   dir
                      00225                 call    servo_dirB
                      00226                 endm
                      00227 
                      00228 ;----------------------------------------------------
                      00229 ;   Interrupt vectors
                      00230 ;----------------------------------------------------
000000                00231     org 0x0000  ;reset vector
000000 EF0E F000      00232     goto        main    ;start of program
                      00233 
000008                00234     org 0x0008  ;high priority interrupt vector
000008 EF5B F007      00235     goto        ISR_high
                      00236 
000018                00237     org 0x0018  ;low priority interrupt vector
000018 EFA0 F007      00238     goto        ISR_low
                      00239 
                      00240 ;----------------------------------------------------
                      00241 ;   main program
                      00242 ;----------------------------------------------------
00001C                00243 main
                      00244 
                      00245     ;LEDs
                      00246     movlf       b'01100001',TRISA       ;set data direction
00001C 0E61               M         movlw    b'01100001'
00001E 6E92               M         movwf    TRISA
                      00247         movlf   b'10001110',ADCON1      ;set digital/analog functions
000020 0E8E               M         movlw    b'10001110'
000022 6EC1               M         movwf    ADCON1
000024 6A80           00248         clrf    PORTA   ;initialize L, C, R LEDs to off
                      00249 
                      00250     ;I/O settings
                      00251     movlf       b'00001111',TRISD       ;set I/O for PORTD
000026 0E0F               M         movlw    b'00001111'
000028 6E95               M         movwf    TRISD
00002A 6A83           00252     clrf    PORTD
                      00253     movlf       b'00000000',TRISE       ;set I/O for PORTE
00002C 0E00               M         movlw    b'00000000'
00002E 6E96               M         movwf    TRISE
000030 6A84           00254     clrf    PORTE
                      00255     movlf   b'00000110',TRISB   ;set I/O for PORTB
000032 0E06               M         movlw    b'00000110'
000034 6E93               M         movwf    TRISB
000036 6A81           00256     clrf    PORTB
                      00257     movlf   b'10100110',TRISC   ;set I/O for PORTC
000038 0EA6               M         movlw    b'10100110'
00003A 6E94               M         movwf    TRISC
00003C 6A82           00258     clrf    PORTC
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00259 
                      00260     ;set up timers and interrupt
                      00261     movlf   b'11001000',T0CON   ;set up timer0
00003E 0EC8               M         movlw    b'11001000'
000040 6ED5               M         movwf    T0CON
000042 94F2           00262     bcf     INTCON,TMR0IF       ;clear interrupt flag
                      00263     movlf   b'00111001',T1CON   ;set up timer1
000044 0E39               M         movlw    b'00111001'
000046 6ECD               M         movwf    T1CON
000048 909E           00264     bcf     PIR1,TMR1IF         ;clear interrupt flag
                      00265     movlf   b'11011001',T3CON   ;set up timer3
00004A 0ED9               M         movlw    b'11011001'
00004C 6EB1               M         movwf    T3CON
                      00266 
                      00267     ;set to prioity interrupts
00004E 8ED0           00268     bsf     RCON,IPEN           ;enable priority interrupts
                      00269 
                      00270     ;timer0 interrupt set up
000050 8AF2           00271     bsf     INTCON,TMR0IE       ;enable interrupt
000052 8AF1           00272     bsf     INTCON2,INTEDG1     ;set int to rising edge
000054 84F1           00273     bsf     INTCON2,TMR0IP      ;set timer0 int high priority bit
                      00274 
                      00275     ;timer1 interrupt set up
000056 809D           00276     bsf     PIE1,TMR1IE         ;enable interrupt
000058 809F           00277     bsf     IPR1,TMR1IP         ;set timer0 int high priority bit
                      00278 
                      00279     ;timer3 interrupt DISABLE
00005A 92A0           00280     bcf     PIE2, TMR3IE        ;disable interrupt
                      00281 
                      00282     ;CCP1 set up
                      00283     movlf   b'00000111',CCP1CON ;CCP1 in capture mode, every rising edge
00005C 0E07               M         movlw    b'00000111'
00005E 6EBD               M         movwf    CCP1CON
000060 949F           00284     bcf     IPR1, CCP1IP        ;set CCP1 low priority bit
                      00285 
                      00286     ;set ultrasonicA external interrupt
000062 9CF0           00287     bcf     INTCON3, INT1IP     ;set ultrasonic interrupt A as low priority
                      00288 
                      00289     ;set ultrasonicB external interrupt
000064 9EF0           00290     bcf     INTCON3, INT2IP     ;set ultrasonic interrupt B as low priority
                      00291 
                      00292     ;USART setup
                      00293     movlf   b'01000000',SPBRG   ;=64 -> 9.92KBAUD +0.16% error
000066 0E40               M         movlw    b'01000000'
000068 6EAF               M         movwf    SPBRG
                      00294     movlf   b'00100110',TXSTA
00006A 0E26               M         movlw    b'00100110'
00006C 6EAC               M         movwf    TXSTA
                      00295     movlf   b'10010000',RCSTA
00006E 0E90               M         movlw    b'10010000'
000070 6EAB               M         movwf    RCSTA
000072 8A9D           00296     bsf     PIE1,RCIE           ;enable receive
000074 9A9F           00297     bcf     IPR1,RCIP           ;set to low priority
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000076 9A9E           00298     bcf     PIR1,RCIF           ;clear interrupt flag
000078 989D           00299     bcf     PIE1,TXIE           ;disable transmit interrupts
                      00300 
                      00301     ;global enables
00007A 8EF2           00302     bsf     INTCON, GIEH        ;enable high priority interrupts
00007C 8CF2           00303     bsf     INTCON, GIEL        ;enable low priority interrupts
                      00304 
                      00305     ;intialize LCD
00007E EC74 F004      00306     call    LCDinit
                      00307 
000082 ECAA F000      00308     call    beaconSetup
                      00309 
                      00310 ;set number of beacons to find
000086                00311 beaconLoop
                      00312 
000086 6605           00313     tstfsz  event_printBeacons  ;should we print number of beacons?
000088 D002           00314     bra     noprint
00008A ECDA F000      00315     call    printBeacons
00008E                00316 noprint
00008E 6604           00317     tstfsz  event_RPGbeacons
000090 D005           00318     bra     checkBtn
000092 D000           00319     bra     checkBeacons
                      00320 
000094                00321 checkBeacons
000094 EC89 F005      00322     call    RPG_check
000098 ECC7 F000      00323     call    beaconEntry         ;how many beacons to find?
                      00324 
00009C                00325 checkBtn
00009C ECEF F000      00326     call    checkMomBtn         ;check if button has been pressed
                      00327 
0000A0 6614           00328     tstfsz  momBtnPressed
0000A2 D7F1           00329     bra     beaconLoop          ;if not, loop
0000A4                00330 endBeaconLoop
                      00331 
0000A4 EC7D F000      00332     call    mainSetup           ;else setup main
                      00333 
0000A8                00334 mainLoop
                      00335 
0000A8 6600           00336     tstfsz  paused              ;should we pause?
0000AA D7FE           00337     bra     mainLoop
                      00338     ;------------------------------------------------
                      00339     ;   always do this code
                      00340     ;------------------------------------------------
0000AC 6645           00341     tstfsz  mBSpeed             ;is speed A zero?
0000AE EC5A F005      00342     call    servoBMain          ;speed is not zero
0000B2 6643           00343     tstfsz  mASpeed             ;is speed B zero?
0000B4 EC56 F005      00344     call    servoAMain          ;speed is not zero
                      00345 
                      00346     ;   USART
                      00347     ;------------------------------------------------
0000B8 660A           00348     tstfsz  event_checkUsart    ;should we check for USART input?
0000BA ECAF F006      00349     call    usart_checkRX
                      00350 
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000BE 6601           00351     tstfsz  manual              ;should we allow manual control?
0000C0 D7F3           00352     bra     mainLoop
                      00353 
0000C2 ECE1 F005      00354     call    navigate            ;decide where to go based on sensors
                      00355 
0000C6                00356 noSearch
                      00357 
                      00358     ;   ultrasonic
                      00359     ;------------------------------------------------
0000C6 B681           00360     btfsc   ULTRA_TRIG_R        ;is pulse high?
0000C8 ECB8 F005      00361     call    checkPulse          ;if so, check
                      00362 
0000CC 6608           00363     tstfsz  event_checkDist     ;or should we check distance?
0000CE ECBD F005      00364     call    checkDist           ;if so, check distance
                      00365 
0000D2 6606           00366     tstfsz  event_ultraA        ;is event 0?
0000D4 D006           00367     bra     checkB              ;if not, dont trigger
0000D6 ECAF F005      00368     call    setTrigger   ;start pulse
0000DA 6A50           00369     clrf    ultra_sensorSel
                      00370     movlf   d'20',event_ultraA  ;reset event
0000DC 0E14               M         movlw    d'20'
0000DE 6E06               M         movwf    event_ultraA
0000E0 D007           00371     bra     noDistCheck
                      00372 
0000E2                00373 checkB
0000E2 6607           00374     tstfsz  event_ultraB        ;is event 0?
0000E4 D005           00375     bra     noDistCheck         ;if not, dont trigger
0000E6 ECAF F005      00376     call    setTrigger          ;start pulse
0000EA 6850           00377     setf    ultra_sensorSel
                      00378     movlf   d'25',event_ultraB  ;reset event
0000EC 0E19               M         movlw    d'25'
0000EE 6E07               M         movwf    event_ultraB
                      00379 
0000F0                00380 noDistCheck
                      00381 
                      00382     ;   IR sensor
                      00383     ;------------------------------------------------
0000F0 6609           00384     tstfsz  event_checkIR       ;should we check for beacon?
0000F2 D002           00385     bra     noIRCheck
0000F4 EC69 F006      00386     call    IR_check
0000F8                00387 noIRCheck
                      00388 
0000F8 D7D7           00389     bra     mainLoop
                      00390 
                      00391 ;----------------------------------------------------
                      00392 ;   setup routines
                      00393 ;----------------------------------------------------
                      00394 
                      00395 ;setup for main loop
0000FA                00396 mainSetup
0000FA ECFA F004      00397     call    LCD_clear
                      00398     macLCD_printString  mess_Search     ;print "Search"
                          M                     loadTBL mess_Search
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000FE 0E0F               M         movlw   high mess_Search
000100 6EF7               M         movwf   TBLPTRH
000102 0EBE               M         movlw   low mess_Search
000104 6EF6               M         movwf   TBLPTRL
000106 0009               M         TBLRD*+
000108 ECC1 F004          M                     call    LCD_printString
                      00399 
00010C 849D           00400     bsf     PIE1, CCP1IE        ;enable CCP interrupt
00010E 949E           00401     bcf     PIR1, CCP1IF        ;clear CCP interrupt flag
                      00402 
000110 86F0           00403     bsf     INTCON3, INT1IE     ;enable ultraA external interrupt
000112 90F0           00404     bcf     INTCON3, INT1IF     ;clear external interrupt flag
                      00405 
000114 88F0           00406     bsf     INTCON3, INT2IE     ;enable ultraB external interrupt
000116 92F0           00407     bcf     INTCON3, INT2IF     ;clear external interrupt flag
                      00408 
                      00409 
                      00410     ;move ROBOPIC forward
                      00411     macServo_dirA   FORWARD
000118 0E01               M                 movlw   FORWARD
00011A EC7C F005          M                 call    servo_dirA
                      00412     macServo_setA   mASpeed2
00011E 0E06               M                 movlw   mASpeed2
000120 EC68 F005          M                 call    servo_setA
                      00413     macServo_dirB   FORWARD
000124 0E01               M                 movlw   FORWARD
000126 EC7E F005          M                 call    servo_dirB
                      00414     macServo_setB   mBSpeed2
00012A 0E09               M                 movlw   mBSpeed2
00012C EC72 F005          M                 call    servo_setB
                      00415 
                      00416 ;    call    servo_stopA
                      00417 ;    call    servo_stopB
                      00418 
000130 6A50           00419     clrf    ultra_sensorSel             ;which sensor to sense
000132 6A06           00420     clrf    event_ultraA                ;check ultrasonic A (side)
000134 6A07           00421     clrf    event_ultraB                ;check ultrasonic B (front)
000136 6808           00422     setf    event_checkDist             ;should we check distance?
                      00423     movlf   d'50',event_checkIR         ;when should we check for beacon
000138 0E32               M         movlw    d'50'
00013A 6E09               M         movwf    event_checkIR
00013C 6A5E           00424     clrf    IR_currentVal               ;current IR period count
00013E 6A5F           00425     clrf    IR_currentVal+1
000140 6A60           00426     clrf    IR_prevVal                  ;prev IR period count
000142 6A61           00427     clrf    IR_prevVal+1
000144 6A5D           00428     clrf    navFlag1                    ;status of all sensors and modes
000146 6A00           00429     clrf    paused                      ;should we pause?
000148 6A01           00430     clrf    manual                      ;should we allow manual control?
00014A 6A5C           00431     clrf    leftTime                    ;how long should we turn left?
00014C 6A5B           00432     clrf    rightTime                   ;how long should we turn right?
                      00433 ;    movlf   d'2',event_displayFreq      
                      00434     movlf   ultraPulseTime,pulseLenTimer       ;init
00014E 0E0D               M         movlw    ultraPulseTime
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000150 6E4F               M         movwf    pulseLenTimer
                      00435 
000152 0012           00436     return
                      00437 
                      00438 ;setup for beacon loop
000154                00439 beaconSetup
                      00440     macLCD_printString  mess_Beacons    ;print "beacons"
                          M                     loadTBL mess_Beacons
000154 0E0F               M         movlw   high mess_Beacons
000156 6EF7               M         movwf   TBLPTRH
000158 0EB4               M         movlw   low mess_Beacons
00015A 6EF6               M         movwf   TBLPTRL
00015C 0009               M         TBLRD*+
00015E ECC1 F004          M                     call    LCD_printString
                      00441 
                      00442     movlf   0xFF,RPG_prev
000162 0EFF               M         movlw    0xFF
000164 6E4C               M         movwf    RPG_prev
000166 EC89 F005      00443     call    RPG_check
00016A ECAC F005      00444     call    RPG_resetCount      ;reset RPG counter to 0
00016E ECA9 F005      00445     call    RPG_inc             ;set to 1
                      00446 
000172 6A05           00447     clrf    event_printBeacons  ;print beacons right away
                      00448     movlf   d'1',beaconCountTmp ;start at 1
000174 0E01               M         movlw    d'1'
000176 6E12               M         movwf    beaconCountTmp
                      00449     movlf   d'1',beaconCount    ;start at 1
000178 0E01               M         movlw    d'1'
00017A 6E11               M         movwf    beaconCount
                      00450 
00017C 6814           00451     setf    momBtnPressed       ;init flag to not pressed
00017E 6A13           00452     clrf    momBtnState         ;init btn state
                      00453 
                      00454     ;make ROBOPIC stationary
000180 EC64 F005      00455     call    servo_stopA
000184 EC66 F005      00456     call    servo_stopB
                      00457 
                      00458     movlf   d'1',event_RPGbeacons
000188 0E01               M         movlw    d'1'
00018A 6E04               M         movwf    event_RPGbeacons
00018C 0012           00459     return
                      00460 
                      00461 ;----------------------------------------------------
                      00462 ;   main/device routines
                      00463 ;----------------------------------------------------
                      00464 
                      00465 
                      00466 ; allows user to enter # of becons to find
00018E                00467 beaconEntry
00018E 0E06           00468     movlw   0x06                ;greater than 5?
000190 624E           00469     cpfseq  RPG_count+1
000192 D002           00470     bra     notHigh
000194 ECA3 F005      00471     call    RPG_dec             ;if so, go back to 5
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00472 
000198                00473 notHigh
000198 0E00           00474     movlw   0x00                ;less than 1?
00019A 624E           00475     cpfseq  RPG_count+1
00019C D002           00476     bra     inLimits
00019E ECA9 F005      00477     call    RPG_inc             ;if so, go back to 1
                      00478 
0001A2                00479 inLimits
                      00480 ;    macLCD_setAddr  0x40        ;print at beginning of second line
0001A2 C04E F012      00481     movff   RPG_count+1,beaconCountTmp
0001A6 C04E F011      00482     movff   RPG_count+1,beaconCount
                      00483 
0001AA ECDA F000      00484     call    printBeacons
                      00485 
                      00486     movlf   d'1',event_RPGbeacons   ;reset: next check in 20ms
0001AE 0E01               M         movlw    d'1'
0001B0 6E04               M         movwf    event_RPGbeacons
0001B2 0012           00487     return
                      00488 
                      00489 ;prints * for each beacon
0001B4                00490 printBeacons
                      00491     macLCD_setAddr  0x40        ;print at beginning of second line
                          M                 movlf   0x40,tmpLCDsend
0001B4 0E40               M         movlw    0x40
0001B6 6E32               M         movwf    tmpLCDsend
0001B8 ECD2 F004          M                 call    LCD_setAddr
0001BC                00492 printBeaconsLoop
                      00493     macLCD_printChar    b'00101010' ;print "*" for each beacon
                          M                     movlf   b'00101010',tmpLCDsend
0001BC 0E2A               M         movlw    b'00101010'
0001BE 6E32               M         movwf    tmpLCDsend
0001C0 ECC9 F004          M                     call    LCD_printChar
0001C4 2E12           00494     decfsz  beaconCountTmp
0001C6 D7FA           00495     bra     printBeaconsLoop
                      00496 
                      00497     movlf   d'4',beaconCountTmp
0001C8 0E04               M         movlw    d'4'
0001CA 6E12               M         movwf    beaconCountTmp
0001CC                00498 clearBeacons
                      00499     macLCD_printChar    b'00100000' ;print " " 5 times to erase prev
                          M                     movlf   b'00100000',tmpLCDsend
0001CC 0E20               M         movlw    b'00100000'
0001CE 6E32               M         movwf    tmpLCDsend
0001D0 ECC9 F004          M                     call    LCD_printChar
0001D4 2E12           00500     decfsz  beaconCountTmp
0001D6 D7FA           00501     bra     clearBeacons
                      00502 
                      00503     movlf   d'4',event_printBeacons   ;reset: next check in 80ms
0001D8 0E04               M         movlw    d'4'
0001DA 6E05               M         movwf    event_printBeacons
0001DC 0012           00504     return
                      00505 
                      00506 
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00507 ; check and debounce momentary button
0001DE                00508 checkMomBtn
0001DE CF83 F013      00509     movff   PORTD,momBtnState
0001E2 0E08           00510     movlw   b'00001000'
0001E4 1613           00511     andwf   momBtnState
0001E6 6613           00512     tstfsz  momBtnState
0001E8 D00C           00513     bra     notPressed
0001EA D000           00514     bra     pressed
0001EC                00515 pressed
                      00516     delayXm d'5'
                          M         movlf   d'5',delay_multi
0001EC 0E05               M         movlw    d'5'
0001EE 6E42               M         movwf    delay_multi
0001F0 EC4F F005          M         call    delayms
0001F4 CF83 F013      00517     movff   PORTD,momBtnState
0001F8 0E08           00518     movlw   b'00001000'
0001FA 1613           00519     andwf   momBtnState
0001FC 6613           00520     tstfsz  momBtnState
0001FE D001           00521     bra     notPressed
000200 6A14           00522     clrf    momBtnPressed
000202                00523 notPressed
000202 0012           00524     return
                      00525 
                      00526 
                      00527 ;----------------------------------------------------
                      00528 ;   include statements
                      00529 ;----------------------------------------------------
                      00530 #include <C:\MATH18\FXD3216U.inc>
                      00001 ;;;;; FXD3216U.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ;       32/16 Bit Unsigned Fixed Point Divide 32/16 -> 32.16
                      00004 ;
                      00005 ;       Input:  32 bit unsigned fixed point dividend in AARGB0, AARGB1, AARGB2
                      00006 ;               16 bit unsigned fixed point divisor in BARGB0, BARGB1
                      00007 ;
                      00008 ;       Use:    CALL    FXD3216U
                      00009 ;
                      00010 ;       Output: 32 bit unsigned fixed point quotient in AARGB0, AARGB1, AARGB2
                      00011 ;               16 bit unsigned fixed point remainder in REMB0, REMB1
                      00012 ;
                      00013 ;       Result: AARG, REM  <--  AARG / BARG
                      00014 ;
                      00015 ;   Memory: Prog  
                      00016 ;           Data
                      00017 ;
                      00018 ;   Timing: Min  
                      00019 ;           Max  
                      00020 ;           Avg  
                      00021 ;
                      00022 ;   (100,000 Trials)
                      00023 ;
                      00024 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00025 
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00026         IFNDEF _FXD3216U
                      00027         #DEFINE _FXD3216U
                      00028         #INCLUDE <C:\MATH18\FXD3208U.INC>
                      00001 ;;;;; FXD3208U.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ; 32/08 Bit Unsigned Fixed Point Divide 32/08 -> 32.08
                      00004 ;
                      00005 ;   Input:  32 bit unsigned fixed point dividend in AARGB0, AARGB1, AARGB2, AARGB3
                      00006 ;            8 bit unsigned fixed point divisor in BARGB0
                      00007 ;
                      00008 ;   Use:    CALL  FXD3208U
                      00009 ;
                      00010 ;   Output: 32 bit unsigned fixed point quotient in AARGB0, AARGB1, AARGB2, AARGB3
                      00011 ;            8 bit unsigned fixed point remainder in REMB0
                      00012 ;
                      00013 ;   Result: AARG, REM  <--  AARG / BARG
                      00014 ;
                      00015 ;   Memory: Prog  
                      00016 ;           Data
                      00017 ;
                      00018 ;   Timing: Min  
                      00019 ;           Max  
                      00020 ;           Avg  
                      00021 ;
                      00022 ;   (100,000 Trials)
                      00023 ;
                      00024 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00025 
                      00026         IFNDEF _FXD3208U
                      00027         #DEFINE _FXD3208U
                      00028         #INCLUDE <C:\MATH18\FXD1608U.INC>
                      00001 ;;;;; FXD1608U.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ; 16/8 Bit Unsigned Fixed Point Divide 16/08 -> 16.08
                      00004 ;
                      00005 ;   Input:  16 bit unsigned fixed point dividend in AARGB0, AARGB1
                      00006 ;            8 bit unsigned fixed point divisor in BARGB0
                      00007 ;
                      00008 ;   Use:    CALL  FXD1608U
                      00009 ;
                      00010 ;   Output: 16 bit unsigned fixed point quotient in AARGB0, AARGB1
                      00011 ;            8 bit unsigned fixed point remainder in REMB0
                      00012 ;
                      00013 ;   Result: AARG, REM  <--  AARG / BARG
                      00014 ;
                      00015 ;   Memory: Prog  
                      00016 ;           Data 
                      00017 ;
                      00018 ;   Timing: Min  
                      00019 ;           Max  
                      00020 ;           Avg  
                      00021 ;
                      00022 ;   (100,000 Trials)
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00023 ;
                      00024 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00025 
                      00026         IFNDEF _FXD1608U
                      00027         #DEFINE _FXD1608U
                      00028         #INCLUDE <C:\MATH18\TBL256.INC>
                      00001 ;;;;; TBL256.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ; The table IBXTBL256 is used by all routines and consists of 16-bit
                      00004 ; upper bound approximations to the reciprocal of BARGB0.
                      00005 ;
                      00006 ;   Memory: Prog 
                      00007 ;
                      00008 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00009 
                      00010         IFNDEF _TBL256
                      00011         #DEFINE _TBL256
                      00012 
000204                00013 IBXTBL256
000204 0000           00014         DATA 0x0000
000206 0001           00015         DATA 0x0001
000208 8001           00016         DATA 0x8001
00020A 5556           00017         DATA 0x5556
00020C 4001           00018         DATA 0x4001
00020E 3334           00019         DATA 0x3334
000210 2AAB           00020         DATA 0x2AAB
000212 2493           00021         DATA 0x2493
000214 2001           00022         DATA 0x2001
000216 1C72           00023         DATA 0x1C72
000218 199A           00024         DATA 0x199A
00021A 1746           00025         DATA 0x1746
00021C 1556           00026         DATA 0x1556
00021E 13B2           00027         DATA 0x13B2
000220 124A           00028         DATA 0x124A
000222 1112           00029         DATA 0x1112
000224 1001           00030         DATA 0x1001
000226 0F10           00031         DATA 0x0F10
000228 0E39           00032         DATA 0x0E39
00022A 0D7A           00033         DATA 0x0D7A
00022C 0CCD           00034         DATA 0x0CCD
00022E 0C31           00035         DATA 0x0C31
000230 0BA3           00036         DATA 0x0BA3
000232 0B22           00037         DATA 0x0B22
000234 0AAB           00038         DATA 0x0AAB
000236 0A3E           00039         DATA 0x0A3E
000238 09D9           00040         DATA 0x09D9
00023A 097C           00041         DATA 0x097C
00023C 0925           00042         DATA 0x0925
00023E 08D4           00043         DATA 0x08D4
000240 0889           00044         DATA 0x0889
000242 0843           00045         DATA 0x0843
000244 0801           00046         DATA 0x0801
000246 07C2           00047         DATA 0x07C2
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000248 0788           00048         DATA 0x0788
00024A 0751           00049         DATA 0x0751
00024C 071D           00050         DATA 0x071D
00024E 06EC           00051         DATA 0x06EC
000250 06BD           00052         DATA 0x06BD
000252 0691           00053         DATA 0x0691
000254 0667           00054         DATA 0x0667
000256 063F           00055         DATA 0x063F
000258 0619           00056         DATA 0x0619
00025A 05F5           00057         DATA 0x05F5
00025C 05D2           00058         DATA 0x05D2
00025E 05B1           00059         DATA 0x05B1
000260 0591           00060         DATA 0x0591
000262 0573           00061         DATA 0x0573
000264 0556           00062         DATA 0x0556
000266 053A           00063         DATA 0x053A
000268 051F           00064         DATA 0x051F
00026A 0506           00065         DATA 0x0506
00026C 04ED           00066         DATA 0x04ED
00026E 04D5           00067         DATA 0x04D5
000270 04BE           00068         DATA 0x04BE
000272 04A8           00069         DATA 0x04A8
000274 0493           00070         DATA 0x0493
000276 047E           00071         DATA 0x047E
000278 046A           00072         DATA 0x046A
00027A 0457           00073         DATA 0x0457
00027C 0445           00074         DATA 0x0445
00027E 0433           00075         DATA 0x0433
000280 0422           00076         DATA 0x0422
000282 0411           00077         DATA 0x0411
000284 0401           00078         DATA 0x0401
000286 03F1           00079         DATA 0x03F1
000288 03E1           00080         DATA 0x03E1
00028A 03D3           00081         DATA 0x03D3
00028C 03C4           00082         DATA 0x03C4
00028E 03B6           00083         DATA 0x03B6
000290 03A9           00084         DATA 0x03A9
000292 039C           00085         DATA 0x039C
000294 038F           00086         DATA 0x038F
000296 0382           00087         DATA 0x0382
000298 0376           00088         DATA 0x0376
00029A 036A           00089         DATA 0x036A
00029C 035F           00090         DATA 0x035F
00029E 0354           00091         DATA 0x0354
0002A0 0349           00092         DATA 0x0349
0002A2 033E           00093         DATA 0x033E
0002A4 0334           00094         DATA 0x0334
0002A6 032A           00095         DATA 0x032A
0002A8 0320           00096         DATA 0x0320
0002AA 0316           00097         DATA 0x0316
0002AC 030D           00098         DATA 0x030D
0002AE 0304           00099         DATA 0x0304
0002B0 02FB           00100         DATA 0x02FB
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002B2 02F2           00101         DATA 0x02F2
0002B4 02E9           00102         DATA 0x02E9
0002B6 02E1           00103         DATA 0x02E1
0002B8 02D9           00104         DATA 0x02D9
0002BA 02D1           00105         DATA 0x02D1
0002BC 02C9           00106         DATA 0x02C9
0002BE 02C1           00107         DATA 0x02C1
0002C0 02BA           00108         DATA 0x02BA
0002C2 02B2           00109         DATA 0x02B2
0002C4 02AB           00110         DATA 0x02AB
0002C6 02A4           00111         DATA 0x02A4
0002C8 029D           00112         DATA 0x029D
0002CA 0296           00113         DATA 0x0296
0002CC 0290           00114         DATA 0x0290
0002CE 0289           00115         DATA 0x0289
0002D0 0283           00116         DATA 0x0283
0002D2 027D           00117         DATA 0x027D
0002D4 0277           00118         DATA 0x0277
0002D6 0271           00119         DATA 0x0271
0002D8 026B           00120         DATA 0x026B
0002DA 0265           00121         DATA 0x0265
0002DC 025F           00122         DATA 0x025F
0002DE 025A           00123         DATA 0x025A
0002E0 0254           00124         DATA 0x0254
0002E2 024F           00125         DATA 0x024F
0002E4 024A           00126         DATA 0x024A
0002E6 0244           00127         DATA 0x0244
0002E8 023F           00128         DATA 0x023F
0002EA 023A           00129         DATA 0x023A
0002EC 0235           00130         DATA 0x0235
0002EE 0231           00131         DATA 0x0231
0002F0 022C           00132         DATA 0x022C
0002F2 0227           00133         DATA 0x0227
0002F4 0223           00134         DATA 0x0223
0002F6 021E           00135         DATA 0x021E
0002F8 021A           00136         DATA 0x021A
0002FA 0215           00137         DATA 0x0215
0002FC 0211           00138         DATA 0x0211
0002FE 020D           00139         DATA 0x020D
000300 0209           00140         DATA 0x0209
000302 0205           00141         DATA 0x0205
000304 0201           00142         DATA 0x0201
000306 01FD           00143         DATA 0x01FD
000308 01F9           00144         DATA 0x01F9
00030A 01F5           00145         DATA 0x01F5
00030C 01F1           00146         DATA 0x01F1
00030E 01ED           00147         DATA 0x01ED
000310 01EA           00148         DATA 0x01EA
000312 01E6           00149         DATA 0x01E6
000314 01E2           00150         DATA 0x01E2
000316 01DF           00151         DATA 0x01DF
000318 01DB           00152         DATA 0x01DB
00031A 01D8           00153         DATA 0x01D8
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00031C 01D5           00154         DATA 0x01D5
00031E 01D1           00155         DATA 0x01D1
000320 01CE           00156         DATA 0x01CE
000322 01CB           00157         DATA 0x01CB
000324 01C8           00158         DATA 0x01C8
000326 01C4           00159         DATA 0x01C4
000328 01C1           00160         DATA 0x01C1
00032A 01BE           00161         DATA 0x01BE
00032C 01BB           00162         DATA 0x01BB
00032E 01B8           00163         DATA 0x01B8
000330 01B5           00164         DATA 0x01B5
000332 01B3           00165         DATA 0x01B3
000334 01B0           00166         DATA 0x01B0
000336 01AD           00167         DATA 0x01AD
000338 01AA           00168         DATA 0x01AA
00033A 01A7           00169         DATA 0x01A7
00033C 01A5           00170         DATA 0x01A5
00033E 01A2           00171         DATA 0x01A2
000340 019F           00172         DATA 0x019F
000342 019D           00173         DATA 0x019D
000344 019A           00174         DATA 0x019A
000346 0198           00175         DATA 0x0198
000348 0195           00176         DATA 0x0195
00034A 0193           00177         DATA 0x0193
00034C 0190           00178         DATA 0x0190
00034E 018E           00179         DATA 0x018E
000350 018B           00180         DATA 0x018B
000352 0189           00181         DATA 0x0189
000354 0187           00182         DATA 0x0187
000356 0184           00183         DATA 0x0184
000358 0182           00184         DATA 0x0182
00035A 0180           00185         DATA 0x0180
00035C 017E           00186         DATA 0x017E
00035E 017B           00187         DATA 0x017B
000360 0179           00188         DATA 0x0179
000362 0177           00189         DATA 0x0177
000364 0175           00190         DATA 0x0175
000366 0173           00191         DATA 0x0173
000368 0171           00192         DATA 0x0171
00036A 016F           00193         DATA 0x016F
00036C 016D           00194         DATA 0x016D
00036E 016B           00195         DATA 0x016B
000370 0169           00196         DATA 0x0169
000372 0167           00197         DATA 0x0167
000374 0165           00198         DATA 0x0165
000376 0163           00199         DATA 0x0163
000378 0161           00200         DATA 0x0161
00037A 015F           00201         DATA 0x015F
00037C 015D           00202         DATA 0x015D
00037E 015B           00203         DATA 0x015B
000380 0159           00204         DATA 0x0159
000382 0158           00205         DATA 0x0158
000384 0156           00206         DATA 0x0156
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000386 0154           00207         DATA 0x0154
000388 0152           00208         DATA 0x0152
00038A 0151           00209         DATA 0x0151
00038C 014F           00210         DATA 0x014F
00038E 014D           00211         DATA 0x014D
000390 014B           00212         DATA 0x014B
000392 014A           00213         DATA 0x014A
000394 0148           00214         DATA 0x0148
000396 0147           00215         DATA 0x0147
000398 0145           00216         DATA 0x0145
00039A 0143           00217         DATA 0x0143
00039C 0142           00218         DATA 0x0142
00039E 0140           00219         DATA 0x0140
0003A0 013F           00220         DATA 0x013F
0003A2 013D           00221         DATA 0x013D
0003A4 013C           00222         DATA 0x013C
0003A6 013A           00223         DATA 0x013A
0003A8 0139           00224         DATA 0x0139
0003AA 0137           00225         DATA 0x0137
0003AC 0136           00226         DATA 0x0136
0003AE 0134           00227         DATA 0x0134
0003B0 0133           00228         DATA 0x0133
0003B2 0131           00229         DATA 0x0131
0003B4 0130           00230         DATA 0x0130
0003B6 012F           00231         DATA 0x012F
0003B8 012D           00232         DATA 0x012D
0003BA 012C           00233         DATA 0x012C
0003BC 012A           00234         DATA 0x012A
0003BE 0129           00235         DATA 0x0129
0003C0 0128           00236         DATA 0x0128
0003C2 0126           00237         DATA 0x0126
0003C4 0125           00238         DATA 0x0125
0003C6 0124           00239         DATA 0x0124
0003C8 0122           00240         DATA 0x0122
0003CA 0121           00241         DATA 0x0121
0003CC 0120           00242         DATA 0x0120
0003CE 011F           00243         DATA 0x011F
0003D0 011D           00244         DATA 0x011D
0003D2 011C           00245         DATA 0x011C
0003D4 011B           00246         DATA 0x011B
0003D6 011A           00247         DATA 0x011A
0003D8 0119           00248         DATA 0x0119
0003DA 0117           00249         DATA 0x0117
0003DC 0116           00250         DATA 0x0116
0003DE 0115           00251         DATA 0x0115
0003E0 0114           00252         DATA 0x0114
0003E2 0113           00253         DATA 0x0113
0003E4 0112           00254         DATA 0x0112
0003E6 0110           00255         DATA 0x0110
0003E8 010F           00256         DATA 0x010F
0003EA 010E           00257         DATA 0x010E
0003EC 010D           00258         DATA 0x010D
0003EE 010C           00259         DATA 0x010C
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003F0 010B           00260         DATA 0x010B
0003F2 010A           00261         DATA 0x010A
0003F4 0109           00262         DATA 0x0109
0003F6 0108           00263         DATA 0x0108
0003F8 0107           00264         DATA 0x0107
0003FA 0106           00265         DATA 0x0106
0003FC 0105           00266         DATA 0x0105
0003FE 0104           00267         DATA 0x0104
000400 0103           00268         DATA 0x0103
000402 0102           00269         DATA 0x0102
000404 0101           00270         DATA 0x0101
                      00271 
                      00272 
                      00273         ENDIF
                      00274 
                      00275 
                      00276 
                      00029         #INCLUDE <C:\MATH18\UTILS.INC>
                      00001 ;;;;; UTILS.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ; Various utilities used by the math routines.
                      00004 ;
                      00005 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00006 
                      00007         IFNDEF _UTILS
                      00008         #DEFINE _UTILS
                      00009 
                      00010 ;;;;; DGETNRMD ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00011 ;
                      00012 ; This routine returns the normalization factor in the W register
                      00013 ;
                      00014 ;   Memory: Prog 
                      00015 ;           Data 7 (BARGB6..0)
                      00016 
000406                00017 DGETNRMD
000406 0E10           00018         MOVLW  0x10
000408 601F           00019         CPFSLT  BARGB0
00040A D008           00020         BRA  DGETNRMDH
00040C                00021 DGETNRMDL
00040C B61F           00022         BTFSC  BARGB0,3
00040E 0C10           00023         RETLW  0x10  
000410 B41F           00024         BTFSC  BARGB0,2
000412 0C20           00025         RETLW  0x20  
000414 B21F           00026         BTFSC  BARGB0,1
000416 0C40           00027         RETLW  0x40
000418 B01F           00028         BTFSC  BARGB0,0
00041A 0C80           00029         RETLW  0x80
00041C                00030 DGETNRMDH
00041C BC1F           00031         BTFSC  BARGB0,6
00041E 0C02           00032         RETLW  0x02  
000420 BA1F           00033         BTFSC  BARGB0,5
000422 0C04           00034         RETLW  0x04  
000424 B81F           00035         BTFSC  BARGB0,4
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000426 0C08           00036         RETLW  0x08
                      00037 
                      00038 
                      00039 ;;;;; DXZERO ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00040 ;
                      00041 ; Routines for the trivial cases when the quotient is zero.
                      00042 ;
                      00043 ;   Memory: Prog 15
                      00044 ;           Data 8 (AARGB3..0 + REMB3..0)
                      00045 
000428                00046 D3232QZERO
000428 C019 F01D      00047         MOVFF  AARGB3,REMB3
00042C 6A19           00048         CLRF  AARGB3
00042E                00049 D2424QZERO
00042E C018 F01C      00050         MOVFF  AARGB2,REMB2
000432 6A18           00051         CLRF  AARGB2
000434                00052 D1616QZERO
000434 C017 F01B      00053         MOVFF  AARGB1,REMB1
000438 6A17           00054         CLRF  AARGB1
00043A C016 F01A      00055         MOVFF  AARGB0,REMB0
00043E 6A16           00056         CLRF  AARGB0
                      00057 
000440 0C00           00058         RETLW  0x00
                      00059 
000442                00060 DREMZERO8
000442 6A1A           00061         CLRF  REMB0
000444 0C00           00062         RETLW  0x00
                      00063 
                      00064 
                      00065         ENDIF
                      00066 
                      00067 
                      00068 
                      00030 
000446                00031 FXD1608U
000446 0E01           00032         MOVLW  0x01
000448 641F           00033         CPFSGT  BARGB0
00044A EF21 F002      00034         GOTO  DREMZERO8
                      00035 
00044E                00036 FXD1608U1
00044E 90D8           00037         BCF  _C
000450 6AF7           00038         CLRF  TBLPTRH
000452 341F           00039         RLCF  BARGB0,W
000454 36F7           00040         RLCF  TBLPTRH,F
000456 0F05           00041         ADDLW  LOW (IBXTBL256+1)  ; access reciprocal table
000458 6EF6           00042         MOVWF  TBLPTRL
00045A 0E02           00043         MOVLW  HIGH (IBXTBL256)
00045C 22F7           00044         ADDWFC  TBLPTRH,F
00045E 000A           00045         TBLRD  *-
                      00046 
000460                00047 FXD1608U2
000460 C016 F01B      00048         MOVFF  AARGB0,REMB1
000464 C017 F01A      00049         MOVFF  AARGB1,REMB0
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00050 
000468 50F5           00051         MOVF  TABLAT,W          ; estimate quotient
00046A 021B           00052         MULWF  REMB1
00046C CFF4 F016      00053         MOVFF  PRODH,AARGB0
000470 CFF3 F017      00054         MOVFF  PRODL,AARGB1
                      00055 
000474 0009           00056         TBLRD  *+
000476 50F5           00057         MOVF  TABLAT,W
000478 021A           00058         MULWF  REMB0
00047A CFF4 F018      00059         MOVFF  PRODH,AARGB2
                      00060 
00047E 021B           00061         MULWF  REMB1
000480 50F3           00062         MOVF  PRODL,W
000482 2618           00063         ADDWF  AARGB2,F
000484 50F4           00064         MOVF  PRODH,W
000486 2217           00065         ADDWFC  AARGB1,F
000488 6AE8           00066         CLRF  WREG
00048A 2216           00067         ADDWFC  AARGB0,F
                      00068 
00048C 000A           00069         TBLRD  *-
00048E 50F5           00070         MOVF  TABLAT,W
000490 021A           00071         MULWF  REMB0
000492 50F3           00072         MOVF  PRODL,W
000494 2618           00073         ADDWF  AARGB2,F
000496 50F4           00074         MOVF  PRODH,W
000498 2217           00075         ADDWFC  AARGB1,F
00049A 6AE8           00076         CLRF  WREG
00049C 2216           00077         ADDWFC  AARGB0,F
                      00078         
00049E 501F           00079         MOVF  BARGB0,W
0004A0 0217           00080         MULWF  AARGB1
0004A2 CFF3 F019      00081         MOVFF  PRODL,AARGB3
0004A6 CFF4 F018      00082         MOVFF  PRODH,AARGB2
0004AA 0216           00083         MULWF  AARGB0
0004AC 50F3           00084         MOVF  PRODL,W
0004AE 2618           00085         ADDWF  AARGB2,F
                      00086 
0004B0 5019           00087         MOVF  AARGB3,W          ; estimate remainder
0004B2 5E1A           00088         SUBWF  REMB0,F
0004B4 5018           00089         MOVF  AARGB2,W
0004B6 5A1B           00090         SUBWFB  REMB1,F
                      00091 
0004B8 AE1B           00092         BTFSS  REMB1,MSB        ; test remainder
0004BA 0C00           00093         RETLW  0x00
                      00094 
0004BC 0617           00095         DECF  AARGB1,F
0004BE 6AE8           00096         CLRF  WREG
0004C0 5A16           00097         SUBWFB  AARGB0,F
                      00098 
0004C2 501F           00099         MOVF  BARGB0,W
0004C4 261A           00100         ADDWF  REMB0,F
                      00101 
0004C6 0C00           00102         RETLW  0x00
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00103 
                      00104 
                      00105         ENDIF
                      00029 
0004C8                00030 FXD3208U
0004C8 C016 F02C      00031         MOVFF  AARGB0,TEMPB0
0004CC C017 F02D      00032         MOVFF  AARGB1,TEMPB1
0004D0 C018 F02E      00033         MOVFF  AARGB2,TEMPB2
0004D4 C019 F02F      00034         MOVFF  AARGB3,TEMPB3
                      00035 
0004D8 EC23 F002      00036         CALL  FXD1608U
                      00037 
0004DC C016 F02C      00038         MOVFF  AARGB0,TEMPB0
0004E0 C017 F02D      00039         MOVFF  AARGB1,TEMPB1
                      00040 
0004E4 C02E F017      00041         MOVFF  TEMPB2,AARGB1
0004E8 C01A F016      00042         MOVFF  REMB0,AARGB0
                      00043 
0004EC EC23 F002      00044         CALL  FXD1608U
                      00045 
0004F0 C017 F02E      00046         MOVFF  AARGB1,TEMPB2
0004F4 C02F F017      00047         MOVFF  TEMPB3,AARGB1
0004F8 C01A F016      00048         MOVFF  REMB0,AARGB0
                      00049 
0004FC EC23 F002      00050         CALL  FXD1608U
                      00051 
000500 C017 F019      00052         MOVFF  AARGB1,AARGB3
000504 C02C F016      00053         MOVFF  TEMPB0,AARGB0
000508 C02D F017      00054         MOVFF  TEMPB1,AARGB1
00050C C02E F018      00055         MOVFF  TEMPB2,AARGB2
                      00056 
000510 0C00           00057         RETLW  0x00
                      00058 
                      00059 
                      00060         ENDIF
                      00029         #INCLUDE <C:\MATH18\FXD2416U.INC>
                      00001 ;;;;; FXD2416U.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ; 24/16 Bit Unsigned Fixed Point Divide 24/16 -> 24.16
                      00004 ;
                      00005 ;   Input:  24 bit unsigned fixed point dividend in AARGB0, AARGB1, AARGB2
                      00006 ;           16 bit unsigned fixed point divisor in BARGB0, BARGB1
                      00007 ;
                      00008 ;   Use:    CALL  FXD2416U
                      00009 ;
                      00010 ;   Output: 24 bit unsigned fixed point quotient in AARGB0, AARGB1, AARGB2
                      00011 ;           16 bit unsigned fixed point remainder in REMB0, REMB1
                      00012 ;
                      00013 ;   Result: AARG, REM  <--  AARG / BARG
                      00014 ;
                      00015 ;   Memory: Prog  
                      00016 ;           Data
                      00017 ;
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00018 ;   Timing: Min  
                      00019 ;           Max  
                      00020 ;           Avg  
                      00021 ;
                      00022 ;   (100,000 Trials)
                      00023 ;
                      00024 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00025 
                      00026         IFNDEF _FXD2416U
                      00027         #DEFINE _FXD2416U
                      00028         #INCLUDE <C:\MATH18\FXD2408U.INC>
                      00001 ;;;;; FXD2408U.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ; 24/08 Bit Unsigned Fixed Point Divide 24/08 -> 24.08
                      00004 ;
                      00005 ;   Input:  24 bit unsigned fixed point dividend in AARGB0, AARGB1, AARGB2
                      00006 ;            8 bit unsigned fixed point divisor in BARGB0
                      00007 ;
                      00008 ;   Use:    CALL  FXD2408U
                      00009 ;
                      00010 ;   Output: 24 bit unsigned fixed point quotient in AARGB0, AARGB1, AARGB2
                      00011 ;            8 bit unsigned fixed point remainder in REMB0
                      00012 ;
                      00013 ;   Result: AARG, REM  <--  AARG / BARG
                      00014 ;
                      00015 ;   Memory: Prog  (TBL256 + UTILS + FXD1608U)
                      00016 ;           Data 14 (AARGB3..0 + BARGB3..0 + CARGB2 + REMB1..0 + TEMPB2..0)
                      00017 ;
                      00018 ;   Timing: Min  
                      00019 ;           Max  
                      00020 ;           Avg  
                      00021 ;
                      00022 ;   (100,000 Trials)
                      00023 ;
                      00024 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00025 
                      00026         IFNDEF _FXD2408U
                      00027         #DEFINE _FXD2408U
                      00028         #INCLUDE <C:\MATH18\FXD1608U.INC>
                      00106 ;;;;; FXD1608U.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00107 ;
                      00108 ; 16/8 Bit Unsigned Fixed Point Divide 16/08 -> 16.08
                      00109 ;
                      00110 ;   Input:  16 bit unsigned fixed point dividend in AARGB0, AARGB1
                      00111 ;            8 bit unsigned fixed point divisor in BARGB0
                      00112 ;
                      00113 ;   Use:    CALL  FXD1608U
                      00114 ;
                      00115 ;   Output: 16 bit unsigned fixed point quotient in AARGB0, AARGB1
                      00116 ;            8 bit unsigned fixed point remainder in REMB0
                      00117 ;
                      00118 ;   Result: AARG, REM  <--  AARG / BARG
                      00119 ;
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00120 ;   Memory: Prog  
                      00121 ;           Data 
                      00122 ;
                      00123 ;   Timing: Min  
                      00124 ;           Max  
                      00125 ;           Avg  
                      00126 ;
                      00127 ;   (100,000 Trials)
                      00128 ;
                      00129 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00130 
                      00131         IFNDEF _FXD1608U
                      00132         #DEFINE _FXD1608U
                      00133         #INCLUDE <C:\MATH18\TBL256.INC>
                      00134         #INCLUDE <C:\MATH18\UTILS.INC>
                      00135 
                      00136 FXD1608U
                      00137         MOVLW  0x01
                      00138         CPFSGT  BARGB0
                      00139         GOTO  DREMZERO8
                      00140 
                      00141 FXD1608U1
                      00142         BCF  _C
                      00143         CLRF  TBLPTRH
                      00144         RLCF  BARGB0,W
                      00145         RLCF  TBLPTRH,F
                      00146         ADDLW  LOW (IBXTBL256+1)  ; access reciprocal table
                      00147         MOVWF  TBLPTRL
                      00148         MOVLW  HIGH (IBXTBL256)
                      00149         ADDWFC  TBLPTRH,F
                      00150         TBLRD  *-
                      00151 
                      00152 FXD1608U2
                      00153         MOVFF  AARGB0,REMB1
                      00154         MOVFF  AARGB1,REMB0
                      00155 
                      00156         MOVF  TABLAT,W          ; estimate quotient
                      00157         MULWF  REMB1
                      00158         MOVFF  PRODH,AARGB0
                      00159         MOVFF  PRODL,AARGB1
                      00160 
                      00161         TBLRD  *+
                      00162         MOVF  TABLAT,W
                      00163         MULWF  REMB0
                      00164         MOVFF  PRODH,AARGB2
                      00165 
                      00166         MULWF  REMB1
                      00167         MOVF  PRODL,W
                      00168         ADDWF  AARGB2,F
                      00169         MOVF  PRODH,W
                      00170         ADDWFC  AARGB1,F
                      00171         CLRF  WREG
                      00172         ADDWFC  AARGB0,F
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00173 
                      00174         TBLRD  *-
                      00175         MOVF  TABLAT,W
                      00176         MULWF  REMB0
                      00177         MOVF  PRODL,W
                      00178         ADDWF  AARGB2,F
                      00179         MOVF  PRODH,W
                      00180         ADDWFC  AARGB1,F
                      00181         CLRF  WREG
                      00182         ADDWFC  AARGB0,F
                      00183         
                      00184         MOVF  BARGB0,W
                      00185         MULWF  AARGB1
                      00186         MOVFF  PRODL,AARGB3
                      00187         MOVFF  PRODH,AARGB2
                      00188         MULWF  AARGB0
                      00189         MOVF  PRODL,W
                      00190         ADDWF  AARGB2,F
                      00191 
                      00192         MOVF  AARGB3,W          ; estimate remainder
                      00193         SUBWF  REMB0,F
                      00194         MOVF  AARGB2,W
                      00195         SUBWFB  REMB1,F
                      00196 
                      00197         BTFSS  REMB1,MSB        ; test remainder
                      00198         RETLW  0x00
                      00199 
                      00200         DECF  AARGB1,F
                      00201         CLRF  WREG
                      00202         SUBWFB  AARGB0,F
                      00203 
                      00204         MOVF  BARGB0,W
                      00205         ADDWF  REMB0,F
                      00206 
                      00207         RETLW  0x00
                      00208 
                      00209 
                      00210         ENDIF
                      00029 
000512                00030 FXD2408U
000512 C016 F02C      00031         MOVFF  AARGB0,TEMPB0
000516 C017 F02D      00032         MOVFF  AARGB1,TEMPB1
00051A C018 F02E      00033         MOVFF  AARGB2,TEMPB2
                      00034 
00051E EC23 F002      00035         CALL  FXD1608U
                      00036 
000522 C016 F02C      00037         MOVFF  AARGB0,TEMPB0
000526 C017 F02D      00038         MOVFF  AARGB1,TEMPB1
                      00039 
00052A C02E F017      00040         MOVFF  TEMPB2,AARGB1
00052E C01A F016      00041         MOVFF  REMB0,AARGB0
                      00042 
000532 EC23 F002      00043         CALL  FXD1608U
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00044 
000536 C017 F018      00045         MOVFF  AARGB1,AARGB2
00053A C02D F017      00046         MOVFF  TEMPB1,AARGB1
00053E C02C F016      00047         MOVFF  TEMPB0,AARGB0
                      00048 
000542 0C00           00049         RETLW  0x00
                      00050 
                      00051 
                      00052         ENDIF
                      00029         #INCLUDE <C:\MATH18\FXD1616U.INC>
                      00001 ;;;;; FXD1616U.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00002 ;
                      00003 ; 16/16 Bit Unsigned Fixed Point Divide 16/16 -> 16.16
                      00004 ;
                      00005 ;   Input:  16 bit unsigned fixed point dividend in AARGB0, AARGB1
                      00006 ;           16 bit unsigned fixed point divisor in BARGB0, BARGB1
                      00007 ;
                      00008 ;   Use:    CALL  FXD1616U
                      00009 ;
                      00010 ;   Output: 16 bit unsigned fixed point quotient in AARGB0, AARGB1
                      00011 ;           16 bit unsigned fixed point remainder in REMB0, REMB1
                      00012 ;
                      00013 ;   Result: AARG, REM  <--  AARG / BARG
                      00014 ;
                      00015 ;   Memory: Prog  (TBL256 + UTILS + FXD1608U)
                      00016 ;           Data 13 (AARGB3..0 + BARGB3..0 + CARGB2 + REMB1..0 + TEMPB1..0)
                      00017 ;
                      00018 ;   Timing: Min  
                      00019 ;           Max  
                      00020 ;           Avg  
                      00021 ;
                      00022 ;   (100,000 Trials)
                      00023 ;
                      00024 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00025 
                      00026         IFNDEF _FXD1616U
                      00027         #DEFINE _FXD1616U
                      00028         #INCLUDE <C:\MATH18\FXD1608U.INC>
                      00211 ;;;;; FXD1608U.INC ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 2001.09.07 ;;;;;
                      00212 ;
                      00213 ; 16/8 Bit Unsigned Fixed Point Divide 16/08 -> 16.08
                      00214 ;
                      00215 ;   Input:  16 bit unsigned fixed point dividend in AARGB0, AARGB1
                      00216 ;            8 bit unsigned fixed point divisor in BARGB0
                      00217 ;
                      00218 ;   Use:    CALL  FXD1608U
                      00219 ;
                      00220 ;   Output: 16 bit unsigned fixed point quotient in AARGB0, AARGB1
                      00221 ;            8 bit unsigned fixed point remainder in REMB0
                      00222 ;
                      00223 ;   Result: AARG, REM  <--  AARG / BARG
                      00224 ;
                      00225 ;   Memory: Prog  
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00226 ;           Data 
                      00227 ;
                      00228 ;   Timing: Min  
                      00229 ;           Max  
                      00230 ;           Avg  
                      00231 ;
                      00232 ;   (100,000 Trials)
                      00233 ;
                      00234 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00235 
                      00236         IFNDEF _FXD1608U
                      00237         #DEFINE _FXD1608U
                      00238         #INCLUDE <C:\MATH18\TBL256.INC>
                      00239         #INCLUDE <C:\MATH18\UTILS.INC>
                      00240 
                      00241 FXD1608U
                      00242         MOVLW  0x01
                      00243         CPFSGT  BARGB0
                      00244         GOTO  DREMZERO8
                      00245 
                      00246 FXD1608U1
                      00247         BCF  _C
                      00248         CLRF  TBLPTRH
                      00249         RLCF  BARGB0,W
                      00250         RLCF  TBLPTRH,F
                      00251         ADDLW  LOW (IBXTBL256+1)  ; access reciprocal table
                      00252         MOVWF  TBLPTRL
                      00253         MOVLW  HIGH (IBXTBL256)
                      00254         ADDWFC  TBLPTRH,F
                      00255         TBLRD  *-
                      00256 
                      00257 FXD1608U2
                      00258         MOVFF  AARGB0,REMB1
                      00259         MOVFF  AARGB1,REMB0
                      00260 
                      00261         MOVF  TABLAT,W          ; estimate quotient
                      00262         MULWF  REMB1
                      00263         MOVFF  PRODH,AARGB0
                      00264         MOVFF  PRODL,AARGB1
                      00265 
                      00266         TBLRD  *+
                      00267         MOVF  TABLAT,W
                      00268         MULWF  REMB0
                      00269         MOVFF  PRODH,AARGB2
                      00270 
                      00271         MULWF  REMB1
                      00272         MOVF  PRODL,W
                      00273         ADDWF  AARGB2,F
                      00274         MOVF  PRODH,W
                      00275         ADDWFC  AARGB1,F
                      00276         CLRF  WREG
                      00277         ADDWFC  AARGB0,F
                      00278 
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00279         TBLRD  *-
                      00280         MOVF  TABLAT,W
                      00281         MULWF  REMB0
                      00282         MOVF  PRODL,W
                      00283         ADDWF  AARGB2,F
                      00284         MOVF  PRODH,W
                      00285         ADDWFC  AARGB1,F
                      00286         CLRF  WREG
                      00287         ADDWFC  AARGB0,F
                      00288         
                      00289         MOVF  BARGB0,W
                      00290         MULWF  AARGB1
                      00291         MOVFF  PRODL,AARGB3
                      00292         MOVFF  PRODH,AARGB2
                      00293         MULWF  AARGB0
                      00294         MOVF  PRODL,W
                      00295         ADDWF  AARGB2,F
                      00296 
                      00297         MOVF  AARGB3,W          ; estimate remainder
                      00298         SUBWF  REMB0,F
                      00299         MOVF  AARGB2,W
                      00300         SUBWFB  REMB1,F
                      00301 
                      00302         BTFSS  REMB1,MSB        ; test remainder
                      00303         RETLW  0x00
                      00304 
                      00305         DECF  AARGB1,F
                      00306         CLRF  WREG
                      00307         SUBWFB  AARGB0,F
                      00308 
                      00309         MOVF  BARGB0,W
                      00310         ADDWF  REMB0,F
                      00311 
                      00312         RETLW  0x00
                      00313 
                      00314 
                      00315         ENDIF
                      00029 
000544                00030 FXD1616U
000544 661F           00031         TSTFSZ  BARGB0
000546 D008           00032         BRA  D1616B0GT0
000548 C020 F01F      00033         MOVFF  BARGB1,BARGB0
00054C EC23 F002      00034         CALL  FXD1608U
000550 C01A F01B      00035         MOVFF  REMB0,REMB1
000554 6A1A           00036         CLRF  REMB0
                      00037 
000556 0C00           00038         RETLW  0x00
                      00039 
000558                00040 D1616B0GT0
000558 501F           00041         MOVF  BARGB0,W
00055A 5C16           00042         SUBWF  AARGB0,W
00055C A0D8           00043         BTFSS  _C
00055E EF1A F002      00044         GOTO  D1616QZERO
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000562 A4D8           00045         BTFSS  _Z
000564 D005           00046         BRA  D1616AGEB
                      00047 
000566 5020           00048         MOVF  BARGB1,W
000568 5C17           00049         SUBWF  AARGB1,W
00056A A0D8           00050         BTFSS  _C
00056C EF1A F002      00051         GOTO  D1616QZERO
                      00052 
000570                00053 D1616AGEB
000570 C016 F02C      00054         MOVFF  AARGB0,TEMPB0
000574 C017 F02D      00055         MOVFF  AARGB1,TEMPB1
                      00056 
000578 C017 F026      00057         MOVFF  AARGB1,CARGB2
00057C C016 F017      00058         MOVFF  AARGB0,AARGB1
000580 6A16           00059         CLRF  AARGB0
                      00060 
000582 C01F F021      00061         MOVFF  BARGB0,BARGB2
000586 C020 F022      00062         MOVFF  BARGB1,BARGB3
                      00063 
00058A BE1F           00064         BTFSC  BARGB0,MSB
00058C D01D           00065         BRA  D1616UNRMOK
                      00066 
00058E 501F           00067         MOVF  BARGB0,W
000590 46E8           00068         RLNCF  WREG,F
000592 0F07           00069         ADDLW  LOW (IBXTBL256+3)  ; access reciprocal table
000594 6EF6           00070         MOVWF  TBLPTRL
000596 0E02           00071         MOVLW  HIGH (IBXTBL256)
000598 6AF7           00072         CLRF  TBLPTRH
00059A 22F7           00073         ADDWFC  TBLPTRH,F
00059C 0008           00074         TBLRD  *
                      00075 
00059E 50F5           00076         MOVF  TABLAT,W          ; normalize
0005A0 0222           00077         MULWF  BARGB3
0005A2 CFF3 F020      00078         MOVFF  PRODL,BARGB1
0005A6 CFF4 F01F      00079         MOVFF  PRODH,BARGB0
0005AA 0221           00080         MULWF  BARGB2
0005AC 50F3           00081         MOVF  PRODL,W
0005AE 261F           00082         ADDWF  BARGB0,F
                      00083 
0005B0 50F5           00084         MOVF  TABLAT,W
0005B2 022D           00085         MULWF  TEMPB1
0005B4 CFF3 F026      00086         MOVFF  PRODL,CARGB2
0005B8 CFF4 F017      00087         MOVFF  PRODH,AARGB1
0005BC 022C           00088         MULWF  TEMPB0
0005BE 50F3           00089         MOVF  PRODL,W
0005C0 2617           00090         ADDWF  AARGB1,F
0005C2 6A16           00091         CLRF  AARGB0
0005C4 50F4           00092         MOVF  PRODH,W
0005C6 2216           00093         ADDWFC  AARGB0,F
                      00094 
0005C8                00095 D1616UNRMOK
0005C8 EC27 F002      00096         CALL  FXD1608U1         ; estimate quotient digit
                      00097 
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005CC 5017           00098         MOVF  AARGB1,W
0005CE 0220           00099         MULWF  BARGB1
                      00100 
0005D0 50F3           00101         MOVF  PRODL,W
0005D2 5C26           00102         SUBWF  CARGB2,W
0005D4 50F4           00103         MOVF  PRODH,W
0005D6 581A           00104         SUBWFB  REMB0,W
                      00105 
0005D8 A0D8           00106         BTFSS  _C               ; test
0005DA 0617           00107         DECF  AARGB1,F
                      00108 
0005DC                00109 D1616UQOK
0005DC 5017           00110         MOVF  AARGB1,W          ; calculate remainder
0005DE 0222           00111         MULWF  BARGB3
0005E0 50F3           00112         MOVF  PRODL,W
0005E2 5E2D           00113         SUBWF  TEMPB1,F
0005E4 50F4           00114         MOVF  PRODH,W
0005E6 5A2C           00115         SUBWFB  TEMPB0,F
                      00116 
0005E8 5017           00117         MOVF  AARGB1,W
0005EA 0221           00118         MULWF  BARGB2
0005EC 50F3           00119         MOVF  PRODL,W
0005EE 5E2C           00120         SUBWF  TEMPB0,F
                      00121 
                      00122 ; This test does not appear to be necessary in the 16 bit case, but
                      00123 ; is included here in the event that a case appears after testing.
                      00124 
                      00125 ;  BTFSS  TEMPB0,MSB  ; test
                      00126 ;  GOTO  D1616QOK
                      00127 ;  DECF  AARGB1
                      00128 
                      00129 ;  MOVF  BARGB3,W
                      00130 ;  ADDWF  TEMPB1
                      00131 ;  MOVF  BARGB2,W
                      00132 ;  ADDWFC  TEMPB0
                      00133 
0005F0                00134 D1616QOK
0005F0 C02C F01A      00135         MOVFF  TEMPB0,REMB0
0005F4 C02D F01B      00136         MOVFF  TEMPB1,REMB1
                      00137 
0005F8 0C00           00138         RETLW  0x00
                      00139 
                      00140 
                      00141         ENDIF
                      00030 
0005FA                00031 FXD2416U
0005FA 6A1A           00032         CLRF  REMB0
0005FC 6A1B           00033         CLRF  REMB1
0005FE 6AE8           00034         CLRF  WREG
000600 661F           00035         TSTFSZ  BARGB0
000602 D008           00036         BRA  D2416BGT1
000604 C020 F01F      00037         MOVFF  BARGB1,BARGB0
000608 EC89 F002      00038         CALL  FXD2408U
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00060C C01A F01B      00039         MOVFF  REMB0,REMB1
000610 6A1A           00040         CLRF  REMB0
000612 0C00           00041         RETLW  0x00
                      00042 
000614                00043 D2416BGT1
000614 6216           00044         CPFSEQ  AARGB0
000616 D00C           00045         BRA  D2416AGTB
000618 C017 F016      00046         MOVFF  AARGB1,AARGB0
00061C C018 F017      00047         MOVFF  AARGB2,AARGB1
000620 ECA2 F002      00048         CALL  FXD1616U
                      00049         
000624 C017 F018      00050         MOVFF  AARGB1,AARGB2
000628 C016 F017      00051         MOVFF  AARGB0,AARGB1
00062C 6A16           00052         CLRF  AARGB0
00062E 0C00           00053         RETLW  0x00
000630                00054 D2416AGTB
000630 C018 F019      00055         MOVFF  AARGB2,AARGB3
000634 C017 F018      00056         MOVFF  AARGB1,AARGB2
000638 C016 F017      00057         MOVFF  AARGB0,AARGB1
00063C 6A16           00058         CLRF  AARGB0
                      00059 
00063E C016 F02C      00060         MOVFF  AARGB0,TEMPB0
000642 C017 F02D      00061         MOVFF  AARGB1,TEMPB1
000646 C018 F02E      00062         MOVFF  AARGB2,TEMPB2
00064A C019 F02F      00063         MOVFF  AARGB3,TEMPB3
                      00064 
00064E 0E02           00065         MOVLW  0x02             ; set loop count
000650 6E15           00066         MOVWF  AEXP
                      00067 
000652 0E01           00068         MOVLW  0x01
000654 6E28           00069         MOVWF  ZARGB0
                      00070 
000656 BE1F           00071         BTFSC  BARGB0,MSB
000658 D01C           00072         BRA  D2416UNRMOK
                      00073 
00065A EC03 F002      00074         CALL  DGETNRMD          ; get normalization factor
00065E 6E28           00075         MOVWF  ZARGB0
                      00076 
000660 0220           00077         MULWF  BARGB1
000662 501F           00078         MOVF  BARGB0,W
000664 CFF3 F020      00079         MOVFF  PRODL,BARGB1
000668 CFF4 F01F      00080         MOVFF  PRODH,BARGB0
00066C 0228           00081         MULWF  ZARGB0
00066E 50F3           00082         MOVF  PRODL,W
000670 261F           00083         ADDWF  BARGB0,F
                      00084 
000672 5028           00085         MOVF  ZARGB0,W
000674 0219           00086         MULWF  AARGB3
000676 CFF3 F02F      00087         MOVFF  PRODL,TEMPB3
00067A CFF4 F02E      00088         MOVFF  PRODH,TEMPB2
00067E 0217           00089         MULWF  AARGB1
000680 CFF3 F02D      00090         MOVFF  PRODL,TEMPB1
000684 CFF4 F02C      00091         MOVFF  PRODH,TEMPB0
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000688 0218           00092         MULWF  AARGB2
00068A 50F3           00093         MOVF  PRODL,W
00068C 262E           00094         ADDWF  TEMPB2,F
00068E 50F4           00095         MOVF  PRODH,W
000690 262D           00096         ADDWF  TEMPB1,F
                      00097 
000692                00098 D2416UNRMOK
000692 90D8           00099         BCF  _C
000694 6AF7           00100         CLRF  TBLPTRH
000696 341F           00101         RLCF  BARGB0,W
000698 36F7           00102         RLCF  TBLPTRH,F
00069A 0F05           00103         ADDLW  LOW (IBXTBL256+1)  ; access reciprocal table
00069C 6EF6           00104         MOVWF  TBLPTRL
00069E 0E02           00105         MOVLW  HIGH (IBXTBL256)
0006A0 22F7           00106         ADDWFC  TBLPTRH,F
0006A2 000A           00107         TBLRD  *-
                      00108 
0006A4                00109 D2416ULOOP
0006A4 C02C F016      00110         MOVFF  TEMPB0,AARGB0
0006A8 C02D F017      00111         MOVFF  TEMPB1,AARGB1
                      00112 
0006AC EC30 F002      00113         CALL  FXD1608U2         ; estimate quotient digit
                      00114 
0006B0 A016           00115         BTFSS  AARGB0,LSB
0006B2 D008           00116         BRA  D2416UQTEST
                      00117 
0006B4 6817           00118         SETF  AARGB1
0006B6 C02D F01A      00119         MOVFF  TEMPB1,REMB0
0006BA 501F           00120         MOVF  BARGB0,W
0006BC 261A           00121         ADDWF  REMB0,F
                      00122 
0006BE B0D8           00123         BTFSC  _C
0006C0 EF77 F003      00124         GOTO  D2416UQOK
                      00125 
0006C4                00126 D2416UQTEST
0006C4 5017           00127         MOVF  AARGB1,W          ; test
0006C6 0220           00128         MULWF  BARGB1
                      00129 
0006C8 50F3           00130         MOVF  PRODL,W
0006CA 5C2E           00131         SUBWF  TEMPB2,W
0006CC 50F4           00132         MOVF  PRODH,W
0006CE 581A           00133         SUBWFB  REMB0,W
                      00134 
0006D0 B0D8           00135         BTFSC  _C
0006D2 D00D           00136         BRA  D2416UQOK
                      00137 
0006D4 0617           00138         DECF  AARGB1,F
                      00139 
0006D6 501F           00140         MOVF  BARGB0,W
0006D8 261A           00141         ADDWF  REMB0,F
                      00142 
0006DA B0D8           00143         BTFSC  _C
0006DC D008           00144         BRA  D2416UQOK
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00145 
0006DE 5017           00146         MOVF  AARGB1,W
0006E0 0220           00147         MULWF  BARGB1
                      00148 
0006E2 50F3           00149         MOVF  PRODL,W
0006E4 5C2E           00150         SUBWF  TEMPB2,W
0006E6 50F4           00151         MOVF  PRODH,W
0006E8 581A           00152         SUBWFB  REMB0,W
                      00153 
0006EA A0D8           00154         BTFSS  _C
0006EC 0617           00155         DECF  AARGB1,F
                      00156 
0006EE                00157 D2416UQOK
0006EE C017 F029      00158         MOVFF  AARGB1,ZARGB1
                      00159 
0006F2 5017           00160         MOVF  AARGB1,W
0006F4 0220           00161         MULWF  BARGB1
0006F6 50F3           00162         MOVF  PRODL,W
0006F8 5E2E           00163         SUBWF  TEMPB2,F
0006FA 50F4           00164         MOVF  PRODH,W
0006FC 5A2D           00165         SUBWFB  TEMPB1,F
                      00166 
0006FE 5017           00167         MOVF  AARGB1,W
000700 021F           00168         MULWF  BARGB0
000702 50F3           00169         MOVF  PRODL,W
000704 5E2D           00170         SUBWF  TEMPB1,F
000706 50F4           00171         MOVF  PRODH,W
000708 5A2C           00172         SUBWFB  TEMPB0,F
                      00173 
00070A AE2C           00174         BTFSS  TEMPB0,MSB       ; test
00070C D005           00175         BRA  D2416QOK
00070E 0629           00176         DECF  ZARGB1,F
                      00177 
000710 5020           00178         MOVF  BARGB1,W
000712 262E           00179         ADDWF  TEMPB2,F
000714 501F           00180         MOVF  BARGB0,W
000716 222D           00181         ADDWFC  TEMPB1,F
                      00182 
000718                00183 D2416QOK
000718 4E15           00184         DCFSNZ  AEXP,F          ; is loop done?
00071A D009           00185         BRA  D2416FIXREM
                      00186 
00071C C029 F02A      00187         MOVFF  ZARGB1,ZARGB2
                      00188 
000720 C02D F02C      00189         MOVFF  TEMPB1,TEMPB0
000724 C02E F02D      00190         MOVFF  TEMPB2,TEMPB1
000728 C02F F02E      00191         MOVFF  TEMPB3,TEMPB2
                      00192 
00072C D7BB           00193         BRA  D2416ULOOP  
                      00194 
00072E                00195 D2416FIXREM
00072E C02D F01A      00196         MOVFF  TEMPB1,REMB0
000732 C02E F01B      00197         MOVFF  TEMPB2,REMB1
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00198 
000736 0E01           00199         MOVLW  0x01
000738 6428           00200         CPFSGT  ZARGB0
00073A D00C           00201         BRA  D2416REMOK
00073C 4028           00202         RRNCF  ZARGB0,W
00073E 6E1F           00203         MOVWF  BARGB0
000740 EC03 F002      00204         CALL  DGETNRMD
                      00205 
000744 022E           00206         MULWF  TEMPB2
000746 CFF4 F01B      00207         MOVFF  PRODH,REMB1
00074A 022D           00208         MULWF  TEMPB1
00074C 50F3           00209         MOVF  PRODL,W
00074E 261B           00210         ADDWF  REMB1,F
000750 CFF4 F01A      00211         MOVFF  PRODH,REMB0
                      00212 
000754                00213 D2416REMOK
000754 6A16           00214         CLRF  AARGB0
000756 C029 F018      00215         MOVFF  ZARGB1,AARGB2
00075A C02A F017      00216         MOVFF  ZARGB2,AARGB1
                      00217 
00075E 0C00           00218         RETLW  0x00
                      00219 
                      00220 
                      00221         ENDIF
                      00030 
000760                00031 FXD3216U
000760 6A1A           00032         CLRF  REMB0
000762 6A1B           00033         CLRF  REMB1
000764 6AE8           00034         CLRF  WREG
000766 661F           00035         TSTFSZ  BARGB0
000768 D008           00036         BRA  D3216BGT1
00076A C020 F01F      00037         MOVFF  BARGB1,BARGB0
00076E EC64 F002      00038         CALL  FXD3208U
000772 C01A F01B      00039         MOVFF  REMB0,REMB1
000776 6A1A           00040         CLRF  REMB0
000778 0C00           00041         RETLW  0x00
                      00042 
00077A                00043 D3216BGT1
00077A 6216           00044         CPFSEQ  AARGB0
00077C D010           00045         BRA  D3216AGTB
00077E C017 F016      00046         MOVFF  AARGB1,AARGB0
000782 C018 F017      00047         MOVFF  AARGB2,AARGB1
000786 C019 F018      00048         MOVFF  AARGB3,AARGB2
00078A ECFD F002      00049         CALL  FXD2416U
                      00050         
00078E C018 F019      00051         MOVFF  AARGB2,AARGB3
000792 C017 F018      00052         MOVFF  AARGB1,AARGB2
000796 C016 F017      00053         MOVFF  AARGB0,AARGB1
00079A 6A16           00054         CLRF  AARGB0
00079C 0C00           00055         RETLW  0x00
00079E                00056 D3216AGTB
00079E C019 F01E      00057         MOVFF  AARGB3,BEXP
0007A2 C018 F019      00058         MOVFF  AARGB2,AARGB3
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007A6 C017 F018      00059         MOVFF  AARGB1,AARGB2
0007AA C016 F017      00060         MOVFF  AARGB0,AARGB1
0007AE 6A16           00061         CLRF  AARGB0
                      00062 
0007B0 C016 F02C      00063         MOVFF  AARGB0,TEMPB0
0007B4 C017 F02D      00064         MOVFF  AARGB1,TEMPB1
0007B8 C018 F02E      00065         MOVFF  AARGB2,TEMPB2
0007BC C019 F02F      00066         MOVFF  AARGB3,TEMPB3
                      00067 
0007C0 0E03           00068         MOVLW  0x03             ; set loop count
0007C2 6E15           00069         MOVWF  AEXP
                      00070 
0007C4 0E01           00071         MOVLW  0x01
0007C6 6E28           00072         MOVWF  ZARGB0
                      00073 
0007C8 BE1F           00074         BTFSC  BARGB0,MSB
0007CA D022           00075         BRA  D3216UNRMOK
                      00076 
0007CC EC03 F002      00077         CALL  DGETNRMD          ; get normalization factor
0007D0 6E28           00078         MOVWF  ZARGB0
                      00079 
0007D2 0220           00080         MULWF  BARGB1
0007D4 501F           00081         MOVF  BARGB0,W
0007D6 CFF3 F020      00082         MOVFF  PRODL,BARGB1
0007DA CFF4 F01F      00083         MOVFF  PRODH,BARGB0
0007DE 0228           00084         MULWF  ZARGB0
0007E0 50F3           00085         MOVF  PRODL,W
0007E2 261F           00086         ADDWF  BARGB0,F
                      00087 
0007E4 5028           00088         MOVF  ZARGB0,W
0007E6 0219           00089         MULWF  AARGB3
0007E8 CFF3 F02F      00090         MOVFF  PRODL,TEMPB3
0007EC CFF4 F02E      00091         MOVFF  PRODH,TEMPB2
0007F0 0217           00092         MULWF  AARGB1
0007F2 CFF3 F02D      00093         MOVFF  PRODL,TEMPB1
0007F6 CFF4 F02C      00094         MOVFF  PRODH,TEMPB0
0007FA 0218           00095         MULWF  AARGB2
0007FC 50F3           00096         MOVF  PRODL,W
0007FE 262E           00097         ADDWF  TEMPB2,F
000800 50F4           00098         MOVF  PRODH,W
000802 262D           00099         ADDWF  TEMPB1,F
000804 5028           00100         MOVF  ZARGB0,W
000806 021E           00101         MULWF  BEXP
000808 CFF3 F01E      00102         MOVFF  PRODL,BEXP
00080C 50F4           00103         MOVF  PRODH,W
00080E 262F           00104         ADDWF  TEMPB3,F
                      00105 
000810                00106 D3216UNRMOK
000810 90D8           00107         BCF  _C
000812 6AF7           00108         CLRF  TBLPTRH
000814 341F           00109         RLCF  BARGB0,W
000816 36F7           00110         RLCF  TBLPTRH,F
000818 0F05           00111         ADDLW  LOW (IBXTBL256+1)  ; access reciprocal table
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00081A 6EF6           00112         MOVWF  TBLPTRL
00081C 0E02           00113         MOVLW  HIGH (IBXTBL256)
00081E 22F7           00114         ADDWFC  TBLPTRH,F
000820 000A           00115         TBLRD  *-
                      00116 
000822                00117 D3216ULOOP
000822 C02C F016      00118         MOVFF  TEMPB0,AARGB0
000826 C02D F017      00119         MOVFF  TEMPB1,AARGB1
                      00120 
00082A EC30 F002      00121         CALL  FXD1608U2         ; estimate quotient digit
                      00122 
00082E A016           00123         BTFSS  AARGB0,LSB
000830 D007           00124         BRA  D3216UQTEST
                      00125 
000832 6817           00126         SETF  AARGB1
000834 C02D F01A      00127         MOVFF  TEMPB1,REMB0
000838 501F           00128         MOVF  BARGB0,W
00083A 261A           00129         ADDWF  REMB0,F
                      00130 
00083C B0D8           00131         BTFSC  _C               ; test
00083E D015           00132         BRA  D3216UQOK
                      00133 
000840                00134 D3216UQTEST
000840 5017           00135         MOVF  AARGB1,W
000842 0220           00136         MULWF  BARGB1
                      00137 
000844 50F3           00138         MOVF  PRODL,W
000846 5C2E           00139         SUBWF  TEMPB2,W
000848 50F4           00140         MOVF  PRODH,W
00084A 581A           00141         SUBWFB  REMB0,W
                      00142 
00084C B0D8           00143         BTFSC  _C               ; test
00084E D00D           00144         BRA  D3216UQOK
                      00145 
000850 0617           00146         DECF  AARGB1,F
                      00147 
000852 501F           00148         MOVF  BARGB0,W
000854 261A           00149         ADDWF  REMB0,F
                      00150 
000856 B0D8           00151         BTFSC  _C               ; test
000858 D008           00152         BRA  D3216UQOK
                      00153 
00085A 5017           00154         MOVF  AARGB1,W
00085C 0220           00155         MULWF  BARGB1
                      00156 
00085E 50F3           00157         MOVF  PRODL,W
000860 5C2E           00158         SUBWF  TEMPB2,W
000862 50F4           00159         MOVF  PRODH,W
000864 581A           00160         SUBWFB  REMB0,W
                      00161 
000866 A0D8           00162         BTFSS  _C               ; test
000868 0617           00163         DECF  AARGB1,F
                      00164 
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00086A                00165 D3216UQOK
00086A C017 F029      00166         MOVFF  AARGB1,ZARGB1
                      00167 
00086E 5017           00168         MOVF  AARGB1,W
000870 0220           00169         MULWF  BARGB1
000872 50F3           00170         MOVF  PRODL,W
000874 5E2E           00171         SUBWF  TEMPB2,F
000876 50F4           00172         MOVF  PRODH,W
000878 5A2D           00173         SUBWFB  TEMPB1,F
                      00174 
00087A 5017           00175         MOVF  AARGB1,W
00087C 021F           00176         MULWF  BARGB0
00087E 50F3           00177         MOVF  PRODL,W
000880 5E2D           00178         SUBWF  TEMPB1,F
000882 50F4           00179         MOVF  PRODH,W
000884 5A2C           00180         SUBWFB  TEMPB0,F
                      00181 
000886 AE2C           00182         BTFSS  TEMPB0,MSB
000888 D005           00183         BRA  D3216QOK
00088A 0629           00184         DECF  ZARGB1,F
                      00185 
00088C 5020           00186         MOVF  BARGB1,W
00088E 262E           00187         ADDWF  TEMPB2,F
000890 501F           00188         MOVF  BARGB0,W
000892 222D           00189         ADDWFC  TEMPB1,F
                      00190 
000894                00191 D3216QOK
000894 4E15           00192         DCFSNZ  AEXP,F          ; is loop done?
000896 D00D           00193         BRA  D3216FIXREM
                      00194 
000898 C02A F02B      00195         MOVFF  ZARGB2,ZARGB3
00089C C029 F02A      00196         MOVFF  ZARGB1,ZARGB2
                      00197 
0008A0 C02D F02C      00198         MOVFF  TEMPB1,TEMPB0
0008A4 C02E F02D      00199         MOVFF  TEMPB2,TEMPB1
0008A8 C02F F02E      00200         MOVFF  TEMPB3,TEMPB2
0008AC C01E F02F      00201         MOVFF  BEXP,TEMPB3
                      00202 
0008B0 D7B8           00203         BRA  D3216ULOOP  
                      00204 
0008B2                00205 D3216FIXREM
0008B2 C02D F01A      00206         MOVFF  TEMPB1,REMB0
0008B6 C02E F01B      00207         MOVFF  TEMPB2,REMB1
                      00208 
0008BA 0E01           00209         MOVLW  0x01
0008BC 6428           00210         CPFSGT  ZARGB0
0008BE D00C           00211         BRA  D3216REMOK
0008C0 4028           00212         RRNCF  ZARGB0,W
0008C2 6E1F           00213         MOVWF  BARGB0
0008C4 EC03 F002      00214         CALL  DGETNRMD
                      00215 
0008C8 022E           00216         MULWF  TEMPB2
0008CA CFF4 F01B      00217         MOVFF  PRODH,REMB1
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008CE 022D           00218         MULWF  TEMPB1
0008D0 50F3           00219         MOVF  PRODL,W
0008D2 261B           00220         ADDWF  REMB1,F
0008D4 CFF4 F01A      00221         MOVFF  PRODH,REMB0
                      00222 
0008D8                00223 D3216REMOK
0008D8 6A16           00224         CLRF  AARGB0
0008DA C029 F019      00225         MOVFF  ZARGB1,AARGB3
0008DE C02A F018      00226         MOVFF  ZARGB2,AARGB2
0008E2 C02B F017      00227         MOVFF  ZARGB3,AARGB1
                      00228 
0008E6 0C00           00229         RETLW  0x00
                      00230 
                      00231 
                      00232         ENDIF
                      00531 #include <LCD.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   LCD subroutines
                      00003 ;----------------------------------------------------
                      00004 
                      00005 ;----------------------------------------------------
                      00006 ;   LCD initialization
                      00007 ;----------------------------------------------------
0008E8                00008 LCDinit
                      00009     delayXm d'40'             ;wait 40ms
                          M         movlf   d'40',delay_multi
0008E8 0E28               M         movlw    d'40'
0008EA 6E42               M         movwf    delay_multi
0008EC EC4F F005          M         call    delayms
                      00010 
                      00011     ;steps 1 to 7 ;knock 3 times
0008F0 908D           00012     bcf     LCD_RS  ; command mode
                      00013     movlf   b'00110000', tmpLCDsend
0008F2 0E30               M         movlw    b'00110000'
0008F4 6E32               M         movwf    tmpLCDsend
0008F6 EC08 F005      00014     call    LCD_send
                      00015     delayXm d'5'             ;wait 5ms
                          M         movlf   d'5',delay_multi
0008FA 0E05               M         movlw    d'5'
0008FC 6E42               M         movwf    delay_multi
0008FE EC4F F005          M         call    delayms
                      00016 
                      00017     movlf   b'00110000', tmpLCDsend
000902 0E30               M         movlw    b'00110000'
000904 6E32               M         movwf    tmpLCDsend
000906 EC08 F005      00018     call    LCD_send
                      00019     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
00090A 0E05               M         movlw    d'5'
00090C 6E41               M         movwf    delay_count_us
00090E EC4C F005          M         call    delayus
                      00020 
                      00021     movlf   b'00110000', tmpLCDsend
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000912 0E30               M         movlw    b'00110000'
000914 6E32               M         movwf    tmpLCDsend
000916 EC08 F005      00022     call    LCD_send
                      00023     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
00091A 0E05               M         movlw    d'5'
00091C 6E41               M         movwf    delay_count_us
00091E EC4C F005          M         call    delayus
                      00024 
                      00025     ; steps 8 & 9
                      00026     movlf   b'00100000', tmpLCDsend  ;set interface to 4bits
000922 0E20               M         movlw    b'00100000'
000924 6E32               M         movwf    tmpLCDsend
000926 EC08 F005      00027     call    LCD_send
                      00028     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
00092A 0E05               M         movlw    d'5'
00092C 6E41               M         movwf    delay_count_us
00092E EC4C F005          M         call    delayus
                      00029 
                      00030     ; step 10 & 11
                      00031     movlf   b'00101000', tmpLCDsend ;4bit, 2 lines, 5x8 character
000932 0E28               M         movlw    b'00101000'
000934 6E32               M         movwf    tmpLCDsend
000936 EC0D F005      00032     call    LCD_send2
                      00033     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
00093A 0E05               M         movlw    d'5'
00093C 6E41               M         movwf    delay_count_us
00093E EC4C F005          M         call    delayus
                      00034 
                      00035     ;setp 12 & 13
                      00036     movlf   b'00001000', tmpLCDsend ;display off
000942 0E08               M         movlw    b'00001000'
000944 6E32               M         movwf    tmpLCDsend
000946 EC0D F005      00037     call    LCD_send2
                      00038     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
00094A 0E05               M         movlw    d'5'
00094C 6E41               M         movwf    delay_count_us
00094E EC4C F005          M         call    delayus
                      00039 
                      00040     ;step 14 & 15
000952 ECFA F004      00041     call    LCD_clear
                      00042 
                      00043     ;step 16 & 17
                      00044     movlf   b'00000110', tmpLCDsend ; inc cursor direction, display shift off
000956 0E06               M         movlw    b'00000110'
000958 6E32               M         movwf    tmpLCDsend
00095A EC0D F005      00045     call    LCD_send2
                      00046     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
00095E 0E05               M         movlw    d'5'
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000960 6E41               M         movwf    delay_count_us
000962 EC4C F005          M         call    delayus
                      00047 
                      00048     ;step 18 & delay
                      00049     movlf   b'00001110', tmpLCDsend ; display on, cursor on, blink on
000966 0E0E               M         movlw    b'00001110'
000968 6E32               M         movwf    tmpLCDsend
00096A EC0D F005      00050     call    LCD_send2
                      00051     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
00096E 0E05               M         movlw    d'5'
000970 6E41               M         movwf    delay_count_us
000972 EC4C F005          M         call    delayus
                      00052 
000976 0012           00053     return
                      00054 
                      00055 ;----------------------------------------------------
                      00056 ; convert from BCD to ASCII and write to LCD
                      00057 ;----------------------------------------------------
000978                00058 LCD_printHex
000978 0F30           00059     addlw   0x30            ;convert to ASCII
00097A 6E32           00060     movwf   tmpLCDsend
00097C ECC9 F004      00061     call    LCD_printChar
000980 0012           00062     return
                      00063 
                      00064 ;----------------------------------------------------
                      00065 ; write string to LCD, ending w/ null termination
                      00066 ;----------------------------------------------------
000982                00067 LCD_printString
000982 50F5           00068     movf    TABLAT, w           ;get byte from program memory
000984 E005           00069     bz      nullStr
000986 6E32           00070     movwf   tmpLCDsend
000988 ECC9 F004      00071     call    LCD_printChar       ;and print to LCD
00098C 0009           00072     TBLRD*+
00098E D7F9           00073     bra     LCD_printString     ;repeat until done
000990                00074 nullStr
000990 0012           00075     return
                      00076 
                      00077 ;----------------------------------------------------
                      00078 ; write character to LCD
                      00079 ;----------------------------------------------------
000992                00080 LCD_printChar
000992 808D           00081     bsf     LCD_RS  ;RS
000994 EC0D F005      00082     call    LCD_send2
000998 908D           00083     bcf     LCD_RS  ;RS
                      00084     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
00099A 0E05               M         movlw    d'5'
00099C 6E41               M         movwf    delay_count_us
00099E EC4C F005          M         call    delayus
0009A2 0012           00085     return
                      00086 
                      00087 ;----------------------------------------------------
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00088 ; set address on LCD
                      00089 ;----------------------------------------------------
                      00090 ; 0x00|0x01|0x02|...|0x26|0x27; (40 characters wide)
                      00091 ; 0x40|0x41|0x42|...|0x66|0x67;
                      00092 ;----------------------------------------------------
0009A4                00093 LCD_setAddr
0009A4 908D           00094     bcf     LCD_RS          ;RS
0009A6 8E32           00095     bsf     tmpLCDsend, 7
0009A8 EC0D F005      00096     call    LCD_send2
                      00097     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
0009AC 0E05               M         movlw    d'5'
0009AE 6E41               M         movwf    delay_count_us
0009B0 EC4C F005          M         call    delayus
0009B4 0012           00098     return
                      00099 
                      00100 ;----------------------------------------------------
                      00101 ;shift display
                      00102 ;----------------------------------------------------
0009B6                00103 LCD_shiftLCD
0009B6 908D           00104     bcf     LCD_RS          ;RS
                      00105     movlf   b'00011000', tmpLCDsend ;send shift command
0009B8 0E18               M         movlw    b'00011000'
0009BA 6E32               M         movwf    tmpLCDsend
0009BC 5033           00106     movf    LCD_shift_dir, W
0009BE E002           00107     bz      LCD_shiftRight
0009C0 9432           00108     bcf     tmpLCDsend,2
0009C2 D001           00109     bra     LCD_shiftSend
0009C4                00110 LCD_shiftRight
0009C4 8432           00111     bsf     tmpLCDsend,2
0009C6                00112 LCD_shiftSend
0009C6 EC0D F005      00113     call    LCD_send2
                      00114     delayXu d'5'             ;wait 50us
                          M         movlf   d'5',delay_count_us
0009CA 0E05               M         movlw    d'5'
0009CC 6E41               M         movwf    delay_count_us
0009CE EC4C F005          M         call    delayus
0009D2 0634           00115     decf    LCD_shift_count
0009D4 E1F8           00116     bnz     LCD_shiftSend
0009D6 0012           00117     return
                      00118 
                      00119 ;----------------------------------------------------
                      00120 ; return home
                      00121 ;----------------------------------------------------
0009D8                00122 LCD_returnHome
0009D8 908D           00123     bcf     LCD_RS ;RS
0009DA 828D           00124     bsf     LCD_E ;E
                      00125     movlf   b'00000000', LATD
0009DC 0E00               M         movlw    b'00000000'
0009DE 6E8C               M         movwf    LATD
0009E0 928D           00126     bcf     LCD_E ;E
0009E2 828D           00127     bsf     LCD_E ;E
                      00128     movlf   b'00100000', LATD
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009E4 0E20               M         movlw    b'00100000'
0009E6 6E8C               M         movwf    LATD
0009E8 928D           00129     bcf     LCD_E ;E
                      00130     delayXm d'2'             ;wait 2ms
                          M         movlf   d'2',delay_multi
0009EA 0E02               M         movlw    d'2'
0009EC 6E42               M         movwf    delay_multi
0009EE EC4F F005          M         call    delayms
0009F2 0012           00131     return
                      00132 
                      00133 ;----------------------------------------------------
                      00134 ; clear LCD
                      00135 ;----------------------------------------------------
0009F4                00136 LCD_clear
0009F4 908D           00137     bcf     LCD_RS ;RS
0009F6 828D           00138     bsf     LCD_E ;E
                      00139     movlf   b'00000000', LATD
0009F8 0E00               M         movlw    b'00000000'
0009FA 6E8C               M         movwf    LATD
0009FC 928D           00140     bcf     LCD_E ;E
0009FE 828D           00141     bsf     LCD_E ;E
                      00142     movlf   b'00010000', LATD
000A00 0E10               M         movlw    b'00010000'
000A02 6E8C               M         movwf    LATD
000A04 928D           00143     bcf     LCD_E ;E
                      00144     delayXm d'2'             ;wait 2ms
                          M         movlf   d'2',delay_multi
000A06 0E02               M         movlw    d'2'
000A08 6E42               M         movwf    delay_multi
000A0A EC4F F005          M         call    delayms
000A0E 0012           00145     return
                      00146 
                      00147 ;----------------------------------------------------
                      00148 ; send 4 bits
                      00149 ;----------------------------------------------------
000A10                00150 LCD_send
000A10 828D           00151     bsf     LCD_E  ;E enable display
000A12 C032 FF8C      00152     movff   tmpLCDsend, LATD
000A16 928D           00153     bcf     LCD_E  ;E disable display
000A18 0012           00154     return
                      00155 
                      00156 ;----------------------------------------------------
                      00157 ; send 8 bits
                      00158 ;----------------------------------------------------
000A1A                00159 LCD_send2
000A1A 828D           00160     bsf     LCD_E  ;E enable display
000A1C C032 FF8C      00161     movff   tmpLCDsend, LATD
000A20 928D           00162     bcf     LCD_E  ;E disable display
000A22 3A32           00163     swapf   tmpLCDsend, F
000A24 828D           00164     bsf     LCD_E  ;E enable display
000A26 C032 FF8C      00165     movff   tmpLCDsend, LATD
000A2A 928D           00166     bcf     LCD_E  ;E disable display
000A2C 3A32           00167     swapf   tmpLCDsend, F
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A2E 0012           00168     return
                      00532 #include <BCD.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   16bit binary to BCD subroutine
                      00003 ;
                      00004 ;   binary input:
                      00005 ;       BCDconv+3 (MSB)
                      00006 ;       BCDconv+4 (LSB)
                      00007 ;   binary output:
                      00008 ;       BCDconv (MSdigits)
                      00009 ;       to
                      00010 ;       BCDconv+2 (LSdigits)
                      00011 ;----------------------------------------------------
000A30                00012 Bin2BCD
000A30 6A37           00013     clrf    BCDconv+2           ;clear BCD output regs
000A32 6A36           00014     clrf    BCDconv+1
000A34 6A35           00015     clrf    BCDconv
                      00016     movlf   d'16',BCD_count     ;repeat for all 16 bits
000A36 0E10               M         movlw    d'16'
000A38 6E3A               M         movwf    BCD_count
000A3A                00017 rotateAll
000A3A 3639           00018     rlcf    BCDconv+4           ;rotate low binary byte through carry
000A3C 3638           00019     rlcf    BCDconv+3           ;rotate high binary byte through carry
                      00020 
000A3E 5037           00021     movf    BCDconv+2,W         ;get low byte of BCD output
000A40 2037           00022     addwfc  BCDconv+2,W         ;add the carry bit
000A42 0007           00023     daw                         ;decimal adjust WREG
000A44 6E37           00024     movwf   BCDconv+2           ;move back
                      00025 
000A46 5036           00026     movf    BCDconv+1,W         ;get mid byte of BCD output
000A48 2036           00027     addwfc  BCDconv+1,W         ;add carry bit
000A4A 0007           00028     daw                         ;decimal adjust
000A4C 6E36           00029     movwf   BCDconv+1
                      00030 
000A4E 3635           00031     rlcf    BCDconv             ;rotate high byte of BCD output
000A50 2E3A           00032     decfsz  BCD_count           ;if all 16 bits done, return
000A52 D7F3           00033     bra     rotateAll           ;else repeat
000A54 0012           00034     return
                      00035 
                      00036 ;----------------------------------------------------
                      00037 ;   6 digit packed BCD to unpacked BCD conversion subroutine
                      00038 ;
                      00039 ;   packed BCD input:
                      00040 ;       BCDconv (MSdigits)
                      00041 ;       to
                      00042 ;       BCDconv+2 (LSdigits)
                      00043 ;   unpacked BCD output:
                      00044 ;       BCDunpacked (MSdigit)
                      00045 ;       to
                      00046 ;       BCDconv+5 (LSdigit)
                      00047 ;----------------------------------------------------
000A56                00048 unpackBCD
                      00049     ;copy all packed BCD registers
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A56 C035 F03B      00050     movff   BCDconv, BCDunpacked
000A5A C035 F03C      00051     movff   BCDconv, BCDunpacked+1
000A5E C036 F03D      00052     movff   BCDconv+1, BCDunpacked+2
000A62 C036 F03E      00053     movff   BCDconv+1, BCDunpacked+3
000A66 C037 F03F      00054     movff   BCDconv+2, BCDunpacked+4
000A6A C037 F040      00055     movff   BCDconv+2, BCDunpacked+5
                      00056 
                      00057     ;and out all low nibbles and rotate high nibbles into low
000A6E 0EF0           00058     movlw   0xf0
000A70 163B           00059     andwf   BCDunpacked, F
000A72 323B           00060     rrcf    BCDunpacked, F
000A74 323B           00061     rrcf    BCDunpacked, F
000A76 323B           00062     rrcf    BCDunpacked, F
000A78 323B           00063     rrcf    BCDunpacked, F
000A7A 163D           00064     andwf   BCDunpacked+2, F
000A7C 323D           00065     rrcf    BCDunpacked+2, F
000A7E 323D           00066     rrcf    BCDunpacked+2, F
000A80 323D           00067     rrcf    BCDunpacked+2, F
000A82 323D           00068     rrcf    BCDunpacked+2, F
000A84 163F           00069     andwf   BCDunpacked+4, F
000A86 323F           00070     rrcf    BCDunpacked+4, F
000A88 323F           00071     rrcf    BCDunpacked+4, F
000A8A 323F           00072     rrcf    BCDunpacked+4, F
000A8C 323F           00073     rrcf    BCDunpacked+4, F
                      00074 
                      00075     ;and out all high nibbles
000A8E 0E0F           00076     movlw   0x0f
000A90 163C           00077     andwf   BCDunpacked+1, F
000A92 163E           00078     andwf   BCDunpacked+3, F
000A94 1640           00079     andwf   BCDunpacked+5, F
000A96 0012           00080     return
                      00533 #include <Delay.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   LCD subroutine
                      00003 ;----------------------------------------------------
000A98                00004 delayus ;microsecond delay (20us x delay_count_us)
000A98 6641           00005     tstfsz  delay_count_us
000A9A D7FE           00006     bra     delayus
000A9C 0012           00007     return
                      00008 
000A9E                00009 delayms ;millisecond delay (20ms x delay_count_ms)
                      00010     movlf   d'50',delay_count_us    ;50 x 20us
000A9E 0E32               M         movlw    d'50'
000AA0 6E41               M         movwf    delay_count_us
000AA2                00011 delayms_loop
000AA2 6641           00012     tstfsz  delay_count_us
000AA4 D7FE           00013     bra     delayms_loop
000AA6 2E42           00014     decfsz  delay_multi,F
000AA8 D7FA           00015     bra     delayms
000AAA 0012           00016     return
                      00534 #include <Servo.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   servo motor subroutines
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00003 ;----------------------------------------------------
                      00004 
                      00005 ;----------------------------------------------------
                      00006 ;   servo A subroutine
                      00007 ;----------------------------------------------------
000AAC                00008 servoAMain
000AAC 6647           00009     tstfsz  mAcounter
000AAE D001           00010     bra     servoADone
000AB0 9A8A           00011     bcf     MOTORA
000AB2                00012 servoADone
000AB2 0012           00013     return
                      00014 
                      00015 ;----------------------------------------------------
                      00016 ;   servo B subroutine
                      00017 ;----------------------------------------------------
000AB4                00018 servoBMain
000AB4 6648           00019     tstfsz  mBcounter
000AB6 D007           00020     bra     servoBDone
000AB8 0000           00021     nop     ;to compensate for resolution
000ABA 0000           00022     nop
000ABC 0000           00023     nop
000ABE 0000           00024     nop
000AC0 0000           00025     nop
000AC2 0000           00026     nop
000AC4 988A           00027     bcf     MOTORB
000AC6                00028 servoBDone
000AC6 0012           00029     return
                      00030 
                      00031 ;----------------------------------------------------
                      00032 ;   stop motor A
                      00033 ;----------------------------------------------------
000AC8                00034 servo_stopA
000AC8 6A43           00035     clrf    mASpeed
000ACA 0012           00036     return
                      00037 
                      00038 ;----------------------------------------------------
                      00039 ;   stop motor B
                      00040 ;----------------------------------------------------
000ACC                00041 servo_stopB
000ACC 6A45           00042     clrf    mBSpeed
000ACE 0012           00043     return
                      00044 
                      00045 ;----------------------------------------------------
                      00046 ;   set motor A speed
                      00047 ;----------------------------------------------------
000AD0                00048 servo_setA
000AD0 6E49           00049     movwf   servoTmp
000AD2 6644           00050     tstfsz  mADir               ;which direction? 1 = forward
000AD4 D003           00051     bra     servo_setAfwd
                      00052     ;move servo "backwards"
000AD6 5049           00053     movf    servoTmp,W
000AD8 083A           00054     sublw   mASpeed0
000ADA D002           00055     bra     servo_setASpeed
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00056 
                      00057 ;move servo "forwards"
000ADC                00058 servo_setAfwd
000ADC 5049           00059     movf    servoTmp,W
000ADE 0F3A           00060     addlw   mASpeed0
                      00061 
000AE0                00062 servo_setASpeed
000AE0 6E43           00063     movwf   mASpeed
000AE2 0012           00064     return
                      00065 
                      00066 ;----------------------------------------------------
                      00067 ;   set motor B speed
                      00068 ;----------------------------------------------------
000AE4                00069 servo_setB
000AE4 6E49           00070     movwf   servoTmp
000AE6 6646           00071     tstfsz  mBDir               ;which direction? 1 = forward
000AE8 D003           00072     bra     servo_setBfwd
                      00073     ;move servo "backwards"
000AEA 5049           00074     movf    servoTmp,W
000AEC 0F3C           00075     addlw   mBSpeed0
000AEE D002           00076     bra     servo_setBSpeed
                      00077 
                      00078 ;move servo "forwards"
000AF0                00079 servo_setBfwd
000AF0 5049           00080     movf    servoTmp,W
000AF2 083C           00081     sublw   mBSpeed0
                      00082 
000AF4                00083 servo_setBSpeed
000AF4 6E45           00084     movwf   mBSpeed
000AF6 0012           00085     return
                      00086 
                      00087 ;----------------------------------------------------
                      00088 ;   set motor A direction
                      00089 ;----------------------------------------------------
000AF8                00090 servo_dirA
000AF8 6E44           00091     movwf   mADir
000AFA 0012           00092     return
                      00093 
                      00094 ;----------------------------------------------------
                      00095 ;   set motor B direction
                      00096 ;----------------------------------------------------
000AFC                00097 servo_dirB
000AFC 6E46           00098     movwf   mBDir
000AFE 0012           00099     return
                      00535 #include <RPG.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   RPG subroutines
                      00003 ;----------------------------------------------------
                      00004 
                      00005 ;----------------------------------------------------
                      00006 ;   gets current RPG signal
                      00007 ;----------------------------------------------------
000B00                00008 RPG_get
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B00 C04B F04C      00009     movff   RPG_sig,RPG_prev        ;set prev
000B04 CF83 F04B      00010     movff   PORTD,RPG_sig           ;get current signal from RPG
000B08 0E03           00011     movlw   b'00000011'
000B0A 164B           00012     andwf   RPG_sig,F               ;clear non-sig bits
000B0C EC99 F005      00013     call    RPG_calcCCW
000B10 0012           00014     return
                      00015 
                      00016 ;----------------------------------------------------
                      00017 ;   checks for change in RPG
                      00018 ;----------------------------------------------------
000B12                00019 RPG_check
000B12 EC80 F005      00020     call    RPG_get
000B16 504C           00021     movf    RPG_prev,W              ;did the RPG change?
000B18 184B           00022     xorwf   RPG_sig,W
000B1A E101           00023     bnz     RPG_changed             ;if not 0, changed
000B1C D009           00024     bra     RPG_doneCheck
                      00025 
000B1E                00026 RPG_changed
000B1E 504B           00027     movf    RPG_sig,W               ;is the current == to the calc ccw?
000B20 184A           00028     xorwf   RPG_ccw,W
000B22 E001           00029     bz      RPG_ccwDir              ;equal
000B24 D003           00030     bra     RPG_cwDir               ;not equal
                      00031 
000B26                00032 RPG_ccwDir
000B26 ECA3 F005      00033     call    RPG_dec
000B2A D002           00034     bra     RPG_doneCheck
                      00035 
000B2C                00036 RPG_cwDir
000B2C ECA9 F005      00037     call    RPG_inc
                      00038 
000B30                00039 RPG_doneCheck
000B30 0012           00040     return
                      00041 
                      00042 ;----------------------------------------------------
                      00043 ;   calculates next RPG signal if CCW
                      00044 ;----------------------------------------------------
000B32                00045 RPG_calcCCW
000B32 C04C F04A      00046     movff   RPG_prev, RPG_ccw
000B36 324A           00047     rrcf    RPG_ccw, F              ;rotate through carry
000B38 E302           00048     bnc     RPG_setz                ;if carry == 0
000B3A 924A           00049     bcf     RPG_ccw,1
000B3C D001           00050     bra     RPG_doneNext
000B3E                00051 RPG_setz
000B3E 824A           00052     bsf     RPG_ccw,1
000B40                00053 RPG_doneNext
000B40 0E03           00054     movlw   b'00000011'
000B42 164A           00055     andwf   RPG_ccw,F
000B44 0012           00056     return
                      00057 
                      00058 ;----------------------------------------------------
                      00059 ;   incf    RPG count
                      00060 ;----------------------------------------------------
000B46                00061 RPG_dec
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B46 064E           00062     decf    RPG_count+1
000B48 0EFF           00063     movlw   0xFF
000B4A 624E           00064     cpfseq  RPG_count+1
000B4C D001           00065     bra     RPG_decDone
000B4E 064D           00066     decf    RPG_count
000B50                00067 RPG_decDone
000B50 0012           00068     return
                      00069 
                      00070 ;----------------------------------------------------
                      00071 ;   decf    RPG count
                      00072 ;----------------------------------------------------
000B52                00073 RPG_inc
000B52 4A4E           00074     infsnz  RPG_count+1
000B54 2A4D           00075     incf    RPG_count
000B56 0012           00076     return
                      00077 
                      00078 ;----------------------------------------------------
                      00079 ;   resets RPG count
                      00080 ;----------------------------------------------------
000B58                00081 RPG_resetCount
000B58 6A4E           00082     clrf    RPG_count+1
000B5A 6A4D           00083     clrf    RPG_count
000B5C 0012           00084     return
                      00536 #include <Ultrasonic.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   Ultrasonic subroutine
                      00003 ;----------------------------------------------------
000B5E                00004 setTrigger
000B5E 868A           00005     bsf     ULTRA_TRIG          ;start trigger pulse
                      00006     movlf   ultraPulseTime,pulseLenTimer
000B60 0E0D               M         movlw    ultraPulseTime
000B62 6E4F               M         movwf    pulseLenTimer
000B64 6A51           00007     clrf    ultraSonicCounter   ;reset 20us ultra counter
                      00008     movlf   d'1',ultraSonicCounter+1
000B66 0E01               M         movlw    d'1'
000B68 6E52               M         movwf    ultraSonicCounter+1
000B6A 6A57           00009     clrf    ultraTest
000B6C 6A58           00010     clrf    ultraTest2
000B6E 0012           00011     return
                      00012 
000B70                00013 checkPulse
000B70 664F           00014     tstfsz  pulseLenTimer       ;if 0, end pulse
000B72 D002           00015     bra     noTrigger
000B74 968A           00016     bcf     ULTRA_TRIG
000B76 6808           00017     setf    event_checkDist
000B78                00018 noTrigger
000B78 0012           00019     return
                      00020 
000B7A                00021 checkDist
000B7A 6650           00022     tstfsz  ultra_sensorSel     ;which sensor to check?
000B7C D003           00023     bra     checkBDist          ;if one, check sensor B
000B7E ECC6 F005      00024     call    checkDistA          ;else check sensor A
000B82 D002           00025     bra     doneDistCheck
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B84                00026 checkBDist
000B84 ECD7 F005      00027     call    checkDistB
000B88                00028 doneDistCheck
000B88 6A08           00029     clrf    event_checkDist
000B8A 0012           00030     return
                      00031 
000B8C                00032 checkDistA
000B8C 6653           00033     tstfsz  ultraCurrentA       ;is it more than 8 bit (255)
000B8E D009           00034     bra     wallFar
000B90 0E55           00035     movlw   d'85'               ;31cm
000B92 6454           00036     cpfsgt  ultraCurrentA+1     ;too close to wall?
000B94 D009           00037     bra     wallClose           ;turn away from wall
000B96 0E78           00038     movlw   d'120'              ;44.5cm
000B98 6054           00039     cpfslt  ultraCurrentA+1     ;too far from wall?
000B9A D003           00040     bra     wallFar             ;turn towards wall
000B9C 965D           00041     bcf     SIDE_SENSOR_FAR
000B9E 945D           00042     bcf     SIDE_SENSOR_CLOSE
000BA0 D005           00043     bra     cont                ;else go straight
000BA2                00044 wallFar
000BA2 865D           00045     bsf     SIDE_SENSOR_FAR
000BA4 945D           00046     bcf     SIDE_SENSOR_CLOSE
000BA6 D002           00047     bra     cont
000BA8                00048 wallClose
000BA8 845D           00049     bsf     SIDE_SENSOR_CLOSE
000BAA 965D           00050     bcf     SIDE_SENSOR_FAR
000BAC                00051 cont
000BAC 0012           00052     return
                      00053 
                      00054 
000BAE                00055 checkDistB
000BAE 6655           00056     tstfsz  ultraCurrentB       ;high byte zero?
000BB0 D006           00057     bra     ultraB_good          ;if yes, >87cm
                      00058 
000BB2 0E69           00059     movlw   d'105'               ;20cm
000BB4 6456           00060     cpfsgt  ultraCurrentB+1     ;is it greater than 20cm?
000BB6 D001           00061     bra     ultraB_tooClose
                      00062 
000BB8 D002           00063     bra     ultraB_good
                      00064 
000BBA                00065 ultraB_tooClose
000BBA 805D           00066     bsf     FRONT_SENSOR
000BBC D001           00067     bra     ultraBcont
                      00068 
000BBE                00069 ultraB_good
000BBE 905D           00070     bcf     FRONT_SENSOR
                      00071 
000BC0                00072 ultraBcont
000BC0 0012           00073     return
                      00537 #include <Navigation.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   navigation subroutines
                      00003 ;----------------------------------------------------
000BC2                00004 navigate
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00005 
000BC2 0E82           00006     movlw   d'130'          ;if event_found is between 140 and 150
000BC4 600B           00007     cpfslt  event_found
000BC6 D005           00008     bra     nav_step
                      00009 
000BC8 0E78           00010     movlw   d'120'
000BCA 640B           00011     cpfsgt  event_found
000BCC D002           00012     bra     nav_step
                      00013 
000BCE EC8E F006      00014     call    IR_displayFreq  ;display freq on LCD
                      00015 
000BD2                00016 nav_step
000BD2 0E32           00017     movlw   d'50'
000BD4 600B           00018     cpfslt  event_found
000BD6 D00C           00019     bra     nav_found
                      00020 
                      00021     ;if both flags = 0, go straight
000BD8 665D           00022     tstfsz  navFlag1
000BDA D003           00023     bra     nav_notStraight
                      00024 
000BDC ECFD F005      00025     call    nav_straight
000BE0 D006           00026     bra     nav_done
                      00027 
000BE2                00028 nav_notStraight
                      00029 
000BE2 B05D           00030     btfsc   FRONT_SENSOR
000BE4 D066           00031     bra     nav_newDir
                      00032 
000BE6 B45D           00033     btfsc   SIDE_SENSOR_CLOSE
000BE8 D018           00034     bra     nav_avoidWall
                      00035 
000BEA B65D           00036     btfsc   SIDE_SENSOR_FAR
000BEC D03C           00037     bra     nav_findWall
                      00038 
000BEE                00039 nav_done
                      00040     
000BEE 0012           00041     return
                      00042 
000BF0                00043 nav_found
                      00044 
000BF0 EC64 F005      00045     call    servo_stopA
000BF4 EC66 F005      00046     call    servo_stopB
000BF8 D7FA           00047     bra     nav_done
                      00048 
                      00049 ;sets servo speeds to same value
000BFA                00050 nav_straight
                      00051 
000BFA 9289           00052     bcf     LED_RIGHT
000BFC 8489           00053     bsf     LED_CENTER
000BFE 9689           00054     bcf     LED_LEFT
                      00055 
                      00056     macServo_dirA   FORWARD       ;if not, go straight
000C00 0E01               M                 movlw   FORWARD
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C02 EC7C F005          M                 call    servo_dirA
                      00057     macServo_dirB   FORWARD
000C06 0E01               M                 movlw   FORWARD
000C08 EC7E F005          M                 call    servo_dirB
                      00058     macServo_setA   mASpeed3
000C0C 0E08               M                 movlw   mASpeed3
000C0E EC68 F005          M                 call    servo_setA
                      00059     macServo_setB   mBSpeed2
000C12 0E09               M                 movlw   mBSpeed2
000C14 EC72 F005          M                 call    servo_setB
                      00060 
000C18 0012           00061     return
                      00062 
000C1A                00063 nav_avoidWall ;right
                      00064 
000C1A 0E11           00065     movlw   d'17'
000C1C 605B           00066     cpfslt  rightTime
000C1E D013           00067     bra     straightRight
                      00068 
000C20 9289           00069     bcf     LED_RIGHT
000C22 9489           00070     bcf     LED_CENTER
000C24 8689           00071     bsf     LED_LEFT
                      00072     ;spin
                      00073     macServo_dirA   FORWARD
000C26 0E01               M                 movlw   FORWARD
000C28 EC7C F005          M                 call    servo_dirA
                      00074     macServo_dirB   REVERSE
000C2C 0E00               M                 movlw   REVERSE
000C2E EC7E F005          M                 call    servo_dirB
                      00075     macServo_setA   mASpeed3
000C32 0E08               M                 movlw   mASpeed3
000C34 EC68 F005          M                 call    servo_setA
000C38 EC66 F005      00076     call    servo_stopB
                      00077 
000C3C 665B           00078     tstfsz  rightTime
000C3E D012           00079     bra     nav_avoidWall_done
                      00080     movlf   d'100',rightTime
000C40 0E64               M         movlw    d'100'
000C42 6E5B               M         movwf    rightTime
000C44 D00F           00081     bra     nav_avoidWall_done
                      00082 
000C46                00083 straightRight
000C46 9289           00084     bcf     LED_RIGHT
000C48 8489           00085     bsf     LED_CENTER
000C4A 8689           00086     bsf     LED_LEFT
                      00087     ;straight
                      00088     macServo_dirA   FORWARD
000C4C 0E01               M                 movlw   FORWARD
000C4E EC7C F005          M                 call    servo_dirA
                      00089     macServo_dirB   FORWARD
000C52 0E01               M                 movlw   FORWARD
000C54 EC7E F005          M                 call    servo_dirB
                      00090     macServo_setA   mASpeed3
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C58 0E08               M                 movlw   mASpeed3
000C5A EC68 F005          M                 call    servo_setA
                      00091     macServo_setB   mBSpeed3
000C5E 0E0C               M                 movlw   mBSpeed3
000C60 EC72 F005          M                 call    servo_setB
                      00092 
000C64                00093 nav_avoidWall_done
                      00094 ;    decf    rightTime
000C64 0012           00095     return
                      00096 
                      00097 
000C66                00098 nav_findWall    ;left
                      00099 
000C66 0E0F           00100     movlw   d'15'
000C68 605C           00101     cpfslt  leftTime
000C6A D013           00102     bra     straightLeft
                      00103 
000C6C 8289           00104     bsf     LED_RIGHT
000C6E 9489           00105     bcf     LED_CENTER
000C70 9689           00106     bcf     LED_LEFT
                      00107     ;spin
                      00108     macServo_dirA   REVERSE
000C72 0E00               M                 movlw   REVERSE
000C74 EC7C F005          M                 call    servo_dirA
                      00109     macServo_dirB   FORWARD
000C78 0E01               M                 movlw   FORWARD
000C7A EC7E F005          M                 call    servo_dirB
000C7E EC64 F005      00110     call    servo_stopA
                      00111     macServo_setB   mBSpeed3
000C82 0E0C               M                 movlw   mBSpeed3
000C84 EC72 F005          M                 call    servo_setB
                      00112 
000C88 665C           00113     tstfsz  leftTime
000C8A D012           00114     bra     nav_findWall_done
                      00115     movlf   d'100',leftTime
000C8C 0E64               M         movlw    d'100'
000C8E 6E5C               M         movwf    leftTime
000C90 D00F           00116     bra     nav_findWall_done
                      00117 
000C92                00118 straightLeft
000C92 8289           00119     bsf     LED_RIGHT
000C94 8489           00120     bsf     LED_CENTER
000C96 9689           00121     bcf     LED_LEFT
                      00122     ;straight
                      00123     macServo_dirA   FORWARD
000C98 0E01               M                 movlw   FORWARD
000C9A EC7C F005          M                 call    servo_dirA
                      00124     macServo_dirB   FORWARD
000C9E 0E01               M                 movlw   FORWARD
000CA0 EC7E F005          M                 call    servo_dirB
                      00125     macServo_setA   mASpeed3
000CA4 0E08               M                 movlw   mASpeed3
000CA6 EC68 F005          M                 call    servo_setA
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00126     macServo_setB   mBSpeed3
000CAA 0E0C               M                 movlw   mBSpeed3
000CAC EC72 F005          M                 call    servo_setB
                      00127 
000CB0                00128 nav_findWall_done
                      00129 ;    decf    leftTime
000CB0 0012           00130     return
                      00131 
000CB2                00132 nav_newDir
                      00133 
000CB2 8289           00134     bsf     LED_RIGHT
000CB4 8489           00135     bsf     LED_CENTER
000CB6 8689           00136     bsf     LED_LEFT
                      00137 
                      00138     macServo_dirA   FORWARD
000CB8 0E01               M                 movlw   FORWARD
000CBA EC7C F005          M                 call    servo_dirA
                      00139     macServo_dirB   REVERSE
000CBE 0E00               M                 movlw   REVERSE
000CC0 EC7E F005          M                 call    servo_dirB
                      00140     macServo_setA   mASpeed2
000CC4 0E06               M                 movlw   mASpeed2
000CC6 EC68 F005          M                 call    servo_setA
                      00141     macServo_setB   mBSpeed2
000CCA 0E09               M                 movlw   mBSpeed2
000CCC EC72 F005          M                 call    servo_setB
000CD0 D78E           00142     bra     nav_done
                      00538 #include <IR.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   IR subroutine
                      00003 ;----------------------------------------------------
000CD2                00004 IR_check
                      00005     
000CD2 949D           00006     bcf     PIE1, CCP1IE        ;disable interrupt
                      00007 
                      00008     ;get difference of captured value and put in divisor
000CD4 5060           00009     movf    IR_prevVal,W
000CD6 5C5E           00010     subwf   IR_currentVal,W
000CD8 6E1F           00011     movwf   BARGB0
                      00012 
000CDA 5061           00013     movf    IR_prevVal+1,W
000CDC 585F           00014     subwfb  IR_currentVal+1,W
000CDE 6E20           00015     movwf   BARGB1
                      00016 
000CE0 6A21           00017     clrf    BARGB2
000CE2 6A22           00018     clrf    BARGB3
                      00019 
                      00020     ;set dividend to 20 000 000
                      00021     movlf   0x01,AARGB0
000CE4 0E01               M         movlw    0x01
000CE6 6E16               M         movwf    AARGB0
                      00022     movlf   0x31,AARGB1
000CE8 0E31               M         movlw    0x31
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000CEA 6E17               M         movwf    AARGB1
                      00023     movlf   0x2D,AARGB2
000CEC 0E2D               M         movlw    0x2D
000CEE 6E18               M         movwf    AARGB2
                      00024     movlf   0x00,AARGB3
000CF0 0E00               M         movlw    0x00
000CF2 6E19               M         movwf    AARGB3
000CF4 6A1A           00025     clrf    AARGB4
000CF6 6A1B           00026     clrf    AARGB5
000CF8 6A1C           00027     clrf    AARGB6
000CFA 6A1D           00028     clrf    AARGB7
                      00029 
                      00030     ;32 by 16 bit divide
000CFC ECB0 F003      00031     call    FXD3216U
                      00032 
                      00033     ;put result in BCD conversion
000D00 C019 F039      00034     movff   AARGB3,BCDconv+4
000D04 C018 F038      00035     movff   AARGB2,BCDconv+3
000D08 EC18 F005      00036     call    Bin2BCD             ;convert to BCD
000D0C EC2B F005      00037     call    unpackBCD           ;unpack BCD result
                      00038 
000D10 EC30 F007      00039     call    usart_sendFreq      ;send using USART
                      00040 
000D14                00041 IR_done
                      00042     movlf   d'25',event_checkIR ;check IR in 500ms
000D14 0E19               M         movlw    d'25'
000D16 6E09               M         movwf    event_checkIR
                      00043 
000D18 849D           00044     bsf     PIE1, CCP1IE        ;enable interrupt
                      00045 
000D1A 0012           00046     return
                      00047 
                      00048 
                      00049 
000D1C                00050 IR_displayFreq  ;display frequency on LCD
                      00051 
                      00052     macLCD_setAddr  0x40            ;set position on second line
                          M                 movlf   0x40,tmpLCDsend
000D1C 0E40               M         movlw    0x40
000D1E 6E32               M         movwf    tmpLCDsend
000D20 ECD2 F004          M                 call    LCD_setAddr
                      00053 
000D24 503D           00054     movf    BCDunpacked+2, W
                      00055     macLCD_printHex BCDunpacked+2
000D26 503D               M                 movf    BCDunpacked+2,W
000D28 ECBC F004          M                 call    LCD_printHex
000D2C 503E           00056     movf    BCDunpacked+3, W
                      00057     macLCD_printHex BCDunpacked+3
000D2E 503E               M                 movf    BCDunpacked+3,W
000D30 ECBC F004          M                 call    LCD_printHex
000D34 503F           00058     movf    BCDunpacked+4, W
                      00059     macLCD_printHex BCDunpacked+4
000D36 503F               M                 movf    BCDunpacked+4,W
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D38 ECBC F004          M                 call    LCD_printHex
000D3C 5040           00060     movf    BCDunpacked+5, W
                      00061     macLCD_printHex BCDunpacked+5
000D3E 5040               M                 movf    BCDunpacked+5,W
000D40 ECBC F004          M                 call    LCD_printHex
                      00062 
                      00063     macLCD_printChar    b'01001000'  ;H
                          M                     movlf   b'01001000',tmpLCDsend
000D44 0E48               M         movlw    b'01001000'
000D46 6E32               M         movwf    tmpLCDsend
000D48 ECC9 F004          M                     call    LCD_printChar
                      00064 
                      00065     macLCD_printChar    b'01111010'  ;z
                          M                     movlf   b'01111010',tmpLCDsend
000D4C 0E7A               M         movlw    b'01111010'
000D4E 6E32               M         movwf    tmpLCDsend
000D50 ECC9 F004          M                     call    LCD_printChar
                      00066 
                      00067     macLCD_printChar    0x20         ;space
                          M                     movlf   0x20,tmpLCDsend
000D54 0E20               M         movlw    0x20
000D56 6E32               M         movwf    tmpLCDsend
000D58 ECC9 F004          M                     call    LCD_printChar
                      00068 
000D5C 0012           00069     return
                      00539 #include <USART.inc>
                      00001 ;----------------------------------------------------
                      00002 ;   usart subroutines
                      00003 ;----------------------------------------------------
000D5E                00004 usart_checkRX
                      00005 ;    clrf    event_checkUsart       ;only do if int sets flag
                      00006 
000D5E 0E31           00007     movlw   0x31                   ;ASCII '1'
000D60 6264           00008     cpfseq  RXtemp
000D62 D001           00009     bra     usart_not1
000D64 D012           00010     bra     usart_storeRX
000D66                00011 usart_not1
000D66 0E32           00012     movlw   0x32                   ;ASCII '2'
000D68 6264           00013     cpfseq  RXtemp
000D6A D001           00014     bra     usart_not2
000D6C D00E           00015     bra     usart_storeRX
000D6E                00016 usart_not2
000D6E 0E33           00017     movlw   0x33                   ;ASCII '3'
000D70 6264           00018     cpfseq  RXtemp
000D72 D001           00019     bra     usart_not3
000D74 D00A           00020     bra     usart_storeRX
000D76                00021 usart_not3
000D76 0E34           00022     movlw   0x34                   ;ASCII '4'
000D78 6264           00023     cpfseq  RXtemp
000D7A D001           00024     bra     usart_not4
000D7C D006           00025     bra     usart_storeRX
000D7E                00026 usart_not4
000D7E 0E35           00027     movlw   0x35                   ;ASCII '5'
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D80 6264           00028     cpfseq  RXtemp
000D82 D001           00029     bra     usart_not5
000D84 D002           00030     bra     usart_storeRX
000D86                00031 usart_not5
000D86 D00A           00032     bra     usart_OTHER
000D88                00033 usart_doneCheck
000D88 0012           00034     return
                      00035 
000D8A                00036 usart_storeRX
000D8A 0E30           00037     movlw   0x30
000D8C 5E64           00038     subwf   RXtemp,F                ;convert to number
000D8E C064 F011      00039     movff   RXtemp,beaconCount
000D92 C064 F012      00040     movff   RXtemp,beaconCountTmp
000D96 C064 F04E      00041     movff   RXtemp,RPG_count+1
000D9A D7F6           00042     bra     usart_doneCheck
                      00043 
000D9C                00044 usart_OTHER
000D9C 0E47           00045     movlw   0x47                   ;ASCII 'G'.. GO!
000D9E 6264           00046     cpfseq  RXtemp
000DA0 D002           00047     bra     usart_notG
                      00048 
000DA2 6A14           00049     clrf    momBtnPressed
                      00050 
000DA4 0012           00051     return
000DA6                00052 usart_notG
000DA6 0E50           00053     movlw   0x50                   ;ASCII 'P'.. Pause
000DA8 6264           00054     cpfseq  RXtemp
000DAA D001           00055     bra     usart_notP
                      00056 
000DAC 7000           00057     btg     paused,0
                      00058 
000DAE                00059 usart_notP
000DAE 0E4D           00060     movlw   0x4D                   ;ASCII 'M'.. Manual
000DB0 6264           00061     cpfseq  RXtemp
000DB2 D00D           00062     bra     usart_notM
                      00063 
000DB4 7001           00064     btg     manual,0
                      00065 
                      00066     macServo_dirA   FORWARD
000DB6 0E01               M                 movlw   FORWARD
000DB8 EC7C F005          M                 call    servo_dirA
                      00067     macServo_dirB   FORWARD
000DBC 0E01               M                 movlw   FORWARD
000DBE EC7E F005          M                 call    servo_dirB
                      00068     macServo_setA   mASpeed3
000DC2 0E08               M                 movlw   mASpeed3
000DC4 EC68 F005          M                 call    servo_setA
                      00069     macServo_setB   mBSpeed2
000DC8 0E09               M                 movlw   mBSpeed2
000DCA EC72 F005          M                 call    servo_setB
                      00070 
000DCE                00071 usart_notM
000DCE 0E57           00072     movlw   0x57                   ;ASCII 'W' -> go straight
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DD0 6264           00073     cpfseq  RXtemp
000DD2 D00F           00074     bra     usart_notW
                      00075 
000DD4 9289           00076     bcf     LED_RIGHT
000DD6 8489           00077     bsf     LED_CENTER
000DD8 9689           00078     bcf     LED_LEFT
                      00079 
                      00080     macServo_dirA   FORWARD
000DDA 0E01               M                 movlw   FORWARD
000DDC EC7C F005          M                 call    servo_dirA
                      00081     macServo_dirB   FORWARD
000DE0 0E01               M                 movlw   FORWARD
000DE2 EC7E F005          M                 call    servo_dirB
                      00082     macServo_setA   mASpeed3
000DE6 0E08               M                 movlw   mASpeed3
000DE8 EC68 F005          M                 call    servo_setA
                      00083     macServo_setB   mBSpeed2
000DEC 0E09               M                 movlw   mBSpeed2
000DEE EC72 F005          M                 call    servo_setB
                      00084 
000DF2                00085 usart_notW
000DF2 0E41           00086     movlw   0x41                   ;ASCII 'A' -> go left
000DF4 6264           00087     cpfseq  RXtemp
000DF6 D00F           00088     bra     usart_notA
                      00089 
000DF8 8289           00090     bsf     LED_RIGHT
000DFA 9489           00091     bcf     LED_CENTER
000DFC 9689           00092     bcf     LED_LEFT
                      00093 
                      00094     macServo_dirA   REVERSE
000DFE 0E00               M                 movlw   REVERSE
000E00 EC7C F005          M                 call    servo_dirA
                      00095     macServo_dirB   FORWARD
000E04 0E01               M                 movlw   FORWARD
000E06 EC7E F005          M                 call    servo_dirB
                      00096     macServo_setA   mBSpeed2
000E0A 0E09               M                 movlw   mBSpeed2
000E0C EC68 F005          M                 call    servo_setA
                      00097     macServo_setB   mBSpeed3
000E10 0E0C               M                 movlw   mBSpeed3
000E12 EC72 F005          M                 call    servo_setB
                      00098 
000E16                00099 usart_notA
000E16 0E5A           00100     movlw   0x5A                   ;ASCII 'Z' -> go backwards
000E18 6264           00101     cpfseq  RXtemp
000E1A D00F           00102     bra     usart_notZ
                      00103 
000E1C 8289           00104     bsf     LED_RIGHT
000E1E 9489           00105     bcf     LED_CENTER
000E20 9689           00106     bcf     LED_LEFT
                      00107 
                      00108     macServo_dirA   REVERSE
000E22 0E00               M                 movlw   REVERSE
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E24 EC7C F005          M                 call    servo_dirA
                      00109     macServo_dirB   REVERSE
000E28 0E00               M                 movlw   REVERSE
000E2A EC7E F005          M                 call    servo_dirB
                      00110     macServo_setA   mBSpeed2
000E2E 0E09               M                 movlw   mBSpeed2
000E30 EC68 F005          M                 call    servo_setA
                      00111     macServo_setB   mBSpeed3
000E34 0E0C               M                 movlw   mBSpeed3
000E36 EC72 F005          M                 call    servo_setB
                      00112 
000E3A                00113 usart_notZ
000E3A 0E53           00114     movlw   0x53                   ;ASCII 'S' -> go right
000E3C 6264           00115     cpfseq  RXtemp
000E3E 0012           00116     return
                      00117 
000E40 9289           00118     bcf     LED_RIGHT
000E42 9489           00119     bcf     LED_CENTER
000E44 8689           00120     bsf     LED_LEFT
                      00121 
                      00122     macServo_dirA   FORWARD
000E46 0E01               M                 movlw   FORWARD
000E48 EC7C F005          M                 call    servo_dirA
                      00123     macServo_dirB   REVERSE
000E4C 0E00               M                 movlw   REVERSE
000E4E EC7E F005          M                 call    servo_dirB
                      00124     macServo_setA   mASpeed3
000E52 0E08               M                 movlw   mASpeed3
000E54 EC68 F005          M                 call    servo_setA
                      00125     macServo_setB   mBSpeed2
000E58 0E09               M                 movlw   mBSpeed2
000E5A EC72 F005          M                 call    servo_setB
                      00126 
000E5E 0012           00127     return
                      00128 
                      00129 
000E60                00130 usart_sendFreq
                      00131 
                      00132 ;    decf    event_sendTX
                      00133 
000E60 503D           00134     movf    BCDunpacked+2, W
000E62 0F30           00135     addlw   0x30
000E64 6EAD           00136     movwf   TXREG
                      00137 
                      00138     delayXm 2
                          M         movlf   2,delay_multi
000E66 0E02               M         movlw    2
000E68 6E42               M         movwf    delay_multi
000E6A EC4F F005          M         call    delayms
                      00139 
000E6E 503E           00140     movf    BCDunpacked+3, W
000E70 0F30           00141     addlw   0x30
000E72 6EAD           00142     movwf   TXREG
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00143 
                      00144     delayXm 2
                          M         movlf   2,delay_multi
000E74 0E02               M         movlw    2
000E76 6E42               M         movwf    delay_multi
000E78 EC4F F005          M         call    delayms
                      00145 
000E7C 503F           00146     movf    BCDunpacked+4, W
000E7E 0F30           00147     addlw   0x30
000E80 6EAD           00148     movwf   TXREG
                      00149 
                      00150     delayXm 2
                          M         movlf   2,delay_multi
000E82 0E02               M         movlw    2
000E84 6E42               M         movwf    delay_multi
000E86 EC4F F005          M         call    delayms
                      00151 
000E8A 5040           00152     movf    BCDunpacked+5, W
000E8C 0F30           00153     addlw   0x30
000E8E 6EAD           00154     movwf   TXREG
                      00155 
                      00156     delayXm 2
                          M         movlf   2,delay_multi
000E90 0E02               M         movlw    2
000E92 6E42               M         movwf    delay_multi
000E94 EC4F F005          M         call    delayms
                      00157 
                      00158     movlf   0x0A, W
000E98 0E0A               M         movlw    0x0A
000E9A 6E00               M         movwf    W
000E9C 6EAD           00159     movwf   TXREG
                      00160 
                      00161     delayXm 2
                          M         movlf   2,delay_multi
000E9E 0E02               M         movlw    2
000EA0 6E42               M         movwf    delay_multi
000EA2 EC4F F005          M         call    delayms
                      00162 
                      00163     movlf   0x0D, W
000EA6 0E0D               M         movlw    0x0D
000EA8 6E00               M         movwf    W
000EAA 6EAD           00164     movwf   TXREG
                      00165 
                      00166     delayXm 4
                          M         movlf   4,delay_multi
000EAC 0E04               M         movlw    4
000EAE 6E42               M         movwf    delay_multi
000EB0 EC4F F005          M         call    delayms
000EB4 0012           00167     return
                      00540 
                      00541 ;----------------------------------------------------
                      00542 ;   High Priority Interrupt Service Routine
                      00543 ;----------------------------------------------------
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EB6                00544 ISR_high
000EB6 CFD8 F003      00545     movff   STATUS,tmp_STATUS
000EBA 6E02           00546     movwf   tmp_W                   ;save context
                      00547 
000EBC B4F2           00548     btfsc   INTCON,TMR0IF   ;if timer0 int flag is clear, skip and go to timer1 int
000EBE D002           00549     bra     ISR_high_pri0
000EC0 D016           00550     bra     ISR_high_pri1
000EC2 D039           00551     bra     ISR_high_done
                      00552 
000EC4                00553 ISR_high_pri0 ;20us
000EC4 9889           00554     bcf     LED_ALIVE               ;turn on alive LED
                      00555 
                      00556     ;reset timer with compensation for time past
000EC6 CFD6 F00E      00557     movff   TMR0L, tmp0l
000ECA 0ED8           00558     movlw   low mainTimerAdj
000ECC 260E           00559     addwf   tmp0l, F
000ECE C00E FFD6      00560     movff   tmp0l, TMR0L
                      00561 
                      00562     ;decrement delay timer
000ED2 0641           00563     decf    delay_count_us
                      00564 
                      00565     ;decrement servo counters;
000ED4 6647           00566     tstfsz  mAcounter
000ED6 0647           00567     decf    mAcounter
000ED8 6648           00568     tstfsz  mBcounter
000EDA 0648           00569     decf    mBcounter
                      00570 
                      00571     ;decrement utlrasonic counters
000EDC 664F           00572     tstfsz  pulseLenTimer
000EDE 064F           00573     decf    pulseLenTimer
                      00574 
                      00575 
000EE0 0EFE           00576     movlw   d'254'                      ;see if counter has reached 254
000EE2 6052           00577     cpfslt  ultraSonicCounter+1
000EE4 80F0           00578     bsf     INTCON3,INT1IF
000EE6 4A52           00579     infsnz  ultraSonicCounter+1       ;count 20us iterations until return signal
000EE8 2A51           00580     incf    ultraSonicCounter
                      00581 
000EEA 94F2           00582     bcf     INTCON,TMR0IF           ;clear interrupt flag
000EEC D024           00583     bra     ISR_high_done
                      00584 
000EEE                00585 ISR_high_pri1 ;20ms
000EEE CFCE F00F      00586     movff   TMR1L, tmp1l
000EF2 CFCF F010      00587     movff   TMR1H, tmp1h
000EF6 0E83           00588     movlw   low servoTimerAdj
000EF8 260F           00589     addwf   tmp1l, F
000EFA 0EE7           00590     movlw   high servoTimerAdj
000EFC 2210           00591     addwfc  tmp1h, F
000EFE C010 FFCF      00592     movff   tmp1h, TMR1H
000F02 C00F FFCE      00593     movff   tmp1l, TMR1L
                      00594 
                      00595     ;decrement RPG event timers
000F06 0604           00596     decf    event_RPGbeacons        ;either 0 or 1(execute)
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F08 6604           00597     tstfsz  event_RPGbeacons        ;0?
000F0A 6A04           00598     clrf    event_RPGbeacons        ;should be 0, if not, clear
000F0C 6605           00599     tstfsz  event_printBeacons
000F0E 0605           00600     decf    event_printBeacons
                      00601 
                      00602     ;decrement motor counters
000F10 8A8A           00603     bsf     MOTORA
000F12 C043 F047      00604     movff   mASpeed,mAcounter
000F16 888A           00605     bsf     MOTORB
000F18 C045 F048      00606     movff   mBSpeed,mBcounter
                      00607 
000F1C 665B           00608     tstfsz  rightTime
000F1E 065B           00609     decf    rightTime
000F20 665C           00610     tstfsz  leftTime
000F22 065C           00611     decf    leftTime
                      00612 
                      00613     ;decrement ultrasonic event timers
000F24 6606           00614     tstfsz  event_ultraA
000F26 0606           00615     decf    event_ultraA
000F28 6607           00616     tstfsz  event_ultraB
000F2A 0607           00617     decf    event_ultraB
                      00618 
                      00619     ;decrement IR sensor event timer
000F2C 6609           00620     tstfsz  event_checkIR
000F2E 0609           00621     decf    event_checkIR
                      00622 
                      00623     ;decrement IR sensor event timer
000F30 660B           00624     tstfsz  event_found
000F32 060B           00625     decf    event_found
                      00626 
000F34 909E           00627     bcf     PIR1,TMR1IF
                      00628 
000F36                00629 ISR_high_done
                      00630     
000F36 8889           00631     bsf     LED_ALIVE               ;turn off alive LED
000F38 5002           00632     movf    tmp_W,W
000F3A C003 FFD8      00633     movff   tmp_STATUS, STATUS      ;restore context
000F3E 0010           00634     retfie
                      00635 
                      00636 
                      00637 ;----------------------------------------------------
                      00638 ;   Low Priority Interrupt Service Routine
                      00639 ;
                      00640 ;   Priority:
                      00641 ;----------------------------------------------------
000F40                00642 ISR_low
000F40 CFD8 F003      00643     movff   STATUS,tmp_STATUS
000F44 6E02           00644     movwf   tmp_W                   ;save context
                      00645 
000F46 B49E           00646     btfsc   PIR1, CCP1IF            ;did ccp fire?
000F48 D007           00647     bra     ISR_CCP1
000F4A B0F0           00648     btfsc   INTCON3, INT1IF         ;if ext int1, ultraA
000F4C D015           00649     bra     ISR_ultraA
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F4E B2F0           00650     btfsc   INTCON3, INT2IF         ;if ext int2, ultraB
000F50 D01B           00651     bra     ISR_ultraB
000F52 BA9E           00652     btfsc   PIR1,RCIF               ;has USART received data?
000F54 D021           00653     bra     ISR_usartRX
                      00654 ;    btfsc   PIR1, TXIF
                      00655 ;    bra     ISR_usartTX
000F56 D028           00656     bra     ISR_low_done
                      00657 
000F58                00658 ISR_CCP1
000F58 C05F F061      00659     movff   IR_currentVal+1,IR_prevVal+1    ;save previous value from CCP
000F5C C05E F060      00660     movff   IR_currentVal,IR_prevVal
000F60 CFBE F05F      00661     movff   CCPR1L, IR_currentVal+1         ;get value from CCP
000F64 CFBF F05E      00662     movff   CCPR1H, IR_currentVal
                      00663 
000F68 660B           00664     tstfsz  event_found             ;has the robot already found a beacon?
000F6A D004           00665     bra     CCPdone                 ;if yes, finish ISR
000F6C D000           00666     bra     setFound                ;else set timer
                      00667 
000F6E                00668 setFound
                      00669     movlf   d'200',event_found      ;stop robot when it finds a beacon
000F6E 0EC8               M         movlw    d'200'
000F70 6E0B               M         movwf    event_found
000F72 6A0C           00670     clrf    event_sendTX            ;set flag to start USART transmit
                      00671 
000F74                00672 CCPdone
000F74 949E           00673     bcf     PIR1, CCP1IF            ;reset interrupt flag
000F76 D018           00674     bra     ISR_low_done
                      00675 
000F78                00676 ISR_ultraA
000F78 6657           00677     tstfsz  ultraTest
000F7A D014           00678     bra     ISR_low_doneU
000F7C 6857           00679     setf    ultraTest
                      00680 
000F7E C051 F053      00681     movff   ultraSonicCounter,ultraCurrentA
000F82 C052 F054      00682     movff   ultraSonicCounter+1,ultraCurrentA+1
000F86 D00E           00683     bra     ISR_low_doneU
                      00684 
000F88                00685 ISR_ultraB
000F88 6658           00686     tstfsz  ultraTest2
000F8A D00C           00687     bra     ISR_low_doneU
000F8C 6858           00688     setf    ultraTest2
                      00689 
000F8E C051 F055      00690     movff   ultraSonicCounter,ultraCurrentB
000F92 C052 F056      00691     movff   ultraSonicCounter+1,ultraCurrentB+1
000F96 D006           00692     bra     ISR_low_doneU
                      00693 
000F98                00694 ISR_usartRX
000F98 CFAE F064      00695     movff   RCREG,RXtemp            ;store data
                      00696 
000F9C ECAF F006      00697     call    usart_checkRX
                      00698 
000FA0 9A9E           00699     bcf     PIR1,RCIF
000FA2 D002           00700     bra     ISR_low_done
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00701 
000FA4                00702 ISR_low_doneU
000FA4 90F0           00703     bcf     INTCON3, INT1IF
000FA6 92F0           00704     bcf     INTCON3, INT2IF
000FA8                00705 ISR_low_done
000FA8 5002           00706     movf    tmp_W,W
000FAA C003 FFD8      00707     movff   tmp_STATUS, STATUS     ;restore context
000FAE 0010           00708     retfie
                      00709 
000FB0                00710 progEnd
000FB0 EFD8 F007      00711         goto    $                       ;stop
                      00712 
                      00713 ;----------------------------------------------------
                      00714 ;   Strings
                      00715 ;----------------------------------------------------
000FB4 6542 6361 6E6F 00716 mess_Beacons    da  "Beacons", 0x00
       0073 0000 
000FBE 6553 7261 6863 00717 mess_Search     da  "Search", 0x00
       0000 
                      00718 
                      00719         end
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 67


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
AARGB0                            00000016
AARGB1                            00000017
AARGB2                            00000018
AARGB3                            00000019
AARGB4                            0000001A
AARGB5                            0000001B
AARGB6                            0000001C
AARGB7                            0000001D
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
AEXP                              00000015
AN0                               00000000
AN1                               00000001
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN5                               00000000
AN6                               00000001
AN7                               00000002
BANKED                            00000001
BARGB0                            0000001F
BARGB1                            00000020
BARGB2                            00000021
BARGB3                            00000022
BCD_count                         0000003A
BCDconv                           00000035
BCDunpacked                       0000003B
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BEXP                              0000001E
BF                                00000000
BOR                               00000000
BRGH                              00000002
BSR                               00000FE0
Bin2BCD                           00000A30
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 68


SYMBOL TABLE
  LABEL                             VALUE 

C                                 00000000
CARGB0                            00000024
CARGB1                            00000025
CARGB2                            00000026
CARGB3                            00000027
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2A                             00000003
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCP2_DDRB                         00000003
CCP2_DDRC                         00000001
CCP2_PORTB                        00000003
CCP2_PORTC                        00000001
CCP2_TRISB                        00000003
CCP2_TRISC                        00000001
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000FBB
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CCPdone                           00000F74
CEXP                              00000023
CFGS                              00000006
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CK                                00000006
CKE                               00000006
CKP                               00000004
CLKO                              00000006
CREN                              00000004
CS                                00000002
CSRC                              00000007
D                                 00000005
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 69


SYMBOL TABLE
  LABEL                             VALUE 

D1616AGEB                         00000570
D1616B0GT0                        00000558
D1616QOK                          000005F0
D1616QZERO                        00000434
D1616UNRMOK                       000005C8
D1616UQOK                         000005DC
D2416AGTB                         00000630
D2416BGT1                         00000614
D2416FIXREM                       0000072E
D2416QOK                          00000718
D2416REMOK                        00000754
D2416ULOOP                        000006A4
D2416UNRMOK                       00000692
D2416UQOK                         000006EE
D2416UQTEST                       000006C4
D2424QZERO                        0000042E
D3216AGTB                         0000079E
D3216BGT1                         0000077A
D3216FIXREM                       000008B2
D3216QOK                          00000894
D3216REMOK                        000008D8
D3216ULOOP                        00000822
D3216UNRMOK                       00000810
D3216UQOK                         0000086A
D3216UQTEST                       00000840
D3232QZERO                        00000428
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DCCPX                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DGETNRMD                          00000406
DGETNRMDH                         0000041C
DGETNRMDL                         0000040C
DOM                               00000005
DONE                              00000002
DREMZERO8                         00000442
D_A                               00000005
D_NOT_A                           00000005
EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 70


SYMBOL TABLE
  LABEL                             VALUE 

EEPGD                             00000007
EXPBIAS                           0000007F
FAST                              00000001
FDZ                               00000003
FERR                              00000002
FORWARD                           00000001
FOV                               00000001
FPFLAGS                           00000031
FREE                              00000004
FRONT_SENSOR                      navFlag1,0
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
FUN                               00000002
FXD1608U                          00000446
FXD1608U1                         0000044E
FXD1608U2                         00000460
FXD1616U                          00000544
FXD2408U                          00000512
FXD2416U                          000005FA
FXD3208U                          000004C8
FXD3216U                          00000760
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DAT                           00000005
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
IBXTBL256                         00000204
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 71


SYMBOL TABLE
  LABEL                             VALUE 

INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON1                           00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
IOV                               00000000
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRVST                             00000005
IR_check                          00000CD2
IR_currentVal                     0000005E
IR_displayFreq                    00000D1C
IR_done                           00000D14
IR_freq                           00000062
IR_prevVal                        00000060
ISR_CCP1                          00000F58
ISR_high                          00000EB6
ISR_high_done                     00000F36
ISR_high_pri0                     00000EC4
ISR_high_pri1                     00000EEE
ISR_low                           00000F40
ISR_low_done                      00000FA8
ISR_low_doneU                     00000FA4
ISR_ultraA                        00000F78
ISR_ultraB                        00000F88
ISR_usartRX                       00000F98
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 72


SYMBOL TABLE
  LABEL                             VALUE 

LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC3                             00000003
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
LATD                              00000F8C
LATD0                             00000000
LATD1                             00000001
LATD2                             00000002
LATD3                             00000003
LATD4                             00000004
LATD5                             00000005
LATD6                             00000006
LATD7                             00000007
LATE                              00000F8D
LATE0                             00000000
LATE1                             00000001
LATE2                             00000002
LCD_E                             LATE,1
LCD_RS                            LATE,0
LCD_clear                         000009F4
LCD_printChar                     00000992
LCD_printHex                      00000978
LCD_printString                   00000982
LCD_returnHome                    000009D8
LCD_send                          00000A10
LCD_send2                         00000A1A
LCD_setAddr                       000009A4
LCD_shiftLCD                      000009B6
LCD_shiftRight                    000009C4
LCD_shiftSend                     000009C6
LCD_shift_count                   00000034
LCD_shift_dir                     00000033
LCDinit                           000008E8
LED_ALIVE                         LATA,4
LED_CENTER                        LATA,2
LED_LEFT                          LATA,3
LED_RIGHT                         LATA,1
LOSSTHR24B0                       00000049
LOSSTHR24B1                       00000010
LOSSTHR24EXP                      0000008A
LOSSTHR32B0                       00000049
LOSSTHR32B1                       0000000F
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 73


SYMBOL TABLE
  LABEL                             VALUE 

LOSSTHR32B2                       000000DB
LOSSTHR32EXP                      0000008A
LSB                               00000000
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
MACHEP24B0                        00000000
MACHEP24B1                        00000000
MACHEP24EXP                       0000006F
MACHEP32B0                        00000000
MACHEP32B1                        00000000
MACHEP32B2                        00000000
MACHEP32EXP                       00000067
MAXLOG1024B0                      0000001A
MAXLOG1024B1                      00000021
MAXLOG1024EXP                     00000084
MAXLOG1032B0                      0000001A
MAXLOG1032B1                      00000020
MAXLOG1032B2                      0000009B
MAXLOG1032EXP                     00000084
MAXLOG24B0                        00000031
MAXLOG24B1                        00000072
MAXLOG24EXP                       00000085
MAXLOG32B0                        00000031
MAXLOG32B1                        00000072
MAXLOG32B2                        00000018
MAXLOG32EXP                       00000085
MAXNUM24B0                        0000007F
MAXNUM24B1                        000000FF
MAXNUM24EXP                       000000FF
MAXNUM32B0                        0000007F
MAXNUM32B1                        000000FF
MAXNUM32B2                        000000FF
MAXNUM32EXP                       000000FF
MINLOG1024B0                      00000097
MINLOG1024B1                      000000B8
MINLOG1024EXP                     00000084
MINLOG1032B0                      00000097
MINLOG1032B1                      000000B8
MINLOG1032B2                      00000018
MINLOG1032EXP                     00000084
MINLOG24B0                        000000AE
MINLOG24B1                        000000AC
MINLOG24EXP                       00000085
MINLOG32B0                        000000AE
MINLOG32B1                        000000AC
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 74


SYMBOL TABLE
  LABEL                             VALUE 

MINLOG32B2                        00000050
MINLOG32EXP                       00000085
MINNUM24B0                        00000000
MINNUM24B1                        00000000
MINNUM24EXP                       00000001
MINNUM32B0                        00000000
MINNUM32B1                        00000000
MINNUM32B2                        00000000
MINNUM32EXP                       00000001
MODE                              navFlag1,7
MOM_BTN                           PORTD,3
MOTORA                            LATB,5
MOTORB                            LATB,4
MSB                               00000007
N                                 00000004
NAN                               00000004
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_IPEN                          00000007
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_RI                            00000004
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OSC2                              00000006
OSCCON                            00000FD3
OV                                00000003
P                                 00000004
PC                                00000FF9
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 75


SYMBOL TABLE
  LABEL                             VALUE 

PIE1                              00000F9D
PIE2                              00000FA0
PIR1                              00000F9E
PIR2                              00000FA1
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PSA                               00000003
PSP0                              00000000
PSP1                              00000001
PSP2                              00000002
PSP3                              00000003
PSP4                              00000004
PSP5                              00000005
PSP6                              00000006
PSP7                              00000007
PSPIE                             00000007
PSPIF                             00000007
PSPIP                             00000007
PSPMODE                           00000004
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 76


SYMBOL TABLE
  LABEL                             VALUE 

RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
REMB0                             0000001A
REMB1                             0000001B
REMB2                             0000001C
REMB3                             0000001D
REVERSE                           00000000
RI                                00000004
RND                               00000006
RPG_A                             PORTD,0
RPG_B                             PORTD,1
RPG_calcCCW                       00000B32
RPG_ccw                           0000004A
RPG_ccwDir                        00000B26
RPG_changed                       00000B1E
RPG_check                         00000B12
RPG_count                         0000004D
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 77


SYMBOL TABLE
  LABEL                             VALUE 

RPG_cwDir                         00000B2C
RPG_dec                           00000B46
RPG_decDone                       00000B50
RPG_doneCheck                     00000B30
RPG_doneNext                      00000B40
RPG_get                           00000B00
RPG_inc                           00000B52
RPG_prev                          0000004C
RPG_resetCount                    00000B58
RPG_setz                          00000B3E
RPG_sig                           0000004B
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXtemp                            00000064
R_NOT_W                           00000002
R_W                               00000002
S                                 00000003
SAT                               00000007
SCK                               00000003
SCL                               00000003
SCOPE_PIN                         LATE,2
SCS                               00000000
SDA                               00000004
SDI                               00000004
SDO                               00000005
SEN                               00000000
SIDE_SENSOR_CLOSE                 navFlag1,2
SIDE_SENSOR_FAR                   navFlag1,3
SIGN                              00000030
SMP                               00000007
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPEN                              00000007
SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 78


SYMBOL TABLE
  LABEL                             VALUE 

SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKPTR0                           00000000
STKPTR1                           00000001
STKPTR2                           00000002
STKPTR3                           00000003
STKPTR4                           00000004
STKUNF                            00000006
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0IP                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0SE                              00000004
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1INSYNC                          00000002
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3INSYNC                          00000002
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TEMP                              0000002C
TEMPB0                            0000002C
TEMPB1                            0000002D
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 79


SYMBOL TABLE
  LABEL                             VALUE 

TEMPB2                            0000002E
TEMPB3                            0000002F
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 80


SYMBOL TABLE
  LABEL                             VALUE 

TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000F95
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX                                00000006
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
UA                                00000001
ULTRA_TRIG                        LATB,3
ULTRA_TRIG_R                      PORTB,3
VREFM                             00000002
VREFP                             00000003
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
Z                                 00000002
ZARGB0                            00000028
ZARGB1                            00000029
ZARGB2                            0000002A
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 81


SYMBOL TABLE
  LABEL                             VALUE 

ZARGB3                            0000002B
_BORV_20                          000000FF
_BORV_20_2L                       000000FF
_BORV_27_2L                       000000FB
_BORV_42_2L                       000000F7
_BORV_45_2L                       000000F3
_BOR_OFF_2L                       000000FD
_BOR_ON_2L                        000000FF
_C                                STATUS,0
_CCP2MX_OFF                       000000FE
_CCP2MX_OFF_3H                    000000FE
_CCP2MX_ON                        000000FF
_CCP2MX_ON_3H                     000000FF
_CONFIG1H                         00300001
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CP2_OFF_5L                       000000FF
_CP2_ON_5L                        000000FB
_CP3_OFF_5L                       000000FF
_CP3_ON_5L                        000000F7
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_DC                               STATUS,1
_DEBUG_OFF_4L                     000000FF
_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTR2_OFF_7L                     000000FF
_EBTR2_ON_7L                      000000FB
_EBTR3_OFF_7L                     000000FF
_EBTR3_ON_7L                      000000F7
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_ECIO_OSC                         000000FD
_ECIO_OSC_1H                      000000FD
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 82


SYMBOL TABLE
  LABEL                             VALUE 

_EC_OSC                           000000FC
_EC_OSC_1H                        000000FC
_FXD1608U                         
_FXD1616U                         
_FXD2408U                         
_FXD2416U                         
_FXD3208U                         
_FXD3216U                         
_HSPLL_OSC                        000000FE
_HSPLL_OSC_1H                     000000FE
_HS_OSC                           000000FA
_HS_OSC_1H                        000000FA
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_LP_OSC                           000000F8
_LP_OSC_1H                        000000F8
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_OSCS_OFF_1H                      000000FF
_OSCS_ON_1H                       000000DF
_OV                               STATUS,3
_PWRT_OFF_2L                      000000FF
_PWRT_ON_2L                       000000FE
_RCIO_OSC                         000000FF
_RCIO_OSC_1H                      000000FF
_RC_OSC                           000000FB
_RC_OSC_1H                        000000FB
_STVR_OFF_4L                      000000FE
_STVR_ON_4L                       000000FF
_TBL256                           
_UTILS                            
_WDTPS_128_2H                     000000FF
_WDTPS_16_2H                      000000F9
_WDTPS_1_2H                       000000F1
_WDTPS_2_2H                       000000F3
_WDTPS_32_2H                      000000FB
_WDTPS_4_2H                       000000F5
_WDTPS_64_2H                      000000FD
_WDTPS_8_2H                       000000F7
_WDT_OFF_2H                       000000FE
_WDT_ON_2H                        000000FF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRT2_OFF_6L                      000000FF
_WRT2_ON_6L                       000000FB
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 83


SYMBOL TABLE
  LABEL                             VALUE 

_WRT3_OFF_6L                      000000FF
_WRT3_ON_6L                       000000F7
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XT_OSC                           000000F9
_XT_OSC_1H                        000000F9
_Z                                STATUS,2
__18F452                          00000001
beaconCount                       00000011
beaconCountTmp                    00000012
beaconEntry                       0000018E
beaconLoop                        00000086
beaconSetup                       00000154
checkB                            000000E2
checkBDist                        00000B84
checkBeacons                      00000094
checkBtn                          0000009C
checkDist                         00000B7A
checkDistA                        00000B8C
checkDistB                        00000BAE
checkMomBtn                       000001DE
checkPulse                        00000B70
clearBeacons                      000001CC
cont                              00000BAC
delayXm                           
delayXu                           
delay_count_us                    00000041
delay_multi                       00000042
delayms                           00000A9E
delayms_loop                      00000AA2
delayus                           00000A98
doneDistCheck                     00000B88
endBeaconLoop                     000000A4
event_RPGbeacons                  00000004
event_checkDist                   00000008
event_checkIR                     00000009
event_checkUsart                  0000000A
event_displayFreq                 0000000D
event_found                       0000000B
event_printBeacons                00000005
event_sendTX                      0000000C
event_ultraA                      00000006
event_ultraB                      00000007
inLimits                          000001A2
leftTime                          0000005C
loadTBL                           
mADir                             00000044
mASpeed                           00000043
mASpeed0                          0000003A
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 84


SYMBOL TABLE
  LABEL                             VALUE 

mASpeed1                          00000003
mASpeed2                          00000006
mASpeed3                          00000008
mASpeeds                          00000002
mASpeedz                          00000000
mAcounter                         00000047
mBDir                             00000046
mBSpeed                           00000045
mBSpeed0                          0000003C
mBSpeed1                          00000005
mBSpeed2                          00000009
mBSpeed3                          0000000C
mBSpeeds                          00000002
mBSpeedz                          00000000
mBcounter                         00000048
macLCD_printChar                  
macLCD_printHex                   
macLCD_printString                
macLCD_setAddr                    
macLCD_toBCD                      
macServo_dirA                     
macServo_dirB                     
macServo_setA                     
macServo_setB                     
main                              0000001C
mainLoop                          000000A8
mainSetup                         000000FA
mainTimerAdj                      000000D8
manual                            00000001
mess_Beacons                      00000FB4
mess_Search                       00000FBE
momBtnPressed                     00000014
momBtnState                       00000013
movlf                             
navFlag1                          0000005D
nav_avoidWall                     00000C1A
nav_avoidWall_done                00000C64
nav_done                          00000BEE
nav_findWall                      00000C66
nav_findWall_done                 00000CB0
nav_found                         00000BF0
nav_newDir                        00000CB2
nav_notStraight                   00000BE2
nav_step                          00000BD2
nav_straight                      00000BFA
navigate                          00000BC2
noDistCheck                       000000F0
noIRCheck                         000000F8
noSearch                          000000C6
noTrigger                         00000B78
noprint                           0000008E
notHigh                           00000198
notPressed                        00000202
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 85


SYMBOL TABLE
  LABEL                             VALUE 

nullStr                           00000990
paused                            00000000
pressed                           000001EC
printBeacons                      000001B4
printBeaconsLoop                  000001BC
progEnd                           00000FB0
pulseLenTimer                     0000004F
rightTime                         0000005B
rotateAll                         00000A3A
searchTime                        00000059
servoADone                        00000AB2
servoAMain                        00000AAC
servoBDone                        00000AC6
servoBMain                        00000AB4
servoTimerAdj                     0000E783
servoTmp                          00000049
servo_dirA                        00000AF8
servo_dirB                        00000AFC
servo_setA                        00000AD0
servo_setASpeed                   00000AE0
servo_setAfwd                     00000ADC
servo_setB                        00000AE4
servo_setBSpeed                   00000AF4
servo_setBfwd                     00000AF0
servo_stopA                       00000AC8
servo_stopB                       00000ACC
setFound                          00000F6E
setTrigger                        00000B5E
straightLeft                      00000C92
straightRight                     00000C46
tmp0l                             0000000E
tmp1h                             00000010
tmp1l                             0000000F
tmpLCDsend                        00000032
tmp_STATUS                        00000003
tmp_W                             00000002
ultraB_good                       00000BBE
ultraB_tooClose                   00000BBA
ultraBcont                        00000BC0
ultraCurrentA                     00000053
ultraCurrentB                     00000055
ultraPulseTime                    0000000D
ultraSonicCounter                 00000051
ultraTest                         00000057
ultraTest2                        00000058
ultra_sensorSel                   00000050
unpackBCD                         00000A56
usart_OTHER                       00000D9C
usart_checkRX                     00000D5E
usart_doneCheck                   00000D88
usart_not1                        00000D66
usart_not2                        00000D6E
usart_not3                        00000D76
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 86


SYMBOL TABLE
  LABEL                             VALUE 

usart_not4                        00000D7E
usart_not5                        00000D86
usart_notA                        00000E16
usart_notG                        00000DA6
usart_notM                        00000DCE
usart_notP                        00000DAE
usart_notW                        00000DF2
usart_notZ                        00000E3A
usart_sendFreq                    00000E60
usart_storeRX                     00000D8A
wallClose                         00000BA8
wallFar                           00000BA2


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXX----XXXX---- --------XXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM 5.54                          MAIN.ASM   4-17-2014  9:50:25         PAGE 87


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0FC0 : XXXXXX---------- ---------------- ---------------- ----------------
0000 : -XXX-XX-XXXXXX-- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used:  4033
Program Memory Bytes Free: 28735


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

